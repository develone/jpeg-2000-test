// File: catboard.v
// Generated by MyHDL 1.0dev
// Date: Fri Jan 22 23:48:01 2016


`timescale 1ns/10ps

module catboard (
    d0_o,
    d1_o,
    d2_o,
    d3_o,
    d4_o,
    d5_o,
    d6_o,
    d7_o,
    clk_i
);
// Example design for eight-digit counter.
// d0_o, ... d7_o: 3-state outputs to drive the StickIt! LEDDigits board.
// clk_i: Input clock.
// enable_ascii_to_7seg: Set True to interpret input digits as ASCII.
// freq_g: Set to frequency of input clock.

output d0_o;
wire d0_o;
output d1_o;
wire d1_o;
output d2_o;
wire d2_o;
output d3_o;
wire d3_o;
output d4_o;
wire d4_o;
output d5_o;
wire d5_o;
output d6_o;
wire d6_o;
output d7_o;
wire d7_o;
input clk_i;

reg [55:0] cntr;
reg [2:0] disp_seg_cntr;
reg disp_blank;
reg disp_initialized;
reg [7:0] disp_digit_shf;
reg [6:0] disp_segments;
reg [6:0] disp_seg_mask;
reg [7:0] disp_drvr_enbls;
wire [55:0] disp_digit_all_i;
reg [6:0] disp_active_digit;
reg [9:0] disp_seg_timer;
wire [6:0] disp_active_segments;

wire drvrs [0:8-1];

assign disp_digit_all_i = 0;

assign drvrs[7] = disp_inst_8_o_drvr;
assign drvrs[5] = disp_inst_6_o_drvr;
assign drvrs[6] = disp_inst_7_o_drvr;
assign drvrs[2] = disp_inst_3_o_drvr;
assign drvrs[3] = disp_inst_4_o_drvr;
assign drvrs[1] = disp_inst_2_o_drvr;
assign drvrs[0] = disp_inst_1_o_drvr;
assign drvrs[4] = disp_inst_5_o_drvr;


always @(posedge clk_i) begin: CATBOARD_CNTR_LOGIC
    cntr <= (cntr + 1);
end


always @(posedge clk_i) begin: CATBOARD_DISP_SCAN_SEGMENTS_AND_DIGITS
    if ((disp_initialized != 1'b1)) begin
        disp_seg_mask <= 7'b0010101;
        disp_digit_shf <= 8'b00000001;
        disp_initialized <= (!disp_initialized);
    end
    else if ((disp_seg_timer == 0)) begin
        disp_seg_timer <= (597 - 1);
        disp_seg_mask[7-1:1] <= disp_seg_mask[6-1:0];
        disp_seg_mask[0] <= disp_seg_mask[6];
        disp_blank <= (disp_seg_cntr == 1);
        if ((disp_seg_cntr == 0)) begin
            disp_digit_shf[8-1:1] <= disp_digit_shf[7-1:0];
            disp_digit_shf[0] <= disp_digit_shf[7];
            disp_seg_cntr <= (7 - 1);
        end
        else begin
            disp_seg_cntr <= (disp_seg_cntr - 1);
        end
    end
    else begin
        disp_seg_timer <= (disp_seg_timer - 1);
    end
end


always @(disp_digit_shf, disp_active_segments, disp_blank) begin: CATBOARD_DISP_COMBINE_DRIVERS
    if ((disp_blank == 1'b1)) begin
        disp_drvr_enbls = 0;
    end
    else if ((disp_digit_shf[0] == 1)) begin
        disp_drvr_enbls[8-1:1] = disp_active_segments[7-1:0];
        disp_drvr_enbls[0] = 1;
    end
    else if ((disp_digit_shf[1] == 1)) begin
        disp_drvr_enbls[8-1:2] = disp_active_segments[7-1:1];
        disp_drvr_enbls[1] = 1;
        disp_drvr_enbls[0] = disp_active_segments[1-1:0];
    end
    else if ((disp_digit_shf[2] == 1)) begin
        disp_drvr_enbls[8-1:3] = disp_active_segments[7-1:2];
        disp_drvr_enbls[2] = 1;
        disp_drvr_enbls[2-1:0] = disp_active_segments[2-1:0];
    end
    else if ((disp_digit_shf[3] == 1)) begin
        disp_drvr_enbls[8-1:4] = disp_active_segments[7-1:3];
        disp_drvr_enbls[3] = 1;
        disp_drvr_enbls[3-1:0] = disp_active_segments[3-1:0];
    end
    else if ((disp_digit_shf[4] == 1)) begin
        disp_drvr_enbls[8-1:5] = disp_active_segments[7-1:4];
        disp_drvr_enbls[4] = 1;
        disp_drvr_enbls[4-1:0] = disp_active_segments[4-1:0];
    end
    else if ((disp_digit_shf[5] == 1)) begin
        disp_drvr_enbls[8-1:6] = disp_active_segments[7-1:5];
        disp_drvr_enbls[5] = 1;
        disp_drvr_enbls[5-1:0] = disp_active_segments[5-1:0];
    end
    else if ((disp_digit_shf[6] == 1)) begin
        disp_drvr_enbls[8-1:7] = disp_active_segments[7-1:6];
        disp_drvr_enbls[6] = 1;
        disp_drvr_enbls[6-1:0] = disp_active_segments[6-1:0];
    end
    else if ((disp_digit_shf[7] == 1)) begin
        disp_drvr_enbls[7] = 1;
        disp_drvr_enbls[7-1:0] = disp_active_segments[7-1:0];
    end
    else begin
        disp_drvr_enbls = 0;
    end
end



assign disp_active_segments = (disp_segments & disp_seg_mask);


always @(disp_digit_shf, cntr[48-1:44], disp_digit_all_i, cntr[36-1:32], cntr[56-1:52], cntr[52-1:48], cntr[40-1:36], cntr[28-1:24], cntr[44-1:40], cntr[32-1:28]) begin: CATBOARD_DISP_GET_ACTIVE_DIGIT
    if ((disp_digit_shf[0] == 1)) begin
        disp_active_digit = (cntr[28-1:24] | disp_digit_all_i[7-1:0]);
    end
    else if ((disp_digit_shf[1] == 1)) begin
        disp_active_digit = (cntr[32-1:28] | disp_digit_all_i[14-1:7]);
    end
    else if ((disp_digit_shf[2] == 1)) begin
        disp_active_digit = (cntr[36-1:32] | disp_digit_all_i[21-1:14]);
    end
    else if ((disp_digit_shf[3] == 1)) begin
        disp_active_digit = (cntr[40-1:36] | disp_digit_all_i[28-1:21]);
    end
    else if ((disp_digit_shf[4] == 1)) begin
        disp_active_digit = (cntr[44-1:40] | disp_digit_all_i[35-1:28]);
    end
    else if ((disp_digit_shf[5] == 1)) begin
        disp_active_digit = (cntr[48-1:44] | disp_digit_all_i[42-1:35]);
    end
    else if ((disp_digit_shf[6] == 1)) begin
        disp_active_digit = (cntr[52-1:48] | disp_digit_all_i[49-1:42]);
    end
    else if ((disp_digit_shf[7] == 1)) begin
        disp_active_digit = (cntr[56-1:52] | disp_digit_all_i[56-1:49]);
    end
    else begin
        disp_active_digit = 0;
    end
end


always @(disp_active_digit) begin: CATBOARD_DISP_INST_0_LOGIC
    if ((disp_active_digit == 32)) begin
        disp_segments = 7'b0000000;
    end
    else if ((disp_active_digit == 45)) begin
        disp_segments = 7'b1000000;
    end
    else if (((disp_active_digit == 0) || (disp_active_digit == 48))) begin
        disp_segments = 7'b0111111;
    end
    else if (((disp_active_digit == 1) || (disp_active_digit == 49))) begin
        disp_segments = 7'b0000110;
    end
    else if (((disp_active_digit == 2) || (disp_active_digit == 50))) begin
        disp_segments = 7'b1011011;
    end
    else if (((disp_active_digit == 3) || (disp_active_digit == 51))) begin
        disp_segments = 7'b1001111;
    end
    else if (((disp_active_digit == 4) || (disp_active_digit == 52))) begin
        disp_segments = 7'b1100110;
    end
    else if (((disp_active_digit == 5) || (disp_active_digit == 53))) begin
        disp_segments = 7'b1101101;
    end
    else if (((disp_active_digit == 6) || (disp_active_digit == 54))) begin
        disp_segments = 7'b1111101;
    end
    else if (((disp_active_digit == 7) || (disp_active_digit == 55))) begin
        disp_segments = 7'b0000111;
    end
    else if (((disp_active_digit == 8) || (disp_active_digit == 56))) begin
        disp_segments = 7'b1111111;
    end
    else if (((disp_active_digit == 9) || (disp_active_digit == 57))) begin
        disp_segments = 7'b1101111;
    end
    else if (((disp_active_digit == 10) || (disp_active_digit == 65) || (disp_active_digit == 97))) begin
        disp_segments = 7'b1110111;
    end
    else if (((disp_active_digit == 11) || (disp_active_digit == 66) || (disp_active_digit == 98))) begin
        disp_segments = 7'b1111100;
    end
    else if (((disp_active_digit == 12) || (disp_active_digit == 67) || (disp_active_digit == 99))) begin
        disp_segments = 7'b0111001;
    end
    else if (((disp_active_digit == 13) || (disp_active_digit == 68) || (disp_active_digit == 100))) begin
        disp_segments = 7'b1011110;
    end
    else if (((disp_active_digit == 14) || (disp_active_digit == 69) || (disp_active_digit == 101))) begin
        disp_segments = 7'b1111001;
    end
    else if (((disp_active_digit == 15) || (disp_active_digit == 70) || (disp_active_digit == 102))) begin
        disp_segments = 7'b1110001;
    end
    else if (((disp_active_digit == 71) || (disp_active_digit == 103))) begin
        disp_segments = 7'b0111101;
    end
    else if (((disp_active_digit == 72) || (disp_active_digit == 104))) begin
        disp_segments = 7'b1110100;
    end
    else if (((disp_active_digit == 73) || (disp_active_digit == 105))) begin
        disp_segments = 7'b0110000;
    end
    else if (((disp_active_digit == 74) || (disp_active_digit == 106))) begin
        disp_segments = 7'b0011110;
    end
    else if (((disp_active_digit == 75) || (disp_active_digit == 107))) begin
        disp_segments = 7'b0001000;
    end
    else if (((disp_active_digit == 76) || (disp_active_digit == 108))) begin
        disp_segments = 7'b0111000;
    end
    else if (((disp_active_digit == 77) || (disp_active_digit == 109))) begin
        disp_segments = 7'b0001000;
    end
    else if (((disp_active_digit == 78) || (disp_active_digit == 110))) begin
        disp_segments = 7'b1010100;
    end
    else if (((disp_active_digit == 79) || (disp_active_digit == 111))) begin
        disp_segments = 7'b1011100;
    end
    else if (((disp_active_digit == 80) || (disp_active_digit == 112))) begin
        disp_segments = 7'b1110011;
    end
    else if (((disp_active_digit == 81) || (disp_active_digit == 113))) begin
        disp_segments = 7'b0001000;
    end
    else if (((disp_active_digit == 82) || (disp_active_digit == 114))) begin
        disp_segments = 7'b1010000;
    end
    else if (((disp_active_digit == 83) || (disp_active_digit == 115))) begin
        disp_segments = 7'b1101101;
    end
    else if (((disp_active_digit == 84) || (disp_active_digit == 116))) begin
        disp_segments = 7'b1111000;
    end
    else if (((disp_active_digit == 85) || (disp_active_digit == 117))) begin
        disp_segments = 7'b0011100;
    end
    else if (((disp_active_digit == 86) || (disp_active_digit == 118))) begin
        disp_segments = 7'b0001000;
    end
    else if (((disp_active_digit == 87) || (disp_active_digit == 119))) begin
        disp_segments = 7'b0001000;
    end
    else if (((disp_active_digit == 88) || (disp_active_digit == 120))) begin
        disp_segments = 7'b0001000;
    end
    else if (((disp_active_digit == 89) || (disp_active_digit == 121))) begin
        disp_segments = 7'b1101110;
    end
    else if (((disp_active_digit == 90) || (disp_active_digit == 122))) begin
        disp_segments = 7'b0001000;
    end
    else if ((disp_active_digit == 95)) begin
        disp_segments = 7'b0001000;
    end
    else begin
        disp_segments = 7'b0001000;
    end
end



assign disp_inst_1_dummy = (drvrs[0] != 0);


always @(disp_digit_shf[0], disp_drvr_enbls[0]) begin: CATBOARD_DISP_INST_1_DRVR_LOGIC
    if ((disp_drvr_enbls[0] == 1)) begin
        disp_inst_1_o_drvr = disp_digit_shf[0];
    end
    else begin
        disp_inst_1_o_drvr = 'bz;
    end
end



assign disp_inst_2_dummy = (drvrs[1] != 0);


always @(disp_digit_shf[1], disp_drvr_enbls[1]) begin: CATBOARD_DISP_INST_2_DRVR_LOGIC
    if ((disp_drvr_enbls[1] == 1)) begin
        disp_inst_2_o_drvr = disp_digit_shf[1];
    end
    else begin
        disp_inst_2_o_drvr = 'bz;
    end
end



assign disp_inst_3_dummy = (drvrs[2] != 0);


always @(disp_digit_shf[2], disp_drvr_enbls[2]) begin: CATBOARD_DISP_INST_3_DRVR_LOGIC
    if ((disp_drvr_enbls[2] == 1)) begin
        disp_inst_3_o_drvr = disp_digit_shf[2];
    end
    else begin
        disp_inst_3_o_drvr = 'bz;
    end
end



assign disp_inst_4_dummy = (drvrs[3] != 0);


always @(disp_digit_shf[3], disp_drvr_enbls[3]) begin: CATBOARD_DISP_INST_4_DRVR_LOGIC
    if ((disp_drvr_enbls[3] == 1)) begin
        disp_inst_4_o_drvr = disp_digit_shf[3];
    end
    else begin
        disp_inst_4_o_drvr = 'bz;
    end
end



assign disp_inst_5_dummy = (drvrs[4] != 0);


always @(disp_digit_shf[4], disp_drvr_enbls[4]) begin: CATBOARD_DISP_INST_5_DRVR_LOGIC
    if ((disp_drvr_enbls[4] == 1)) begin
        disp_inst_5_o_drvr = disp_digit_shf[4];
    end
    else begin
        disp_inst_5_o_drvr = 'bz;
    end
end



assign disp_inst_6_dummy = (drvrs[5] != 0);


always @(disp_digit_shf[5], disp_drvr_enbls[5]) begin: CATBOARD_DISP_INST_6_DRVR_LOGIC
    if ((disp_drvr_enbls[5] == 1)) begin
        disp_inst_6_o_drvr = disp_digit_shf[5];
    end
    else begin
        disp_inst_6_o_drvr = 'bz;
    end
end



assign disp_inst_7_dummy = (drvrs[6] != 0);


always @(disp_digit_shf[6], disp_drvr_enbls[6]) begin: CATBOARD_DISP_INST_7_DRVR_LOGIC
    if ((disp_drvr_enbls[6] == 1)) begin
        disp_inst_7_o_drvr = disp_digit_shf[6];
    end
    else begin
        disp_inst_7_o_drvr = 'bz;
    end
end



assign disp_inst_8_dummy = (drvrs[7] != 0);


always @(disp_digit_shf[7], disp_drvr_enbls[7]) begin: CATBOARD_DISP_INST_8_DRVR_LOGIC
    if ((disp_drvr_enbls[7] == 1)) begin
        disp_inst_8_o_drvr = disp_digit_shf[7];
    end
    else begin
        disp_inst_8_o_drvr = 'bz;
    end
end



assign d0_o = drvrs[0];
assign d1_o = drvrs[1];
assign d2_o = drvrs[2];
assign d3_o = drvrs[3];
assign d4_o = drvrs[4];
assign d5_o = drvrs[5];
assign d6_o = drvrs[6];
assign d7_o = drvrs[7];

endmodule
