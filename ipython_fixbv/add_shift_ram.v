// File: add_shift_ram.v
// Generated by MyHDL 0.9dev
// Date: Sat Jul 12 11:34:28 2014


`timescale 1ns/10ps

module add_shift_ram (
    clk,
    pix_right,
    pix_we_even,
    pix_p,
    pix_addr_odd,
    pix_fwd_inv,
    pix_addr_even,
    pix_din_even,
    pix_we_odd,
    pix_dout_odd,
    pix_din_odd,
    pix_dout_even,
    pix_even_odd,
    pix_left
);


input clk;
input [9:0] pix_right;
input pix_we_even;
input pix_p;
input [6:0] pix_addr_odd;
input pix_fwd_inv;
input [6:0] pix_addr_even;
output signed [8:0] pix_din_even;
reg signed [8:0] pix_din_even;
input pix_we_odd;
input signed [8:0] pix_dout_odd;
output signed [8:0] pix_din_odd;
reg signed [8:0] pix_din_odd;
input signed [8:0] pix_dout_even;
input pix_even_odd;
input [9:0] pix_left;






always @(posedge clk) begin: ADD_SHIFT_RAM_HDL
    if ((!pix_p)) begin
        if (pix_even_odd) begin
            if (pix_fwd_inv) begin
                pix_din_even <= (pix_right - ((pix_left >>> 1) + (pix_right >>> 1)));
            end
            else begin
                pix_din_odd <= (((pix_left + pix_right) + 2) >>> 2);
            end
        end
        else begin
            if (pix_fwd_inv) begin
                pix_din_odd <= (((pix_left + pix_right) + 2) >>> 2);
            end
            else begin
                pix_din_even <= (pix_right - ((pix_left >>> 1) + (pix_right >>> 1)));
            end
        end
    end
    else begin
        if (pix_even_odd) begin
            if (pix_fwd_inv) begin
                pix_din_even <= (pix_right - ((pix_left >>> 1) + (pix_right >>> 1)));
            end
            else begin
                pix_din_odd <= (((pix_left + pix_right) + 2) >>> 2);
            end
        end
        else begin
            if (pix_fwd_inv) begin
                pix_din_odd <= (((pix_left + pix_right) + 2) >>> 2);
            end
            else begin
                pix_din_even <= (pix_right - ((pix_left >>> 1) + (pix_right >>> 1)));
            end
        end
    end
end

endmodule
