-- File: jpeg.vhd
-- Generated by MyHDL 0.9dev
-- Date: Mon Aug 11 10:34:39 2014


library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;
use std.textio.all;

use work.pck_myhdl_09.all;

entity jpeg is
    port (
        clk_i: in std_logic;
        left_i: in signed (17 downto 0);
        right_i: in signed (17 downto 0);
        sam_i: in signed (17 downto 0);
        updated_i: in std_logic;
        even_odd_i: in std_logic;
        fwd_inv_i: in std_logic;
        noupdate_o: out std_logic;
        res_o: out signed (17 downto 0)
    );
end entity jpeg;


architecture MyHDL of jpeg is






begin




JPEG_HDL: process (clk_i) is
begin
    if rising_edge(clk_i) then
        if (updated_i = '1') then
            if bool(even_odd_i) then
                if bool(fwd_inv_i) then
                    res_o <= (sam_i - (shift_right(left_i, 1) + shift_right(right_i, 1)));
                else
                    res_o <= (sam_i + (shift_right(left_i, 1) + shift_right(right_i, 1)));
                end if;
            else
                if bool(fwd_inv_i) then
                    res_o <= shift_right((sam_i + ((left_i + right_i) + 2)), 2);
                else
                    res_o <= shift_right((sam_i - ((left_i + right_i) + 2)), 2);
                end if;
            end if;
        else
            noupdate_o <= '1';
        end if;
    end if;
end process JPEG_HDL;

end architecture MyHDL;
