// File: add_mul.v
// Generated by MyHDL 0.9dev
// Date: Wed Jun 25 18:51:03 2014


`timescale 1ns/10ps

module add_mul (
    d3,
    a2,
    clk,
    x2,
    x3,
    x4,
    x5,
    p,
    odd_even
);


input signed [23:0] d3;
input signed [23:0] a2;
input clk;
input signed [23:0] x2;
input signed [23:0] x3;
input signed [23:0] x4;
input signed [23:0] x5;
input p;
input odd_even;






always @(posedge clk) begin: ADD_MUL_RTL
    reg signed [36-1:0] ca3;
    reg signed [36-1:0] ca2;
    reg signed [36-1:0] ca1;
    reg signed [36-1:0] ca4;
    integer t;
    integer t1;
    if ((!p)) begin
        if (odd_even) begin
            ca1 = fixbv((-1.586134342));
            t = ((x2 + x3) * ca1);
        end
        else begin
            ca2 = fixbv((-0.05298011854));
            t1 = ((x4 + x5) * ca2);
        end
    end
    else begin
        if (odd_even) begin
            ca3 = fixbv(0.8829110762);
            t = ((x2 + x3) * ca3);
        end
        else begin
            ca4 = fixbv(0.4435068522);
            t1 = ((x4 + x5) * ca4);
        end
    end
end

endmodule
