// File: ram_even.v
// Generated by MyHDL 0.9dev
// Date: Wed Jul  9 09:47:17 2014


`timescale 1ns/10ps

module ram_even (
    clk,
    pix_dout_even1,
    pix_right,
    pix_left1,
    pix_addr_odd1,
    pix_addr_even1,
    pix_we_even,
    pix_addr_even,
    pix_right1,
    pix_dout_odd1,
    pix_din_even1,
    pix_dout_odd,
    pix_din_odd,
    pix_even_odd,
    pix_we_even1,
    pix_din_odd1,
    pix_fwd_inv,
    pix_din_even,
    pix_dout_even,
    pix_we_odd1,
    pix_p,
    pix_addr_odd,
    pix_we_odd,
    pix_left
);
// Ram model 

input clk;
output signed [25:0] pix_dout_even1;
wire signed [25:0] pix_dout_even1;
input signed [25:0] pix_right;
input signed [25:0] pix_left1;
input [6:0] pix_addr_odd1;
input [6:0] pix_addr_even1;
input pix_we_even;
input [6:0] pix_addr_even;
input signed [25:0] pix_right1;
output signed [25:0] pix_dout_odd1;
wire signed [25:0] pix_dout_odd1;
input signed [25:0] pix_din_even1;
output signed [25:0] pix_dout_odd;
wire signed [25:0] pix_dout_odd;
input signed [25:0] pix_din_odd;
input pix_even_odd;
input pix_we_even1;
input signed [25:0] pix_din_odd1;
input pix_fwd_inv;
input signed [25:0] pix_din_even;
output signed [25:0] pix_dout_even;
wire signed [25:0] pix_dout_even;
input pix_we_odd1;
input pix_p;
input [6:0] pix_addr_odd;
input pix_we_odd;
input signed [25:0] pix_left;


reg signed [25:0] mem_even [0:128-1];




always @(posedge clk) begin: RAM_EVEN_WRITE_EVEN
    if (pix_we_even) begin
        mem_even[pix_addr_even] <= pix_din_even;
    end
end



assign pix_dout_even = mem_even[pix_addr_even];

endmodule
