$date
	Tue Jun 10 09:34:40 2014
$end
$version
	Icarus Verilog
$end
$timescale
	10ps
$end
$scope module tb_eq_d_c1 $end
$var wire 19 ! a2 [18:0] $end
$var wire 19 " d3 [18:0] $end
$var reg 1 # clk $end
$var reg 19 $ x2 [18:0] $end
$var reg 19 % x3 [18:0] $end
$var reg 19 & x4 [18:0] $end
$scope module dut $end
$var wire 1 ' clk $end
$var wire 19 ( x2 [18:0] $end
$var wire 19 ) x3 [18:0] $end
$var wire 19 * x4 [18:0] $end
$var reg 19 + a2 [18:0] $end
$var reg 19 , d3 [18:0] $end
$scope begin EQ_D_C1_EQ_LOGIC $end
$var integer 32 - t1 [31:0] $end
$var integer 32 . t2 [31:0] $end
$var integer 32 / t3 [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx /
bx .
bx -
bx ,
bx +
bx *
bx )
bx (
0'
bx &
bx %
bx $
0#
bx "
bx !
$end
#500
1#
1'
#1000
0#
0'
#1500
1#
1'
#1700
b11001101 $
b11001101 (
#2000
0#
0'
#2500
1#
1'
#3000
0#
0'
#3200
b11001111 %
b11001111 )
#3500
1#
1'
#4000
0#
0'
#4500
1#
1'
#4600
b10110011 &
b10110011 *
#5000
0#
0'
#5500
b100001000 +
b100001000 !
b1111 ,
b1111 "
b100001000 /
b1111 .
b101100 -
1#
1'
#6000
0#
0'
#6500
b100001101 +
b100001101 !
b1010 ,
b1010 "
b100001101 /
b1010 .
b101100 -
1#
1'
b11010111 $
b11010111 (
#7000
0#
0'
#7500
b101100 -
1#
1'
#8000
0#
0'
#8200
b10111110 %
b10111110 )
#8500
b11111100 +
b11111100 !
b1111111111111111001 ,
b1111111111111111001 "
b11111100 /
b11111111111111111111111111111001 .
b101100 -
1#
1'
#9000
0#
0'
#9500
b101100 -
1#
1'
#9800
b11010110 &
b11010110 *
#10000
0#
0'
#10500
b11110100 +
b11110100 !
b1111111111111101000 ,
b1111111111111101000 "
b11110100 /
b11111111111111111111111111101000 .
b110101 -
1#
1'
#11000
0#
0'
#11500
b110101 -
1#
1'
#11900
b10110010 $
b10110010 (
#12000
0#
0'
#12500
b11100001 +
b11100001 !
b1111111111111111010 ,
b1111111111111111010 "
b11100001 /
b11111111111111111111111111111010 .
b110101 -
1#
1'
#13000
0#
0'
#13500
b110101 -
1#
1'
#13800
b11001001 %
b11001001 )
#14000
0#
0'
#14500
b11101100 +
b11101100 !
b101 ,
b101 "
b11101100 /
b101 .
b110101 -
1#
1'
#15000
0#
0'
#15500
b110101 -
1#
1'
#15600
b10101001 &
b10101001 *
#16000
0#
0'
#16500
b11111000 +
b11111000 !
b11100 ,
b11100 "
b11111000 /
b11100 .
b101010 -
1#
1'
#17000
0#
0'
#17500
b101010 -
1#
1'
#18000
0#
0'
#18500
b101010 -
1#
1'
#18600
b1111001 $
b1111001 (
#19000
0#
0'
#19500
b11011011 +
b11011011 !
b111000 ,
b111000 "
b11011011 /
b111000 .
b101010 -
1#
1'
#20000
0#
0'
#20500
b101010 -
1#
1'
#21000
0#
0'
#21400
b10001011 %
b10001011 )
#21500
b10011101 +
b10011101 !
b1111111111111111010 ,
b1111111111111111010 "
b10011101 /
b11111111111111111111111111111010 .
b101010 -
1#
1'
#22000
0#
0'
#22500
b101010 -
1#
1'
#23000
0#
0'
#23500
b101010 -
1#
1'
#24000
0#
0'
#24100
b10100100 &
b10100100 *
#24500
b10011111 +
b10011111 !
b1111111111111111101 ,
b1111111111111111101 "
b10011111 /
b11111111111111111111111111111101 .
b101001 -
1#
1'
#25000
0#
0'
#25500
b101001 -
1#
1'
#26000
0#
0'
#26500
b101001 -
1#
1'
#27000
0#
0'
#27500
b101001 -
1#
1'
#28000
0#
0'
#28100
b1011100 $
b1011100 (
#28500
b10010000 +
b10010000 !
b1011 ,
b1011 "
b10010000 /
b1011 .
b101001 -
1#
1'
#29000
0#
0'
#29500
b101001 -
1#
1'
#30000
0#
0'
#30500
b101001 -
1#
1'
#31000
0#
0'
#31500
b101001 -
1#
1'
#31900
b11001101 %
b11001101 )
#32000
0#
0'
#32500
b11010010 +
b11010010 !
b1001101 ,
b1001101 "
b11010010 /
b1001101 .
b101001 -
1#
1'
#33000
0#
0'
#33500
b101001 -
1#
1'
#34000
0#
0'
#34500
b101001 -
1#
1'
#35000
0#
0'
#35500
b101001 -
1#
1'
#35600
b10001011 &
b10001011 *
#36000
0#
0'
#36500
b11011000 +
b11011000 !
b1011010 ,
b1011010 "
b11011000 /
b1011010 .
b100010 -
1#
1'
#37000
0#
0'
#37500
b100010 -
1#
1'
#38000
0#
0'
#38500
b100010 -
1#
1'
#39000
0#
0'
#39500
b100010 -
1#
1'
#40000
0#
0'
#40500
b100010 -
1#
1'
#41000
0#
0'
#41500
b100010 -
1#
1'
#42000
0#
0'
#42500
b100010 -
1#
1'
#43000
0#
0'
#43500
b100010 -
1#
1'
#44000
0#
0'
#44500
b100010 -
1#
1'
#45000
0#
0'
#45500
b100010 -
1#
1'
#45600
