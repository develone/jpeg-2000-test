-- File: jpeg.vhd
-- Generated by MyHDL 0.9dev
-- Date: Wed Aug 13 14:50:04 2014


library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;
use std.textio.all;

use work.pck_myhdl_09.all;

entity jpeg is
    port (
        clk_fast: in std_logic;
        left_s: in signed (16 downto 0);
        right_s: in signed (16 downto 0);
        sam_s: in signed (16 downto 0);
        res_s: out signed (16 downto 0)
    );
end entity jpeg;


architecture MyHDL of jpeg is


constant fwd_inv_s: integer := 1;
constant even_odd_s: integer := 1;




begin




JPEG_HDL: process (clk_fast) is
begin
    if rising_edge(clk_fast) then
        if even_odd_s = 1 then
            if fwd_inv_s = 1then
                res_s <= (sam_s - (shift_right(left_s, 1) + shift_right(right_s, 1)));
            else
                res_s <= (sam_s + (shift_right(left_s, 1) + shift_right(right_s, 1)));
            end if;
        else
            if fwd_inv_s = 1then
                res_s <= shift_right((sam_s + ((left_s + right_s) + 2)), 2);
            else
                res_s <= shift_right((sam_s - ((left_s + right_s) + 2)), 2);
            end if;
        end if;
    end if;
end process JPEG_HDL;

end architecture MyHDL;
