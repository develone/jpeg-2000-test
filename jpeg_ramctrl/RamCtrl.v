// File: RamCtrl.v
// Generated by MyHDL 0.9dev
// Date: Mon Sep 22 05:38:26 2014


`timescale 1ns/10ps

module RamCtrl (
    SOF,
    state,
    WR_DATAFlag,
    clk_fast,
    reset_n
);
// Framing control FSM.
// 
// SOF -- start-of-frame output bit
// state -- RamState output
// WR_DATAFlag -- WR_DATA pattern found indication input
// clk_fast -- clock input
// reset_n -- active low reset

output SOF;
reg SOF;
output [4:0] state;
reg [4:0] state;
input WR_DATAFlag;
input clk_fast;
input reset_n;

reg [7:0] index;





always @(posedge clk_fast, negedge reset_n) begin: RAMCTRL_FSM
    if ((reset_n == 0)) begin
        SOF <= 0;
        index <= 0;
        state <= 5'b00010;
    end
    else begin
        index <= ((index + 1) % 8);
        SOF <= 0;
        casez (state)
            5'b????1: begin
                index <= 1;
                if (WR_DATAFlag) begin
                    state <= 5'b00010;
                end
            end
            5'b???1?: begin
                if ((index == 0)) begin
                    if (WR_DATAFlag) begin
                        state <= 5'b00100;
                    end
                    else begin
                        state <= 5'b00001;
                    end
                end
            end
            5'b??1??: begin
                SOF <= 0;
            end
            5'b?1???: begin
                if ((index == 0)) begin
                    if ((!WR_DATAFlag)) begin
                        state <= 5'b00001;
                    end
                end
                SOF <= ($signed({1'b0, index}) == (8 - 1));
            end
            5'b1????: begin
                SOF <= 0;
            end
            default: begin
                $finish;
            end
        endcase
    end
end

endmodule
