-- File: ram2sig.vhd
-- Generated by MyHDL 0.9dev
-- Date: Sat Oct 25 10:19:14 2014


library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;
use std.textio.all;

use work.pck_myhdl_09.all;

entity ram2sig is
    port (
        jp_lf: in unsigned(15 downto 0);
        jp_sa: in unsigned(15 downto 0);
        jp_rh: in unsigned(15 downto 0);
        jp_flgs: in unsigned(3 downto 0);
        rdy: in std_logic;
        sig_out: out unsigned(51 downto 0)
    );
end entity ram2sig;
-- Combines 3 16 bit plus 4 flags into single value 

architecture MyHDL of ram2sig is






begin




RAM2SIG_LOGIC: process (jp_sa, jp_flgs, jp_lf, rdy, jp_rh) is
begin
    if bool(rdy) then
        sig_out <= unsigned'(jp_flgs & jp_rh & jp_sa & jp_lf);
    else
        sig_out <= to_unsigned(0, 52);
    end if;
end process RAM2SIG_LOGIC;

end architecture MyHDL;
