-- File: sig2one.vhd
-- Generated by MyHDL 0.9dev
-- Date: Tue Mar 10 11:18:46 2015


library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;
use std.textio.all;

use work.pck_myhdl_09.all;

entity sig2one is
    port (
        Sout_s: out unsigned(159 downto 0);
        clk_fast: in std_logic;
        combine_sig_s: in std_logic;
        Sin0: in unsigned(9 downto 0);
        Sin1: in unsigned(9 downto 0);
        Sin2: in unsigned(9 downto 0);
        Sin3: in unsigned(9 downto 0);
        Sin4: in unsigned(9 downto 0);
        Sin5: in unsigned(9 downto 0);
        Sin6: in unsigned(9 downto 0);
        Sin7: in unsigned(9 downto 0);
        Sin8: in unsigned(9 downto 0);
        Sin9: in unsigned(9 downto 0);
        Sin10: in unsigned(9 downto 0);
        Sin11: in unsigned(9 downto 0);
        Sin12: in unsigned(9 downto 0);
        Sin13: in unsigned(9 downto 0);
        Sin14: in unsigned(9 downto 0);
        Sin15: in unsigned(9 downto 0)
    );
end entity sig2one;


architecture MyHDL of sig2one is






begin




SIG2ONE_COMBINE_LOGIC: process (clk_fast) is
begin
    if rising_edge(clk_fast) then
        if (combine_sig_s = '1') then
            Sout_s <= unsigned'(Sin15 & Sin14 & Sin13 & Sin12 & Sin11 & Sin10 & Sin9 & Sin8 & Sin7 & Sin6 & Sin5 & Sin4 & Sin3 & Sin2 & Sin1 & Sin0);
        else
            Sout_s <= to_unsigned(0, 160);
        end if;
    end if;
end process SIG2ONE_COMBINE_LOGIC;

end architecture MyHDL;
