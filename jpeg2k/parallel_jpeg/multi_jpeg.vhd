-- File: multi_jpeg.vhd
-- Generated by MyHDL 0.9dev
-- Date: Fri Jan 23 12:53:46 2015


library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;
use std.textio.all;

use work.pck_myhdl_09.all;

entity multi_jpeg is
    port (
        clk_fast: in std_logic;
        sig0_in_x: in unsigned(30 downto 0);
        noupdate0_s: out std_logic;
        res0_s: out signed (8 downto 0);
        sig1_in_x: in unsigned(30 downto 0);
        noupdate1_s: out std_logic;
        res1_s: out signed (8 downto 0);
        sig2_in_x: in unsigned(30 downto 0);
        noupdate2_s: out std_logic;
        res2_s: out signed (8 downto 0);
        sig3_in_x: in unsigned(30 downto 0);
        noupdate3_s: out std_logic;
        res3_s: out signed (8 downto 0)
    );
end entity multi_jpeg;


architecture MyHDL of multi_jpeg is






begin




MULTI_JPEG_INSTANCE_1_JPEG: process (clk_fast) is
begin
    if rising_edge(clk_fast) then
        if bool(sig0_in_x(29)) then
            noupdate0_s <= '0';
            if bool(sig0_in_x(27)) then
                if bool(sig0_in_x(28)) then
                    res0_s <= signed(sig0_in_x(18-1 downto 9) - (shift_right(sig0_in_x(9-1 downto 0), 1) + shift_right(sig0_in_x(26-1 downto 18), 1)));
                else
                    res0_s <= signed(sig0_in_x(18-1 downto 9) + (shift_right(sig0_in_x(9-1 downto 0), 1) + shift_right(sig0_in_x(26-1 downto 18), 1)));
                end if;
            else
                if bool(sig0_in_x(28)) then
                    res0_s <= signed(sig0_in_x(18-1 downto 9) + shift_right(((sig0_in_x(9-1 downto 0) + sig0_in_x(26-1 downto 18)) + 2), 2));
                else
                    res0_s <= signed(sig0_in_x(18-1 downto 9) - shift_right(((sig0_in_x(9-1 downto 0) + sig0_in_x(26-1 downto 18)) + 2), 2));
                end if;
            end if;
        else
            noupdate0_s <= '1';
        end if;
    end if;
end process MULTI_JPEG_INSTANCE_1_JPEG;


MULTI_JPEG_INSTANCE_2_JPEG: process (clk_fast) is
begin
    if rising_edge(clk_fast) then
        if bool(sig1_in_x(29)) then
            noupdate1_s <= '0';
            if bool(sig1_in_x(27)) then
                if bool(sig1_in_x(28)) then
                    res1_s <= signed(sig1_in_x(18-1 downto 9) - (shift_right(sig1_in_x(9-1 downto 0), 1) + shift_right(sig1_in_x(26-1 downto 18), 1)));
                else
                    res1_s <= signed(sig1_in_x(18-1 downto 9) + (shift_right(sig1_in_x(9-1 downto 0), 1) + shift_right(sig1_in_x(26-1 downto 18), 1)));
                end if;
            else
                if bool(sig1_in_x(28)) then
                    res1_s <= signed(sig1_in_x(18-1 downto 9) + shift_right(((sig1_in_x(9-1 downto 0) + sig1_in_x(26-1 downto 18)) + 2), 2));
                else
                    res1_s <= signed(sig1_in_x(18-1 downto 9) - shift_right(((sig1_in_x(9-1 downto 0) + sig1_in_x(26-1 downto 18)) + 2), 2));
                end if;
            end if;
        else
            noupdate1_s <= '1';
        end if;
    end if;
end process MULTI_JPEG_INSTANCE_2_JPEG;


MULTI_JPEG_INSTANCE_3_JPEG: process (clk_fast) is
begin
    if rising_edge(clk_fast) then
        if bool(sig2_in_x(29)) then
            noupdate2_s <= '0';
            if bool(sig2_in_x(27)) then
                if bool(sig2_in_x(28)) then
                    res2_s <= signed(sig2_in_x(18-1 downto 9) - (shift_right(sig2_in_x(9-1 downto 0), 1) + shift_right(sig2_in_x(26-1 downto 18), 1)));
                else
                    res2_s <= signed(sig2_in_x(18-1 downto 9) + (shift_right(sig2_in_x(9-1 downto 0), 1) + shift_right(sig2_in_x(26-1 downto 18), 1)));
                end if;
            else
                if bool(sig2_in_x(28)) then
                    res2_s <= signed(sig2_in_x(18-1 downto 9) + shift_right(((sig2_in_x(9-1 downto 0) + sig2_in_x(26-1 downto 18)) + 2), 2));
                else
                    res2_s <= signed(sig2_in_x(18-1 downto 9) - shift_right(((sig2_in_x(9-1 downto 0) + sig2_in_x(26-1 downto 18)) + 2), 2));
                end if;
            end if;
        else
            noupdate2_s <= '1';
        end if;
    end if;
end process MULTI_JPEG_INSTANCE_3_JPEG;


MULTI_JPEG_INSTANCE_4_JPEG: process (clk_fast) is
begin
    if rising_edge(clk_fast) then
        if bool(sig3_in_x(29)) then
            noupdate3_s <= '0';
            if bool(sig3_in_x(27)) then
                if bool(sig3_in_x(28)) then
                    res3_s <= signed(sig3_in_x(18-1 downto 9) - (shift_right(sig3_in_x(9-1 downto 0), 1) + shift_right(sig3_in_x(26-1 downto 18), 1)));
                else
                    res3_s <= signed(sig3_in_x(18-1 downto 9) + (shift_right(sig3_in_x(9-1 downto 0), 1) + shift_right(sig3_in_x(26-1 downto 18), 1)));
                end if;
            else
                if bool(sig3_in_x(28)) then
                    res3_s <= signed(sig3_in_x(18-1 downto 9) + shift_right(((sig3_in_x(9-1 downto 0) + sig3_in_x(26-1 downto 18)) + 2), 2));
                else
                    res3_s <= signed(sig3_in_x(18-1 downto 9) - shift_right(((sig3_in_x(9-1 downto 0) + sig3_in_x(26-1 downto 18)) + 2), 2));
                end if;
            end if;
        else
            noupdate3_s <= '1';
        end if;
    end if;
end process MULTI_JPEG_INSTANCE_4_JPEG;

end architecture MyHDL;
