-- File: xess_jpeg_para.vhd
-- Generated by MyHDL 0.9dev
-- Date: Thu Jan 22 16:57:55 2015



package pck_xess_jpeg_para is

attribute enum_encoding: string;

    type t_enum_t_State_1 is (
    INIT,
    READ_ROM,
    DONE
);

end package pck_xess_jpeg_para;

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;
use std.textio.all;

use work.pck_myhdl_09.all;

use work.pck_xess_jpeg_para.all;

entity xess_jpeg_para is
    port (
        clk_fast: in std_logic;
        state_r: inout t_enum_t_State_1;
        state_x: inout t_enum_t_State_1;
        sig_in_r: inout unsigned(30 downto 0);
        sig_in_x: inout unsigned(30 downto 0);
        noupdate_s: inout std_logic;
        res_s: out signed (8 downto 0);
        dout_rom: inout unsigned(30 downto 0);
        addr_rom_r: inout unsigned(16 downto 0);
        addr_rom_x: inout unsigned(16 downto 0)
    );
end entity xess_jpeg_para;


architecture MyHDL of xess_jpeg_para is


constant YES: integer := 1;




begin




XESS_JPEG_PARA_INSTANCE_1_JPEG: process (clk_fast) is
begin
    if rising_edge(clk_fast) then
        if bool(sig_in_x(29)) then
            noupdate_s <= '0';
            if bool(sig_in_x(27)) then
                if bool(sig_in_x(28)) then
                    res_s <= signed(sig_in_x(18-1 downto 9) - (shift_right(sig_in_x(9-1 downto 0), 1) + shift_right(sig_in_x(26-1 downto 18), 1)));
                else
                    res_s <= signed(sig_in_x(18-1 downto 9) + (shift_right(sig_in_x(9-1 downto 0), 1) + shift_right(sig_in_x(26-1 downto 18), 1)));
                end if;
            else
                if bool(sig_in_x(28)) then
                    res_s <= signed(sig_in_x(18-1 downto 9) + shift_right(((sig_in_x(9-1 downto 0) + sig_in_x(26-1 downto 18)) + 2), 2));
                else
                    res_s <= signed(sig_in_x(18-1 downto 9) - shift_right(((sig_in_x(9-1 downto 0) + sig_in_x(26-1 downto 18)) + 2), 2));
                end if;
            end if;
        else
            noupdate_s <= '1';
        end if;
    end if;
end process XESS_JPEG_PARA_INSTANCE_1_JPEG;


XESS_JPEG_PARA_INSTANCE_2_FSM: process (sig_in_r, noupdate_s, addr_rom_r, dout_rom, state_r) is
begin
    addr_rom_x <= addr_rom_r;
    sig_in_x <= sig_in_r;
    state_x <= state_r;
    case state_r is
        when INIT =>
            addr_rom_x <= to_unsigned(0, 17);
            sig_in_x <= to_unsigned(0, 31);
            state_x <= READ_ROM;
        when READ_ROM =>
            if (noupdate_s = '1') then
                if (addr_rom_r <= 130046) then
                    sig_in_x <= dout_rom;
                    addr_rom_x <= (addr_rom_r + 1);
                else
                    state_x <= DONE;
                end if;
            else
                sig_in_x <= to_unsigned(0, 31);
            end if;
        when others => -- DONE
            state_x <= INIT;
    end case;
end process XESS_JPEG_PARA_INSTANCE_2_FSM;


XESS_JPEG_PARA_INSTANCE_3_FSMUPDATE: process (clk_fast) is
begin
    if rising_edge(clk_fast) then
        state_r <= state_x;
        addr_rom_r <= addr_rom_x;
        sig_in_r <= sig_in_x;
    end if;
end process XESS_JPEG_PARA_INSTANCE_3_FSMUPDATE;


XESS_JPEG_PARA_INSTANCE_4_READ: process (addr_rom_x) is
begin
    case to_integer(addr_rom_x) is
        when 0 => dout_rom <= "0111010100100010100100010100100";
        when 1 => dout_rom <= "0111010100100010011100010011100";
        when 2 => dout_rom <= "0111010011100010011100010100100";
        when 3 => dout_rom <= "0111010011100010011100010011100";
        when 4 => dout_rom <= "0111010011100010011100010011100";
        when 5 => dout_rom <= "0111010100100010011100010011100";
        when 6 => dout_rom <= "0111010011100010011100010011100";
        when 7 => dout_rom <= "0111010011100010011100010011100";
        when 8 => dout_rom <= "0111010011100010011100010011100";
        when 9 => dout_rom <= "0111010011100010100100010100100";
        when 10 => dout_rom <= "0111010100100010100100010100100";
        when 11 => dout_rom <= "0111010100100010100100010100100";
        when 12 => dout_rom <= "0111010100100010100100010011100";
        when 13 => dout_rom <= "0111010011100010100100010100100";
        when 14 => dout_rom <= "0111010100100010011100010100100";
        when 15 => dout_rom <= "0111010100100010101100010100100";
        when 16 => dout_rom <= "0111010100100010100100010101100";
        when 17 => dout_rom <= "0111010101100010101100010101100";
        when 18 => dout_rom <= "0111010101100010101100010100100";
        when 19 => dout_rom <= "0111010100100010100100010100100";
        when 20 => dout_rom <= "0111010100100010011100010010100";
        when others => dout_rom <= "0111010010100010010100010000100";
    end case;
end process XESS_JPEG_PARA_INSTANCE_4_READ;

end architecture MyHDL;
