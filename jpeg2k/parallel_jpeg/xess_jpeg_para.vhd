-- File: xess_jpeg_para.vhd
-- Generated by MyHDL 0.9dev
-- Date: Wed Jan 21 16:44:16 2015


library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;
use std.textio.all;

use work.pck_myhdl_09.all;

entity xess_jpeg_para is
    port (
        clk_fast: in std_logic;
        sig_in: inout unsigned(27 downto 0);
        noupdate_s: out std_logic;
        res_s: inout signed (7 downto 0);
        res_u: out unsigned(7 downto 0);
        jp_lf: in unsigned(7 downto 0);
        jp_sa: in unsigned(7 downto 0);
        jp_rh: in unsigned(7 downto 0);
        jp_flgs: in unsigned(3 downto 0);
        rdy: in std_logic;
        addr_not_reached: in std_logic
    );
end entity xess_jpeg_para;


architecture MyHDL of xess_jpeg_para is






begin




XESS_JPEG_PARA_INSTANCE_1_JPEG: process (clk_fast) is
begin
    if rising_edge(clk_fast) then
        if bool(sig_in(25)) then
            noupdate_s <= '0';
            if bool(sig_in(23)) then
                if bool(sig_in(24)) then
                    res_s <= signed(sig_in(16-1 downto 8) - (shift_right(sig_in(8-1 downto 0), 1) + shift_right(sig_in(24-1 downto 16), 1)));
                else
                    res_s <= signed(sig_in(16-1 downto 8) + (shift_right(sig_in(8-1 downto 0), 1) + shift_right(sig_in(24-1 downto 16), 1)));
                end if;
            else
                if bool(sig_in(24)) then
                    res_s <= signed(sig_in(16-1 downto 8) + shift_right(((sig_in(8-1 downto 0) + sig_in(24-1 downto 16)) + 2), 2));
                else
                    res_s <= signed(sig_in(16-1 downto 8) - shift_right(((sig_in(8-1 downto 0) + sig_in(24-1 downto 16)) + 2), 2));
                end if;
            end if;
            res_u <= unsigned(res_s);
        else
            noupdate_s <= '1';
        end if;
    end if;
end process XESS_JPEG_PARA_INSTANCE_1_JPEG;


XESS_JPEG_PARA_INSTANCE_2_RAM2SIG: process (jp_sa, jp_flgs, jp_rh, rdy, addr_not_reached, jp_lf) is
begin
    if bool(rdy) then
        if bool(addr_not_reached) then
            sig_in <= unsigned'(jp_flgs & jp_rh & jp_sa & jp_lf);
        else
            sig_in <= to_unsigned(0, 28);
        end if;
    else
        sig_in <= to_unsigned(0, 28);
    end if;
end process XESS_JPEG_PARA_INSTANCE_2_RAM2SIG;

end architecture MyHDL;
