-- File: jp_process.vhd
-- Generated by MyHDL 0.9dev
-- Date: Sun Feb  8 18:05:04 2015


library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;
use std.textio.all;

use work.pck_myhdl_09.all;

entity jp_process is
    port (
        sig_in_x_i: in unsigned(127 downto 0);
        res_out_x: out signed (8 downto 0);
        left_s_i: in unsigned(127 downto 0);
        sam_s_i: in unsigned(127 downto 0);
        right_s_i: in unsigned(127 downto 0);
        flgs_s_i: in unsigned(79 downto 0)
    );
end entity jp_process;


architecture MyHDL of jp_process is


constant LVL0: integer := 2**4;



type t_array_right_s is array(0 to 16-1) of unsigned(7 downto 0);
signal right_s: t_array_right_s;
type t_array_flgs_s is array(0 to 16-1) of unsigned(4 downto 0);
signal flgs_s: t_array_flgs_s;
type t_array_sam_s is array(0 to 16-1) of unsigned(7 downto 0);
signal sam_s: t_array_sam_s;
type t_array_left_s is array(0 to 16-1) of unsigned(7 downto 0);
signal left_s: t_array_left_s;

begin


right_s(0) <= right_s_i(8-1 downto 0);
right_s(1) <= right_s_i(16-1 downto 8);
right_s(2) <= right_s_i(24-1 downto 16);
right_s(3) <= right_s_i(32-1 downto 24);
right_s(4) <= right_s_i(40-1 downto 32);
right_s(5) <= right_s_i(48-1 downto 40);
right_s(6) <= right_s_i(56-1 downto 48);
right_s(7) <= right_s_i(64-1 downto 56);
right_s(8) <= right_s_i(72-1 downto 64);
right_s(9) <= right_s_i(80-1 downto 72);
right_s(10) <= right_s_i(88-1 downto 80);
right_s(11) <= right_s_i(96-1 downto 88);
right_s(12) <= right_s_i(104-1 downto 96);
right_s(13) <= right_s_i(112-1 downto 104);
right_s(14) <= right_s_i(120-1 downto 112);
right_s(15) <= right_s_i(128-1 downto 120);
flgs_s(0) <= flgs_s_i(5-1 downto 0);
flgs_s(1) <= flgs_s_i(10-1 downto 5);
flgs_s(2) <= flgs_s_i(15-1 downto 10);
flgs_s(3) <= flgs_s_i(20-1 downto 15);
flgs_s(4) <= flgs_s_i(25-1 downto 20);
flgs_s(5) <= flgs_s_i(30-1 downto 25);
flgs_s(6) <= flgs_s_i(35-1 downto 30);
flgs_s(7) <= flgs_s_i(40-1 downto 35);
flgs_s(8) <= flgs_s_i(45-1 downto 40);
flgs_s(9) <= flgs_s_i(50-1 downto 45);
flgs_s(10) <= flgs_s_i(55-1 downto 50);
flgs_s(11) <= flgs_s_i(60-1 downto 55);
flgs_s(12) <= flgs_s_i(65-1 downto 60);
flgs_s(13) <= flgs_s_i(70-1 downto 65);
flgs_s(14) <= flgs_s_i(75-1 downto 70);
flgs_s(15) <= flgs_s_i(80-1 downto 75);
sam_s(0) <= sam_s_i(8-1 downto 0);
sam_s(1) <= sam_s_i(16-1 downto 8);
sam_s(2) <= sam_s_i(24-1 downto 16);
sam_s(3) <= sam_s_i(32-1 downto 24);
sam_s(4) <= sam_s_i(40-1 downto 32);
sam_s(5) <= sam_s_i(48-1 downto 40);
sam_s(6) <= sam_s_i(56-1 downto 48);
sam_s(7) <= sam_s_i(64-1 downto 56);
sam_s(8) <= sam_s_i(72-1 downto 64);
sam_s(9) <= sam_s_i(80-1 downto 72);
sam_s(10) <= sam_s_i(88-1 downto 80);
sam_s(11) <= sam_s_i(96-1 downto 88);
sam_s(12) <= sam_s_i(104-1 downto 96);
sam_s(13) <= sam_s_i(112-1 downto 104);
sam_s(14) <= sam_s_i(120-1 downto 112);
sam_s(15) <= sam_s_i(128-1 downto 120);
left_s(0) <= left_s_i(8-1 downto 0);
left_s(1) <= left_s_i(16-1 downto 8);
left_s(2) <= left_s_i(24-1 downto 16);
left_s(3) <= left_s_i(32-1 downto 24);
left_s(4) <= left_s_i(40-1 downto 32);
left_s(5) <= left_s_i(48-1 downto 40);
left_s(6) <= left_s_i(56-1 downto 48);
left_s(7) <= left_s_i(64-1 downto 56);
left_s(8) <= left_s_i(72-1 downto 64);
left_s(9) <= left_s_i(80-1 downto 72);
left_s(10) <= left_s_i(88-1 downto 80);
left_s(11) <= left_s_i(96-1 downto 88);
left_s(12) <= left_s_i(104-1 downto 96);
left_s(13) <= left_s_i(112-1 downto 104);
left_s(14) <= left_s_i(120-1 downto 112);
left_s(15) <= left_s_i(128-1 downto 120);

-- fwd dwt even flgs_s eq 7
-- inv dwt even flgs_s eq 5
-- fwd dwt odd flgs_s eq 6
-- inv dwt odd flgs_s eq 4
JP_PROCESS_JPEG_LOGIC: process (right_s(0), right_s(1), right_s(2), right_s(3), right_s(4), right_s(5), right_s(6), right_s(7), right_s(8), right_s(9), right_s(10), right_s(11), right_s(12), right_s(13), right_s(14), right_s(15), flgs_s(0), flgs_s(1), flgs_s(2), flgs_s(3), flgs_s(4), flgs_s(5), flgs_s(6), flgs_s(7), flgs_s(8), flgs_s(9), flgs_s(10), flgs_s(11), flgs_s(12), flgs_s(13), flgs_s(14), flgs_s(15), sam_s(0), sam_s(1), sam_s(2), sam_s(3), sam_s(4), sam_s(5), sam_s(6), sam_s(7), sam_s(8), sam_s(9), sam_s(10), sam_s(11), sam_s(12), sam_s(13), sam_s(14), sam_s(15), left_s(0), left_s(1), left_s(2), left_s(3), left_s(4), left_s(5), left_s(6), left_s(7), left_s(8), left_s(9), left_s(10), left_s(11), left_s(12), left_s(13), left_s(14), left_s(15)) is
begin
    if (flgs_s((LVL0 - 1)) = 7) then
        res_out_x <= signed(resize(sam_s((LVL0 - 1)), 9) - (shift_right(resize(left_s((LVL0 - 1)), 9), 1) + shift_right(resize(right_s((LVL0 - 1)), 9), 1)));
    elsif (flgs_s((LVL0 - 1)) = 5) then
        res_out_x <= signed(resize(sam_s((LVL0 - 1)), 9) + (shift_right(resize(left_s((LVL0 - 1)), 9), 1) + shift_right(resize(right_s((LVL0 - 1)), 9), 1)));
    elsif (flgs_s((LVL0 - 1)) = 6) then
        res_out_x <= signed(resize(sam_s((LVL0 - 1)), 9) + shift_right((resize(left_s((LVL0 - 1)), 9) + resize(right_s((LVL0 - 1)), 9)), 2));
    elsif (flgs_s((LVL0 - 1)) = 4) then
        res_out_x <= signed(resize(sam_s((LVL0 - 1)), 9) - shift_right((resize(left_s((LVL0 - 1)), 9) + resize(right_s((LVL0 - 1)), 9)), 2));
    end if;
end process JP_PROCESS_JPEG_LOGIC;

end architecture MyHDL;
