-- File: fifo_mem_generic.vhd
-- Generated by MyHDL 0.9dev
-- Date: Mon Dec 15 15:37:37 2014


library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;
use std.textio.all;

use work.pck_myhdl_09.all;

entity fifo_mem_generic is
    port (
        wclk: in std_logic;
        wr: in std_logic;
        din: in std_logic;
        addr_w: in unsigned(7 downto 0);
        rclk: in unsigned(7 downto 0);
        dout: out unsigned(8 downto 0);
        addr_r: in unsigned(8 downto 0)
    );
end entity fifo_mem_generic;
-- Timing Diagram:

architecture MyHDL of fifo_mem_generic is





signal _wr: std_logic;
signal m11: unsigned(7 downto 0);
signal m10: unsigned(7 downto 0);
signal m13: unsigned(7 downto 0);
signal m12: unsigned(7 downto 0);
signal m15: unsigned(7 downto 0);
signal m14: unsigned(7 downto 0);
signal _addr_w: unsigned(8 downto 0);
signal m5: unsigned(7 downto 0);
signal m4: unsigned(7 downto 0);
signal m7: unsigned(7 downto 0);
signal m6: unsigned(7 downto 0);
signal m1: unsigned(7 downto 0);
signal m0: unsigned(7 downto 0);
signal m3: unsigned(7 downto 0);
signal m2: unsigned(7 downto 0);
signal m9: unsigned(7 downto 0);
signal m8: unsigned(7 downto 0);
signal _dout: unsigned(7 downto 0);
signal _din: unsigned(7 downto 0);
type t_array_mem is array(0 to 512-1) of unsigned(7 downto 0);
signal mem: t_array_mem;

begin




FIFO_MEM_GENERIC_RD_RTL: process (rclk) is
begin
    if rising_edge(rclk) then
        _dout <= mem(to_integer(addr_r));
    end if;
end process FIFO_MEM_GENERIC_RD_RTL;



dout <= resize(_dout, 9);



m0 <= mem(0);
m1 <= mem(1);
m2 <= mem(2);
m3 <= mem(3);
m4 <= mem(4);
m5 <= mem(5);
m6 <= mem(6);
m7 <= mem(7);
m8 <= mem(8);
m9 <= mem(9);
m10 <= mem(10);
m11 <= mem(11);
m12 <= mem(12);
m13 <= mem(13);
m14 <= mem(14);
m15 <= mem(15);


FIFO_MEM_GENERIC_RTL_MEM: process (wclk) is
begin
    if rising_edge(wclk) then
        if bool(_wr) then
            mem(to_integer(_addr_w)) <= _din;
        end if;
    end if;
end process FIFO_MEM_GENERIC_RTL_MEM;


FIFO_MEM_GENERIC_WR_RTL: process (wclk) is
begin
    if rising_edge(wclk) then
        _wr <= wr;
        _addr_w <= resize(addr_w, 9);
        _din <= to_unsigned(din, 8);
    end if;
end process FIFO_MEM_GENERIC_WR_RTL;

end architecture MyHDL;
