// File: fifo_mem_generic.v
// Generated by MyHDL 0.9dev
// Date: Tue Dec 16 05:22:18 2014


`timescale 1ns/10ps

module fifo_mem_generic (
    wclk,
    wr,
    din,
    addr_w,
    rclk,
    dout,
    addr_r
);
// Timing Diagram:

input wclk;
input wr;
input [15:0] din;
input [8:0] addr_w;
input rclk;
output [15:0] dout;
wire [15:0] dout;
input [8:0] addr_r;

wire [7:0] m11;
wire [7:0] m10;
wire [7:0] m13;
wire [7:0] m12;
wire [7:0] m15;
wire [7:0] m14;
reg [15:0] dout_r;
wire [7:0] m5;
wire [7:0] m4;
wire [7:0] m7;
wire [7:0] m6;
wire [7:0] m1;
wire [7:0] m0;
wire [7:0] m3;
wire [7:0] m2;
reg wr_r;
wire [7:0] m9;
wire [7:0] m8;
reg [15:0] din_r;
reg [8:0] add_w_r;
wire [15:0] din_x;

reg [15:0] mem [0:512-1];

assign din_x = 0;



always @(posedge rclk) begin: FIFO_MEM_GENERIC_RD_RTL
    dout_r <= mem[addr_r];
end



assign dout = dout_r;



assign m0 = mem[0];
assign m1 = mem[1];
assign m2 = mem[2];
assign m3 = mem[3];
assign m4 = mem[4];
assign m5 = mem[5];
assign m6 = mem[6];
assign m7 = mem[7];
assign m8 = mem[8];
assign m9 = mem[9];
assign m10 = mem[10];
assign m11 = mem[11];
assign m12 = mem[12];
assign m13 = mem[13];
assign m14 = mem[14];
assign m15 = mem[15];


always @(posedge wclk) begin: FIFO_MEM_GENERIC_RTL_MEM
    if (wr_r) begin
        mem[add_w_r] <= din_x;
    end
end


always @(posedge wclk) begin: FIFO_MEM_GENERIC_WR_RTL
    wr_r <= wr;
    add_w_r <= addr_w;
    din_r <= din;
end

endmodule
