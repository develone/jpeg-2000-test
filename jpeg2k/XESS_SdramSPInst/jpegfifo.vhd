-- File: jpegfifo.vhd
-- Generated by MyHDL 0.9dev
-- Date: Thu Dec 18 08:37:22 2014


library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;
use std.textio.all;

use work.pck_myhdl_09.all;

entity jpegfifo is
    port (
        clk_fast: in std_logic;
        empty_r: out std_logic;
        full_r: out std_logic;
        enr_r: in std_logic;
        enw_r: in std_logic;
        dataout_r: out unsigned(15 downto 0);
        datain_r: in unsigned(15 downto 0)
    );
end entity jpegfifo;
-- Following the code being converted requires the that both readptr
-- writeptr be initialized :="00000000" 

architecture MyHDL of jpegfifo is


constant YES: integer := 1;
constant NO: integer := 0;



signal writeptr: unsigned(7 downto 0):="00000000";
signal readptr: unsigned(7 downto 0):="00000000";
type t_array_mem is array(0 to 256-1) of unsigned(15 downto 0);
signal mem: t_array_mem;

begin




JPEGFIFO_RTL: process (clk_fast) is
begin
    if rising_edge(clk_fast) then
        if (enr_r = '1') then
            dataout_r <= mem(to_integer(readptr));
            readptr <= (readptr + 1);
        end if;
        if (enw_r = '1') then
            mem(to_integer(writeptr)) <= datain_r;
            writeptr <= (writeptr + 1);
        end if;
        if (readptr = 255) then
            readptr <= to_unsigned(0, 8);
        end if;
        if (writeptr = 255) then
            full_r <= '1';
            writeptr <= to_unsigned(0, 8);
        else
            full_r <= '0';
        end if;
        if (writeptr = 0) then
            empty_r <= '1';
        else
            empty_r <= '0';
        end if;
    end if;
end process JPEGFIFO_RTL;

end architecture MyHDL;
