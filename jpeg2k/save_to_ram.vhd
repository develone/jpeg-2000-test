-- File: save_to_ram.vhd
-- Generated by MyHDL 0.9dev
-- Date: Thu Oct  9 09:40:35 2014


library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;
use std.textio.all;

use work.pck_myhdl_09.all;

entity save_to_ram is
    port (
        clk_fast: in std_logic;
        dout_res_o: out unsigned(15 downto 0);
        res_i: in signed (15 downto 0);
        we_s_o: out std_logic;
        reset_sav_i: in std_logic;
        addr_res_o: inout unsigned(8 downto 0);
        incRes_i: in std_logic;
        odd_i: in std_logic
    );
end entity save_to_ram;


architecture MyHDL of save_to_ram is






begin




SAVE_TO_RAM_XX: process (clk_fast) is
begin
    if rising_edge(clk_fast) then
        if (reset_sav_i = '1') then
            we_s_o <= '0';
            if (odd_i = '1') then
                addr_res_o <= to_unsigned(1, 9);
            else
                addr_res_o <= to_unsigned(2, 9);
            end if;
        elsif (incRes_i = '1') then
            we_s_o <= '0';
            addr_res_o <= (addr_res_o + 2);
        else
            we_s_o <= '1';
            dout_res_o <= unsigned(res_i);
        end if;
    end if;
end process SAVE_TO_RAM_XX;

end architecture MyHDL;
