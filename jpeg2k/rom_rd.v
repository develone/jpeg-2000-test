// File: rom_rd.v
// Generated by MyHDL 0.9dev
// Date: Mon Oct 27 11:42:42 2014


`timescale 1ns/10ps

module rom_rd (
    clk_fast,
    offset,
    dout_rom,
    addr_rom,
    jp_lf,
    jp_sa,
    jp_rh,
    jp_flgs,
    reset_n
);


input clk_fast;
input [11:0] offset;
input [15:0] dout_rom;
output [11:0] addr_rom;
reg [11:0] addr_rom;
output [15:0] jp_lf;
reg [15:0] jp_lf;
output [15:0] jp_sa;
reg [15:0] jp_sa;
output [15:0] jp_rh;
reg [15:0] jp_rh;
input [3:0] jp_flgs;
input reset_n;






always @(posedge clk_fast) begin: ROM_RD_TEST_PROCESS
    if (reset_n) begin
        jp_lf <= 0;
        jp_sa <= 0;
        jp_rh <= 0;
        if ((jp_flgs[0] == 1)) begin
            addr_rom <= (1 + offset);
        end
        else begin
            addr_rom <= (0 + offset);
        end
    end
    else begin
        if (jp_flgs[0]) begin
            if ((addr_rom == (1 + offset))) begin
                jp_lf <= dout_rom;
                addr_rom <= (addr_rom + 1);
            end
            else begin
                if ((addr_rom == (2 + offset))) begin
                    jp_sa <= dout_rom;
                    addr_rom <= (addr_rom + 1);
                end
                else begin
                    if ((addr_rom == (3 + offset))) begin
                        jp_rh <= dout_rom;
                    end
                end
            end
        end
        else if ((addr_rom == (0 + offset))) begin
            jp_lf <= dout_rom;
            addr_rom <= (addr_rom + 1);
        end
        else begin
            if ((addr_rom == (1 + offset))) begin
                jp_sa <= dout_rom;
                addr_rom <= (addr_rom + 1);
            end
            else begin
                if ((addr_rom == (2 + offset))) begin
                    jp_rh <= dout_rom;
                end
            end
        end
    end
end

endmodule
