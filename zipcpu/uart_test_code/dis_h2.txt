
h2:     file format elf32-zip


Disassembly of section .rocode:

00002000 <_start>:
    2000:	6b 00 00 00 	LDI        0x00003fff,SP	// 3fff <_top_of_stack>
    2001:	6a 40 3f ff 
    2002:	7c 87 c0 00 	LJMP       @0x00002004	// 2004 <entry>
    2003:	00 00 20 04 

00002004 <entry>:
    2004:	68 00 00 02 	SUB        $2,SP
    2005:	04 c7 40 00 	STO        R0,(SP)
    2006:	2c c7 40 01 	STO        R5,$1(SP)
    2007:	0b 00 01 00 	BREV       $256,R1
    2008:	03 c3 c0 02 	MOV        $2+PC,R0
    2009:	7c 87 c0 00 	LJMP       @0x00002063	// 2063 <zip_clear_sdram>
    200a:	00 00 20 63 
    200b:	0d 80 00 4f 	LDI        $79,R1
    200c:	0c c0 01 07 	STO        R1,($263)
    200d:	13 00 00 00 	LDI        0x0000223d,R2	// 223d <msg>
    200e:	12 40 22 3d 
    200f:	1c 84 80 00 	LOD        (R2),R3
    2010:	1c 00 00 00 	CMP        $0,R3
    2011:	78 98 00 10 	BNZ        @0x00002022	// 2022 <entry+0x1e>
    2012:	2b 00 40 02 	LDI        0x40024002,R5	// 40024002 <_top_of_heap+0x3f124002>
    2013:	2a 40 40 02 
    2014:	2c c0 01 06 	STO        R5,($262)
    2015:	0b 00 01 00 	BREV       $256,R1
    2016:	03 c3 c0 02 	MOV        $2+PC,R0
    2017:	7c 87 c0 00 	LJMP       @0x00002032	// 2032 <zip_read_image>
    2018:	00 00 20 32 
    2019:	28 83 bf fe 	ADD        $-16386,R5
    201a:	2c c0 01 06 	STO        R5,($262)
    201b:	0b 03 ff fe 	BREV       $-2,R1
    201c:	0c c0 01 04 	STO        R1,($260)
    201d:	03 c3 c0 02 	MOV        $2+PC,R0
    201e:	7c 87 c0 00 	LJMP       @0x000020a1	// 20a1 <test_malloc>
    201f:	00 00 20 a1 
    2020:	14 80 01 10 	LOD        ($272),R2
    2021:	78 80 00 09 	BRA        @0x0000202b	// 202b <entry+0x27>
    2022:	0c 80 01 0b 	LOD        ($267),R1
    2023:	0c 00 00 00 	CMP        $0,R1
    2024:	78 9b ff fd 	BNZ        @0x00002022	// 2022 <entry+0x1e>
    2025:	10 80 00 01 	ADD        $1,R2
    2026:	1c c0 01 0b 	STO        R3,($267)
    2027:	1c 84 80 00 	LOD        (R2),R3
    2028:	1c 00 00 00 	CMP        $0,R3
    2029:	78 9b ff f8 	BNZ        @0x00002022	// 2022 <entry+0x1e>
    202a:	78 83 ff e7 	BRA        @0x00002012	// 2012 <entry+0xe>
    202b:	0c 80 01 10 	LOD        ($272),R1
    202c:	14 04 40 00 	CMP        R1,R2
    202d:	78 93 ff fd 	BZ         @0x0000202b	// 202b <entry+0x27>
    202e:	04 87 40 00 	LOD        (SP),R0
    202f:	2c 87 40 01 	LOD        1(SP),R5
    2030:	68 80 00 02 	ADD        $2,SP
    2031:	7b c0 00 00 	JMP        R0

00002032 <zip_read_image>:
    2032:	68 00 00 05 	SUB        $5,SP
    2033:	2c c7 40 00 	STO        R5,(SP)
    2034:	34 c7 40 01 	STO        R6,$1(SP)
    2035:	3c c7 40 02 	STO        R7,$2(SP)
    2036:	44 c7 40 03 	STO        R8,$3(SP)
    2037:	4c c7 40 04 	STO        R9,$4(SP)
    2038:	25 80 00 00 	CLR        R4
    2039:	24 c0 01 04 	STO        R4,($260)
    203a:	15 81 00 01 	LDI        $65537,R2
    203b:	14 c0 01 06 	STO        R2,($262)
    203c:	2b c0 40 00 	MOV        R1,R5
    203d:	45 ff ff ff 	LDI        $-1,R8
    203e:	3b 00 c1 00 	BREV       $49408,R7
    203f:	35 81 00 00 	LDI        $65536,R6
    2040:	44 c4 40 00 	STO        R8,(R1)
    2041:	14 80 01 0a 	LOD        ($266),R2
    2042:	1b c0 80 00 	MOV        R2,R3
    2043:	18 40 01 00 	AND        $256,R3
    2044:	78 9b ff fc 	BNZ        @0x00002041	// 2041 <zip_read_image+0xf>
    2045:	11 80 00 14 	LSL        $20,R2
    2046:	1c 80 01 0a 	LOD        ($266),R3
    2047:	4b c0 c0 00 	MOV        R3,R9
    2048:	48 40 01 00 	AND        $256,R9
    2049:	78 9b ff fc 	BNZ        @0x00002046	// 2046 <zip_read_image+0x14>
    204a:	19 80 00 0a 	LSL        $10,R3
    204b:	10 c4 c0 00 	OR         R3,R2
    204c:	1c 80 01 0a 	LOD        ($266),R3
    204d:	4b c0 c0 00 	MOV        R3,R9
    204e:	48 40 01 00 	AND        $256,R9
    204f:	78 9b ff fc 	BNZ        @0x0000204c	// 204c <zip_read_image+0x1a>
    2050:	10 c4 c0 00 	OR         R3,R2
    2051:	14 c5 40 00 	STO        R2,(R5)
    2052:	24 c5 c0 00 	STO        R4,(R7)
    2053:	34 c0 01 06 	STO        R6,($262)
    2054:	14 80 01 02 	LOD        ($258),R2
    2055:	10 40 01 00 	AND        $256,R2
    2056:	78 98 00 05 	BNZ        @0x0000205c	// 205c <zip_read_image+0x2a>
    2057:	20 80 00 01 	ADD        $1,R4
    2058:	28 80 00 01 	ADD        $1,R5
    2059:	08 80 00 02 	ADD        $2,R1
    205a:	24 01 00 00 	CMP        $65536,R4
    205b:	78 9b ff e4 	BNZ        @0x00002040	// 2040 <zip_read_image+0xe>
    205c:	2c 87 40 00 	LOD        (SP),R5
    205d:	34 87 40 01 	LOD        1(SP),R6
    205e:	3c 87 40 02 	LOD        2(SP),R7
    205f:	44 87 40 03 	LOD        3(SP),R8
    2060:	4c 87 40 04 	LOD        4(SP),R9
    2061:	68 80 00 05 	ADD        $5,SP
    2062:	7b c0 00 00 	JMP        R0

00002063 <zip_clear_sdram>:
    2063:	15 83 00 00 	LDI        $196608,R2
    2064:	1b c0 40 00 	MOV        R1,R3
    2065:	18 84 80 00 	ADD        R2,R3
    2066:	15 80 00 00 	CLR        R2
    2067:	08 80 00 01 	ADD        $1,R1
    2068:	14 c4 7f ff 	STO        R2,$-1(R1)
    2069:	0c 04 c0 00 	CMP        R3,R1
    206a:	78 9b ff fc 	BNZ        @0x00002067	// 2067 <zip_clear_sdram+0x4>
    206b:	7b c0 00 00 	JMP        R0

0000206c <zip_write_image>:
    206c:	68 00 00 02 	SUB        $2,SP
    206d:	2c c7 40 00 	STO        R5,(SP)
    206e:	34 c7 40 01 	STO        R6,$1(SP)
    206f:	15 80 00 00 	CLR        R2
    2070:	14 c0 01 04 	STO        R2,($260)
    2071:	15 81 00 01 	LDI        $65537,R2
    2072:	14 c0 01 06 	STO        R2,($262)
    2073:	33 c0 40 00 	MOV        R1,R6
    2074:	30 81 00 00 	ADD        $65536,R6
    2075:	2b 00 0f f8 	BREV       $4088,R5
    2076:	25 87 fc 00 	LDI        $523264,R4
    2077:	14 80 01 0b 	LOD        ($267),R2
    2078:	14 00 00 00 	CMP        $0,R2
    2079:	78 9b ff fd 	BNZ        @0x00002077	// 2077 <zip_write_image+0xb>
    207a:	1c 84 40 00 	LOD        (R1),R3
    207b:	18 45 40 00 	AND        R5,R3
    207c:	19 c0 00 14 	ASR        $20,R3
    207d:	14 80 01 0b 	LOD        ($267),R2
    207e:	14 00 00 00 	CMP        $0,R2
    207f:	78 9b ff fd 	BNZ        @0x0000207d	// 207d <zip_write_image+0x11>
    2080:	1c c0 01 0b 	STO        R3,($267)
    2081:	1c 84 40 00 	LOD        (R1),R3
    2082:	18 45 00 00 	AND        R4,R3
    2083:	19 c0 00 0a 	ASR        $10,R3
    2084:	14 80 01 0b 	LOD        ($267),R2
    2085:	14 00 00 00 	CMP        $0,R2
    2086:	78 9b ff fd 	BNZ        @0x00002084	// 2084 <zip_write_image+0x18>
    2087:	1c c0 01 0b 	STO        R3,($267)
    2088:	1c 84 40 00 	LOD        (R1),R3
    2089:	18 40 01 ff 	AND        $511,R3
    208a:	14 80 01 0b 	LOD        ($267),R2
    208b:	14 00 00 00 	CMP        $0,R2
    208c:	78 9b ff fd 	BNZ        @0x0000208a	// 208a <zip_write_image+0x1e>
    208d:	1c c0 01 0b 	STO        R3,($267)
    208e:	14 80 01 0b 	LOD        ($267),R2
    208f:	14 00 00 00 	CMP        $0,R2
    2090:	78 9b ff fd 	BNZ        @0x0000208e	// 208e <zip_write_image+0x22>
    2091:	08 80 00 01 	ADD        $1,R1
    2092:	0c 05 80 00 	CMP        R6,R1
    2093:	78 9b ff e3 	BNZ        @0x00002077	// 2077 <zip_write_image+0xb>
    2094:	2c 87 40 00 	LOD        (SP),R5
    2095:	34 87 40 01 	LOD        1(SP),R6
    2096:	68 80 00 02 	ADD        $2,SP
    2097:	7b c0 00 00 	JMP        R0

00002098 <free>:
    2098:	7b c0 00 00 	JMP        R0

00002099 <malloc>:
    2099:	1b 00 00 00 	LDI        0x00002251,R3	// 2251 <heap>
    209a:	1a 40 22 51 
    209b:	14 84 c0 00 	LOD        (R3),R2
    209c:	23 c0 80 00 	MOV        R2,R4
    209d:	20 84 40 00 	ADD        R1,R4
    209e:	24 c4 c0 00 	STO        R4,(R3)
    209f:	0b c0 80 00 	MOV        R2,R1
    20a0:	7b c0 00 00 	JMP        R0

000020a1 <test_malloc>:
    20a1:	68 00 00 0c 	SUB        $12,SP
    20a2:	04 c7 40 03 	STO        R0,$3(SP)
    20a3:	2c c7 40 04 	STO        R5,$4(SP)
    20a4:	34 c7 40 05 	STO        R6,$5(SP)
    20a5:	3c c7 40 06 	STO        R7,$6(SP)
    20a6:	44 c7 40 07 	STO        R8,$7(SP)
    20a7:	4c c7 40 08 	STO        R9,$8(SP)
    20a8:	54 c7 40 09 	STO        R10,$9(SP)
    20a9:	5c c7 40 0a 	STO        R11,$10(SP)
    20aa:	64 c7 40 0b 	STO        R12,$11(SP)
    20ab:	0d 81 00 00 	LDI        $65536,R1
    20ac:	03 c3 c0 02 	MOV        $2+PC,R0
    20ad:	7c 87 c0 00 	LJMP       @0x00002099	// 2099 <malloc>
    20ae:	00 00 20 99 
    20af:	0c c7 40 00 	STO        R1,(SP)
    20b0:	0d 81 00 00 	LDI        $65536,R1
    20b1:	03 c3 c0 02 	MOV        $2+PC,R0
    20b2:	7c 87 c0 00 	LJMP       @0x00002099	// 2099 <malloc>
    20b3:	00 00 20 99 
    20b4:	0c c7 40 01 	STO        R1,$1(SP)
    20b5:	0d 81 00 00 	LDI        $65536,R1
    20b6:	03 c3 c0 02 	MOV        $2+PC,R0
    20b7:	7c 87 c0 00 	LJMP       @0x00002099	// 2099 <malloc>
    20b8:	00 00 20 99 
    20b9:	0c c7 40 02 	STO        R1,$2(SP)
    20ba:	03 01 e1 00 	LDI        0x0087fff2,R0	// 87fff2 <_top_of_stack+0x87bff3>
    20bb:	02 40 ff f2 
    20bc:	0c 87 40 00 	LOD        (SP),R1
    20bd:	0c c4 00 00 	STO        R1,(R0)
    20be:	03 01 e1 00 	LDI        0x0087fff3,R0	// 87fff3 <_top_of_stack+0x87bff4>
    20bf:	02 40 ff f3 
    20c0:	0c 87 40 01 	LOD        1(SP),R1
    20c1:	0c c4 00 00 	STO        R1,(R0)
    20c2:	03 01 e1 00 	LDI        0x0087fff4,R0	// 87fff4 <_top_of_stack+0x87bff5>
    20c3:	02 40 ff f4 
    20c4:	0c 87 40 02 	LOD        2(SP),R1
    20c5:	0c c4 00 00 	STO        R1,(R0)
    20c6:	0d 81 00 00 	LDI        $65536,R1
    20c7:	03 c3 c0 02 	MOV        $2+PC,R0
    20c8:	7c 87 c0 00 	LJMP       @0x00002099	// 2099 <malloc>
    20c9:	00 00 20 99 
    20ca:	03 01 e1 00 	LDI        0x0087fffa,R0	// 87fffa <_top_of_stack+0x87bffb>
    20cb:	02 40 ff fa 
    20cc:	0c c4 00 00 	STO        R1,(R0)
    20cd:	5c 87 40 02 	LOD        2(SP),R11
    20ce:	54 87 40 01 	LOD        1(SP),R10
    20cf:	14 87 40 00 	LOD        (SP),R2
    20d0:	4b 00 01 00 	BREV       $256,R9
    20d1:	43 00 0f f8 	BREV       $4088,R8
    20d2:	3d 87 fc 00 	LDI        $523264,R7
    20d3:	63 00 81 00 	BREV       $33024,R12
    20d4:	78 80 00 16 	BRA        @0x000020eb	// 20eb <test_malloc+0x4a>
    20d5:	04 85 00 00 	LOD        (R4),R0
    20d6:	20 80 00 01 	ADD        $1,R4
    20d7:	10 80 00 01 	ADD        $1,R2
    20d8:	33 c0 00 00 	MOV        R0,R6
    20d9:	30 46 00 00 	AND        R8,R6
    20da:	31 c0 00 14 	ASR        $20,R6
    20db:	34 c4 bf ff 	STO        R6,$-1(R2)
    20dc:	08 80 00 01 	ADD        $1,R1
    20dd:	33 c0 00 00 	MOV        R0,R6
    20de:	30 45 c0 00 	AND        R7,R6
    20df:	31 c0 00 0a 	ASR        $10,R6
    20e0:	34 c4 7f ff 	STO        R6,$-1(R1)
    20e1:	18 80 00 01 	ADD        $1,R3
    20e2:	00 40 01 ff 	AND        $511,R0
    20e3:	04 c4 ff ff 	STO        R0,$-1(R3)
    20e4:	14 05 40 00 	CMP        R5,R2
    20e5:	78 9b ff ef 	BNZ        @0x000020d5	// 20d5 <test_malloc+0x34>
    20e6:	48 80 01 00 	ADD        $256,R9
    20e7:	50 80 01 00 	ADD        $256,R10
    20e8:	58 80 01 00 	ADD        $256,R11
    20e9:	4c 07 00 00 	CMP        R12,R9
    20ea:	78 90 00 05 	BZ         @0x000020f0	// 20f0 <test_malloc+0x4f>
    20eb:	2b c0 81 00 	MOV        $256+R2,R5
    20ec:	23 c2 40 00 	MOV        R9,R4
    20ed:	1b c2 c0 00 	MOV        R11,R3
    20ee:	0b c2 80 00 	MOV        R10,R1
    20ef:	78 83 ff e5 	BRA        @0x000020d5	// 20d5 <test_malloc+0x34>
    20f0:	03 01 e1 00 	LDI        0x0087fff2,R0	// 87fff2 <_top_of_stack+0x87bff3>
    20f1:	02 40 ff f2 
    20f2:	0c 84 00 00 	LOD        (R0),R1
    20f3:	03 03 ff fe 	BREV       $-2,R0
    20f4:	04 c0 01 04 	STO        R0,($260)
    20f5:	14 80 01 04 	LOD        ($260),R2
    20f6:	00 04 80 00 	SUB        R2,R0
    20f7:	13 01 e1 00 	LDI        0x0087fffe,R2	// 87fffe <_top_of_stack+0x87bfff>
    20f8:	12 40 ff fe 
    20f9:	04 c4 80 00 	STO        R0,(R2)
    20fa:	03 c3 c0 02 	MOV        $2+PC,R0
    20fb:	7c 87 c0 00 	LJMP       @0x00002098	// 2098 <free>
    20fc:	00 00 20 98 
    20fd:	0c 87 40 00 	LOD        (SP),R1
    20fe:	08 81 00 00 	ADD        $65536,R1
    20ff:	03 c3 c0 02 	MOV        $2+PC,R0
    2100:	7c 87 c0 00 	LJMP       @0x00002098	// 2098 <free>
    2101:	00 00 20 98 
    2102:	0c 87 40 01 	LOD        1(SP),R1
    2103:	08 81 00 00 	ADD        $65536,R1
    2104:	03 c3 c0 02 	MOV        $2+PC,R0
    2105:	7c 87 c0 00 	LJMP       @0x00002098	// 2098 <free>
    2106:	00 00 20 98 
    2107:	0c 87 40 02 	LOD        2(SP),R1
    2108:	08 81 00 00 	ADD        $65536,R1
    2109:	03 c3 c0 02 	MOV        $2+PC,R0
    210a:	7c 87 c0 00 	LJMP       @0x00002098	// 2098 <free>
    210b:	00 00 20 98 
    210c:	04 87 40 03 	LOD        3(SP),R0
    210d:	2c 87 40 04 	LOD        4(SP),R5
    210e:	34 87 40 05 	LOD        5(SP),R6
    210f:	3c 87 40 06 	LOD        6(SP),R7
    2110:	44 87 40 07 	LOD        7(SP),R8
    2111:	4c 87 40 08 	LOD        8(SP),R9
    2112:	54 87 40 09 	LOD        9(SP),R10
    2113:	5c 87 40 0a 	LOD        10(SP),R11
    2114:	64 87 40 0b 	LOD        11(SP),R12
    2115:	68 80 00 0c 	ADD        $12,SP
    2116:	7b c0 00 00 	JMP        R0

00002117 <singlelift>:
    2117:	14 00 00 01 	CMP        $1,R2
    2118:	78 88 00 67 	BLT        @0x00002180	// 2180 <singlelift+0x69>
    2119:	68 00 00 0e 	SUB        $14,SP
    211a:	2c c7 40 06 	STO        R5,$6(SP)
    211b:	34 c7 40 07 	STO        R6,$7(SP)
    211c:	3c c7 40 08 	STO        R7,$8(SP)
    211d:	44 c7 40 09 	STO        R8,$9(SP)
    211e:	4c c7 40 0a 	STO        R9,$10(SP)
    211f:	54 c7 40 0b 	STO        R10,$11(SP)
    2120:	5c c7 40 0c 	STO        R11,$12(SP)
    2121:	64 c7 40 0d 	STO        R12,$13(SP)
    2122:	33 c0 80 00 	MOV        R2,R6
    2123:	32 04 40 00 	MPY        R1,R6
    2124:	2b c1 80 00 	MOV        R6,R5
    2125:	29 40 00 1f 	LSR        $31,R5
    2126:	28 85 80 00 	ADD        R6,R5
    2127:	29 c0 00 01 	ASR        $1,R5
    2128:	33 c0 9f ff 	MOV        $-1+R2,R6
    2129:	34 c7 40 03 	STO        R6,$3(SP)
    212a:	33 c0 80 00 	MOV        R2,R6
    212b:	31 c0 00 01 	ASR        $1,R6
    212c:	34 c7 40 01 	STO        R6,$1(SP)
    212d:	5b c0 c0 00 	MOV        R3,R11
    212e:	1b c1 00 00 	MOV        R4,R3
    212f:	18 85 40 00 	ADD        R5,R3
    2130:	1c c7 40 00 	STO        R3,(SP)
    2131:	63 c1 00 00 	MOV        R4,R12
    2132:	33 c1 00 00 	MOV        R4,R6
    2133:	30 84 80 00 	ADD        R2,R6
    2134:	34 c7 40 02 	STO        R6,$2(SP)
    2135:	13 03 ff fe 	BREV       $-2,R2
    2136:	1c 87 40 01 	LOD        1(SP),R3
    2137:	18 84 80 00 	ADD        R2,R3
    2138:	13 c0 c0 00 	MOV        R3,R2
    2139:	10 84 c0 00 	ADD        R3,R2
    213a:	14 c7 40 05 	STO        R2,$5(SP)
    213b:	34 87 40 01 	LOD        1(SP),R6
    213c:	13 c1 9f ff 	MOV        $-1+R6,R2
    213d:	12 04 40 00 	MPY        R1,R2
    213e:	10 85 40 00 	ADD        R5,R2
    213f:	14 c7 40 04 	STO        R2,$4(SP)
    2140:	23 c2 c0 00 	MOV        R11,R4
    2141:	43 c3 00 00 	MOV        R12,R8
    2142:	34 87 40 00 	LOD        (SP),R6
    2143:	14 86 c0 00 	LOD        (R11),R2
    2144:	3c 86 c0 02 	LOD        2(R11),R7
    2145:	2b c0 80 00 	MOV        R2,R5
    2146:	28 85 c0 00 	ADD        R7,R5
    2147:	28 80 00 02 	ADD        $2,R5
    2148:	29 c0 00 02 	ASR        $2,R5
    2149:	1c 86 c0 01 	LOD        1(R11),R3
    214a:	28 84 c0 00 	ADD        R3,R5
    214b:	14 c5 80 00 	STO        R2,(R6)
    214c:	2c c7 00 00 	STO        R5,(R12)
    214d:	14 87 40 01 	LOD        1(SP),R2
    214e:	1b c1 40 00 	MOV        R5,R3
    214f:	14 00 00 02 	CMP        $2,R2
    2150:	78 88 00 1a 	BLT        @0x0000216b	// 216b <singlelift+0x54>
    2151:	53 c2 c0 00 	MOV        R11,R10
    2152:	1c 87 40 05 	LOD        5(SP),R3
    2153:	50 84 c0 00 	ADD        R3,R10
    2154:	30 84 40 00 	ADD        R1,R6
    2155:	40 84 40 00 	ADD        R1,R8
    2156:	20 80 00 02 	ADD        $2,R4
    2157:	1c 85 00 01 	LOD        1(R4),R3
    2158:	4c 85 00 02 	LOD        2(R4),R9
    2159:	13 c0 c0 00 	MOV        R3,R2
    215a:	10 85 40 00 	ADD        R5,R2
    215b:	10 80 00 02 	ADD        $2,R2
    215c:	11 c0 00 02 	ASR        $2,R2
    215d:	10 85 c0 00 	ADD        R7,R2
    215e:	14 c5 80 00 	STO        R2,(R6)
    215f:	13 c2 40 00 	MOV        R9,R2
    2160:	10 85 c0 00 	ADD        R7,R2
    2161:	11 c0 00 01 	ASR        $1,R2
    2162:	18 04 80 00 	SUB        R2,R3
    2163:	2c c6 00 00 	STO        R5,(R8)
    2164:	3b c2 40 00 	MOV        R9,R7
    2165:	2b c0 c0 00 	MOV        R3,R5
    2166:	24 06 80 00 	CMP        R10,R4
    2167:	78 9b ff ec 	BNZ        @0x00002154	// 2154 <singlelift+0x3d>
    2168:	34 87 40 04 	LOD        4(SP),R6
    2169:	30 87 00 00 	ADD        R12,R6
    216a:	78 80 00 00 	BRA        @0x0000216b	// 216b <singlelift+0x54>
    216b:	14 87 40 03 	LOD        3(SP),R2
    216c:	30 84 80 00 	ADD        R2,R6
    216d:	1c c5 80 00 	STO        R3,(R6)
    216e:	58 84 40 00 	ADD        R1,R11
    216f:	1c 87 40 00 	LOD        (SP),R3
    2170:	18 80 00 01 	ADD        $1,R3
    2171:	1c c7 40 00 	STO        R3,(SP)
    2172:	60 80 00 01 	ADD        $1,R12
    2173:	34 87 40 02 	LOD        2(SP),R6
    2174:	34 07 00 00 	CMP        R12,R6
    2175:	78 9b ff ca 	BNZ        @0x00002140	// 2140 <singlelift+0x29>
    2176:	2c 87 40 06 	LOD        6(SP),R5
    2177:	34 87 40 07 	LOD        7(SP),R6
    2178:	3c 87 40 08 	LOD        8(SP),R7
    2179:	44 87 40 09 	LOD        9(SP),R8
    217a:	4c 87 40 0a 	LOD        10(SP),R9
    217b:	54 87 40 0b 	LOD        11(SP),R10
    217c:	5c 87 40 0c 	LOD        12(SP),R11
    217d:	64 87 40 0d 	LOD        13(SP),R12
    217e:	68 80 00 0e 	ADD        $14,SP
    217f:	7b c0 00 00 	JMP        R0
    2180:	7b c0 00 00 	JMP        R0

00002181 <lifting>:
    2181:	68 00 00 12 	SUB        $18,SP
    2182:	2c c7 40 0a 	STO        R5,$10(SP)
    2183:	34 c7 40 0b 	STO        R6,$11(SP)
    2184:	3c c7 40 0c 	STO        R7,$12(SP)
    2185:	44 c7 40 0d 	STO        R8,$13(SP)
    2186:	4c c7 40 0e 	STO        R9,$14(SP)
    2187:	54 c7 40 0f 	STO        R10,$15(SP)
    2188:	5c c7 40 10 	STO        R11,$16(SP)
    2189:	64 c7 40 11 	STO        R12,$17(SP)
    218a:	14 c7 40 04 	STO        R2,$4(SP)
    218b:	0c 00 00 01 	CMP        $1,R1
    218c:	78 88 00 96 	BLT        @0x00002223	// 2223 <lifting+0xa2>
    218d:	5b c0 80 00 	MOV        R2,R11
    218e:	13 c0 40 00 	MOV        R1,R2
    218f:	11 c0 00 01 	ASR        $1,R2
    2190:	14 c7 40 01 	STO        R2,$1(SP)
    2191:	13 c0 40 00 	MOV        R1,R2
    2192:	12 04 40 00 	MPY        R1,R2
    2193:	11 c0 00 01 	ASR        $1,R2
    2194:	14 c7 40 07 	STO        R2,$7(SP)
    2195:	23 c0 5f ff 	MOV        $-1+R1,R4
    2196:	24 c7 40 02 	STO        R4,$2(SP)
    2197:	14 87 40 04 	LOD        4(SP),R2
    2198:	14 c7 40 08 	STO        R2,$8(SP)
    2199:	23 c0 c0 00 	MOV        R3,R4
    219a:	14 87 40 07 	LOD        7(SP),R2
    219b:	20 84 80 00 	ADD        R2,R4
    219c:	24 c7 40 00 	STO        R4,(SP)
    219d:	53 c0 c0 00 	MOV        R3,R10
    219e:	18 84 40 00 	ADD        R1,R3
    219f:	1c c7 40 05 	STO        R3,$5(SP)
    21a0:	13 03 ff fe 	BREV       $-2,R2
    21a1:	24 87 40 01 	LOD        1(SP),R4
    21a2:	20 84 80 00 	ADD        R2,R4
    21a3:	13 c1 00 00 	MOV        R4,R2
    21a4:	10 85 00 00 	ADD        R4,R2
    21a5:	14 c7 40 03 	STO        R2,$3(SP)
    21a6:	1c 87 40 01 	LOD        1(SP),R3
    21a7:	13 c0 df ff 	MOV        $-1+R3,R2
    21a8:	12 04 40 00 	MPY        R1,R2
    21a9:	24 87 40 07 	LOD        7(SP),R4
    21aa:	10 85 00 00 	ADD        R4,R2
    21ab:	14 c7 40 06 	STO        R2,$6(SP)
    21ac:	54 c7 40 09 	STO        R10,$9(SP)
    21ad:	63 c2 80 00 	MOV        R10,R12
    21ae:	2b c2 c0 00 	MOV        R11,R5
    21af:	43 c3 00 00 	MOV        R12,R8
    21b0:	3c 87 40 00 	LOD        (SP),R7
    21b1:	14 86 c0 00 	LOD        (R11),R2
    21b2:	1c 86 c0 02 	LOD        2(R11),R3
    21b3:	33 c0 80 00 	MOV        R2,R6
    21b4:	30 84 c0 00 	ADD        R3,R6
    21b5:	30 80 00 02 	ADD        $2,R6
    21b6:	31 c0 00 02 	ASR        $2,R6
    21b7:	24 86 c0 01 	LOD        1(R11),R4
    21b8:	30 85 00 00 	ADD        R4,R6
    21b9:	14 c5 c0 00 	STO        R2,(R7)
    21ba:	34 c7 00 00 	STO        R6,(R12)
    21bb:	14 87 40 01 	LOD        1(SP),R2
    21bc:	53 c2 c0 00 	MOV        R11,R10
    21bd:	24 87 40 03 	LOD        3(SP),R4
    21be:	50 85 00 00 	ADD        R4,R10
    21bf:	14 00 00 01 	CMP        $1,R2
    21c0:	78 a0 00 0e 	BGT        @0x000021cf	// 21cf <lifting+0x4e>
    21c1:	23 c1 80 00 	MOV        R6,R4
    21c2:	1c 87 40 02 	LOD        2(SP),R3
    21c3:	38 84 c0 00 	ADD        R3,R7
    21c4:	24 c5 c0 00 	STO        R4,(R7)
    21c5:	58 84 40 00 	ADD        R1,R11
    21c6:	24 87 40 00 	LOD        (SP),R4
    21c7:	20 80 00 01 	ADD        $1,R4
    21c8:	24 c7 40 00 	STO        R4,(SP)
    21c9:	60 80 00 01 	ADD        $1,R12
    21ca:	14 87 40 05 	LOD        5(SP),R2
    21cb:	14 07 00 00 	CMP        R12,R2
    21cc:	78 9b ff e1 	BNZ        @0x000021ae	// 21ae <lifting+0x2d>
    21cd:	54 87 40 09 	LOD        9(SP),R10
    21ce:	78 80 00 16 	BRA        @0x000021e5	// 21e5 <lifting+0x64>
    21cf:	38 84 40 00 	ADD        R1,R7
    21d0:	40 84 40 00 	ADD        R1,R8
    21d1:	28 80 00 02 	ADD        $2,R5
    21d2:	24 85 40 01 	LOD        1(R5),R4
    21d3:	4c 85 40 02 	LOD        2(R5),R9
    21d4:	13 c1 80 00 	MOV        R6,R2
    21d5:	10 85 00 00 	ADD        R4,R2
    21d6:	10 80 00 02 	ADD        $2,R2
    21d7:	11 c0 00 02 	ASR        $2,R2
    21d8:	10 84 c0 00 	ADD        R3,R2
    21d9:	14 c5 c0 00 	STO        R2,(R7)
    21da:	18 86 40 00 	ADD        R9,R3
    21db:	19 c0 00 01 	ASR        $1,R3
    21dc:	20 04 c0 00 	SUB        R3,R4
    21dd:	34 c6 00 00 	STO        R6,(R8)
    21de:	1b c2 40 00 	MOV        R9,R3
    21df:	33 c1 00 00 	MOV        R4,R6
    21e0:	54 05 40 00 	CMP        R5,R10
    21e1:	78 9b ff ed 	BNZ        @0x000021cf	// 21cf <lifting+0x4e>
    21e2:	3c 87 40 06 	LOD        6(SP),R7
    21e3:	38 87 00 00 	ADD        R12,R7
    21e4:	78 83 ff dd 	BRA        @0x000021c2	// 21c2 <lifting+0x41>
    21e5:	14 87 40 04 	LOD        4(SP),R2
    21e6:	1c 87 40 07 	LOD        7(SP),R3
    21e7:	10 84 c0 00 	ADD        R3,R2
    21e8:	24 87 40 04 	LOD        4(SP),R4
    21e9:	20 84 40 00 	ADD        R1,R4
    21ea:	24 c7 40 04 	STO        R4,$4(SP)
    21eb:	14 c7 40 00 	STO        R2,(SP)
    21ec:	64 87 40 08 	LOD        8(SP),R12
    21ed:	2b c2 80 00 	MOV        R10,R5
    21ee:	43 c3 00 00 	MOV        R12,R8
    21ef:	3c 87 40 00 	LOD        (SP),R7
    21f0:	14 86 80 00 	LOD        (R10),R2
    21f1:	1c 86 80 02 	LOD        2(R10),R3
    21f2:	33 c0 80 00 	MOV        R2,R6
    21f3:	30 84 c0 00 	ADD        R3,R6
    21f4:	30 80 00 02 	ADD        $2,R6
    21f5:	31 c0 00 02 	ASR        $2,R6
    21f6:	24 86 80 01 	LOD        1(R10),R4
    21f7:	30 85 00 00 	ADD        R4,R6
    21f8:	14 c5 c0 00 	STO        R2,(R7)
    21f9:	34 c7 00 00 	STO        R6,(R12)
    21fa:	14 87 40 01 	LOD        1(SP),R2
    21fb:	5b c2 80 00 	MOV        R10,R11
    21fc:	24 87 40 03 	LOD        3(SP),R4
    21fd:	58 85 00 00 	ADD        R4,R11
    21fe:	14 00 00 01 	CMP        $1,R2
    21ff:	78 a0 00 0d 	BGT        @0x0000220d	// 220d <lifting+0x8c>
    2200:	23 c1 80 00 	MOV        R6,R4
    2201:	1c 87 40 02 	LOD        2(SP),R3
    2202:	38 84 c0 00 	ADD        R3,R7
    2203:	24 c5 c0 00 	STO        R4,(R7)
    2204:	50 84 40 00 	ADD        R1,R10
    2205:	24 87 40 00 	LOD        (SP),R4
    2206:	20 80 00 01 	ADD        $1,R4
    2207:	24 c7 40 00 	STO        R4,(SP)
    2208:	60 80 00 01 	ADD        $1,R12
    2209:	14 87 40 04 	LOD        4(SP),R2
    220a:	14 07 00 00 	CMP        R12,R2
    220b:	78 9b ff e1 	BNZ        @0x000021ed	// 21ed <lifting+0x6c>
    220c:	78 80 00 16 	BRA        @0x00002223	// 2223 <lifting+0xa2>
    220d:	38 84 40 00 	ADD        R1,R7
    220e:	40 84 40 00 	ADD        R1,R8
    220f:	28 80 00 02 	ADD        $2,R5
    2210:	24 85 40 01 	LOD        1(R5),R4
    2211:	4c 85 40 02 	LOD        2(R5),R9
    2212:	13 c1 80 00 	MOV        R6,R2
    2213:	10 85 00 00 	ADD        R4,R2
    2214:	10 80 00 02 	ADD        $2,R2
    2215:	11 c0 00 02 	ASR        $2,R2
    2216:	10 84 c0 00 	ADD        R3,R2
    2217:	14 c5 c0 00 	STO        R2,(R7)
    2218:	18 86 40 00 	ADD        R9,R3
    2219:	19 c0 00 01 	ASR        $1,R3
    221a:	20 04 c0 00 	SUB        R3,R4
    221b:	34 c6 00 00 	STO        R6,(R8)
    221c:	1b c2 40 00 	MOV        R9,R3
    221d:	33 c1 00 00 	MOV        R4,R6
    221e:	5c 05 40 00 	CMP        R5,R11
    221f:	78 9b ff ed 	BNZ        @0x0000220d	// 220d <lifting+0x8c>
    2220:	3c 87 40 06 	LOD        6(SP),R7
    2221:	38 87 00 00 	ADD        R12,R7
    2222:	78 83 ff de 	BRA        @0x00002201	// 2201 <lifting+0x80>
    2223:	2c 87 40 0a 	LOD        10(SP),R5
    2224:	34 87 40 0b 	LOD        11(SP),R6
    2225:	3c 87 40 0c 	LOD        12(SP),R7
    2226:	44 87 40 0d 	LOD        13(SP),R8
    2227:	4c 87 40 0e 	LOD        14(SP),R9
    2228:	54 87 40 0f 	LOD        15(SP),R10
    2229:	5c 87 40 10 	LOD        16(SP),R11
    222a:	64 87 40 11 	LOD        17(SP),R12
    222b:	68 80 00 12 	ADD        $18,SP
    222c:	7b c0 00 00 	JMP        R0

0000222d <msg1>:
    222d:	00 00 00 44 00 00 00 61 00 00 00 74 00 00 00 61     ...D...a...t...a
    2231:	00 00 00 20 00 00 00 72 00 00 00 64 00 00 00 79     ... ...r...d...y
    2235:	00 00 00 20 00 00 00 20 00 00 00 20 00 00 00 20     ... ... ... ... 
    2239:	00 00 00 20 00 00 00 0d 00 00 00 0a 00 00 00 00     ... ............

0000223d <msg>:
    223d:	00 00 00 48 00 00 00 65 00 00 00 6c 00 00 00 6c     ...H...e...l...l
    2241:	00 00 00 6f 00 00 00 2c 00 00 00 20 00 00 00 77     ...o...,... ...w
    2245:	00 00 00 6f 00 00 00 72 00 00 00 6c 00 00 00 64     ...o...r...l...d
    2249:	00 00 00 21 00 00 00 0d 00 00 00 0a 00 00 00 00     ...!............

0000224d <XULA_BUSY>:
    224d:	40 00 00 00                                         @...

0000224e <READY_FOR_XMIT>:
    224e:	40 00 40 00                                         @.@.

0000224f <LED_OFF>:
    224f:	00 02 00 00                                         ....

00002250 <LED_ON>:
    2250:	00 02 00 02                                         ....
