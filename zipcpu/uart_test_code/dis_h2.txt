
h2:     file format elf32-zip


Disassembly of section .rocode:

00002000 <_start>:
    2000:	6b 00 00 00 	LDI        0x00003fff,SP	// 3fff <_top_of_stack>
    2001:	6a 40 3f ff 
    2002:	7c 87 c0 00 	LJMP       @0x00002004	// 2004 <entry>
    2003:	00 00 20 04 

00002004 <entry>:
    2004:	68 00 00 02 	SUB        $2,SP
    2005:	04 c7 40 00 	STO        R0,(SP)
    2006:	2c c7 40 01 	STO        R5,$1(SP)
    2007:	0b 00 01 00 	BREV       $256,R1
    2008:	03 c3 c0 02 	MOV        $2+PC,R0
    2009:	7c 87 c0 00 	LJMP       @0x00002063	// 2063 <zip_clear_sdram>
    200a:	00 00 20 63 
    200b:	0d 80 00 4f 	LDI        $79,R1
    200c:	0c c0 01 07 	STO        R1,($263)
    200d:	13 00 00 00 	LDI        0x0000230f,R2	// 230f <msg>
    200e:	12 40 23 0f 
    200f:	1c 84 80 00 	LOD        (R2),R3
    2010:	1c 00 00 00 	CMP        $0,R3
    2011:	78 98 00 10 	BNZ        @0x00002022	// 2022 <entry+0x1e>
    2012:	2b 00 40 02 	LDI        0x40024002,R5	// 40024002 <_top_of_heap+0x3f124002>
    2013:	2a 40 40 02 
    2014:	2c c0 01 06 	STO        R5,($262)
    2015:	0b 00 01 00 	BREV       $256,R1
    2016:	03 c3 c0 02 	MOV        $2+PC,R0
    2017:	7c 87 c0 00 	LJMP       @0x00002032	// 2032 <zip_read_image>
    2018:	00 00 20 32 
    2019:	28 83 bf fe 	ADD        $-16386,R5
    201a:	2c c0 01 06 	STO        R5,($262)
    201b:	0b 03 ff fe 	BREV       $-2,R1
    201c:	0c c0 01 04 	STO        R1,($260)
    201d:	03 c3 c0 02 	MOV        $2+PC,R0
    201e:	7c 87 c0 00 	LJMP       @0x000021ca	// 21ca <test_malloc>
    201f:	00 00 21 ca 
    2020:	14 80 01 10 	LOD        ($272),R2
    2021:	78 80 00 09 	BRA        @0x0000202b	// 202b <entry+0x27>
    2022:	0c 80 01 0b 	LOD        ($267),R1
    2023:	0c 00 00 00 	CMP        $0,R1
    2024:	78 9b ff fd 	BNZ        @0x00002022	// 2022 <entry+0x1e>
    2025:	10 80 00 01 	ADD        $1,R2
    2026:	1c c0 01 0b 	STO        R3,($267)
    2027:	1c 84 80 00 	LOD        (R2),R3
    2028:	1c 00 00 00 	CMP        $0,R3
    2029:	78 9b ff f8 	BNZ        @0x00002022	// 2022 <entry+0x1e>
    202a:	78 83 ff e7 	BRA        @0x00002012	// 2012 <entry+0xe>
    202b:	0c 80 01 10 	LOD        ($272),R1
    202c:	14 04 40 00 	CMP        R1,R2
    202d:	78 93 ff fd 	BZ         @0x0000202b	// 202b <entry+0x27>
    202e:	04 87 40 00 	LOD        (SP),R0
    202f:	2c 87 40 01 	LOD        1(SP),R5
    2030:	68 80 00 02 	ADD        $2,SP
    2031:	7b c0 00 00 	JMP        R0

00002032 <zip_read_image>:
    2032:	68 00 00 05 	SUB        $5,SP
    2033:	2c c7 40 00 	STO        R5,(SP)
    2034:	34 c7 40 01 	STO        R6,$1(SP)
    2035:	3c c7 40 02 	STO        R7,$2(SP)
    2036:	44 c7 40 03 	STO        R8,$3(SP)
    2037:	4c c7 40 04 	STO        R9,$4(SP)
    2038:	25 80 00 00 	CLR        R4
    2039:	24 c0 01 04 	STO        R4,($260)
    203a:	15 81 00 01 	LDI        $65537,R2
    203b:	14 c0 01 06 	STO        R2,($262)
    203c:	2b c0 40 00 	MOV        R1,R5
    203d:	45 ff ff ff 	LDI        $-1,R8
    203e:	3b 00 c1 00 	BREV       $49408,R7
    203f:	35 81 00 00 	LDI        $65536,R6
    2040:	44 c4 40 00 	STO        R8,(R1)
    2041:	14 80 01 0a 	LOD        ($266),R2
    2042:	1b c0 80 00 	MOV        R2,R3
    2043:	18 40 01 00 	AND        $256,R3
    2044:	78 9b ff fc 	BNZ        @0x00002041	// 2041 <zip_read_image+0xf>
    2045:	11 80 00 14 	LSL        $20,R2
    2046:	1c 80 01 0a 	LOD        ($266),R3
    2047:	4b c0 c0 00 	MOV        R3,R9
    2048:	48 40 01 00 	AND        $256,R9
    2049:	78 9b ff fc 	BNZ        @0x00002046	// 2046 <zip_read_image+0x14>
    204a:	19 80 00 0a 	LSL        $10,R3
    204b:	10 c4 c0 00 	OR         R3,R2
    204c:	1c 80 01 0a 	LOD        ($266),R3
    204d:	4b c0 c0 00 	MOV        R3,R9
    204e:	48 40 01 00 	AND        $256,R9
    204f:	78 9b ff fc 	BNZ        @0x0000204c	// 204c <zip_read_image+0x1a>
    2050:	10 c4 c0 00 	OR         R3,R2
    2051:	14 c5 40 00 	STO        R2,(R5)
    2052:	24 c5 c0 00 	STO        R4,(R7)
    2053:	34 c0 01 06 	STO        R6,($262)
    2054:	14 80 01 02 	LOD        ($258),R2
    2055:	10 40 01 00 	AND        $256,R2
    2056:	78 98 00 05 	BNZ        @0x0000205c	// 205c <zip_read_image+0x2a>
    2057:	20 80 00 01 	ADD        $1,R4
    2058:	28 80 00 01 	ADD        $1,R5
    2059:	08 80 00 02 	ADD        $2,R1
    205a:	24 01 00 00 	CMP        $65536,R4
    205b:	78 9b ff e4 	BNZ        @0x00002040	// 2040 <zip_read_image+0xe>
    205c:	2c 87 40 00 	LOD        (SP),R5
    205d:	34 87 40 01 	LOD        1(SP),R6
    205e:	3c 87 40 02 	LOD        2(SP),R7
    205f:	44 87 40 03 	LOD        3(SP),R8
    2060:	4c 87 40 04 	LOD        4(SP),R9
    2061:	68 80 00 05 	ADD        $5,SP
    2062:	7b c0 00 00 	JMP        R0

00002063 <zip_clear_sdram>:
    2063:	15 83 00 00 	LDI        $196608,R2
    2064:	1b c0 40 00 	MOV        R1,R3
    2065:	18 84 80 00 	ADD        R2,R3
    2066:	15 80 00 00 	CLR        R2
    2067:	08 80 00 01 	ADD        $1,R1
    2068:	14 c4 7f ff 	STO        R2,$-1(R1)
    2069:	0c 04 c0 00 	CMP        R3,R1
    206a:	78 9b ff fc 	BNZ        @0x00002067	// 2067 <zip_clear_sdram+0x4>
    206b:	7b c0 00 00 	JMP        R0

0000206c <free>:
    206c:	7b c0 00 00 	JMP        R0

0000206d <malloc>:
    206d:	1b 00 00 00 	LDI        0x00002323,R3	// 2323 <heap>
    206e:	1a 40 23 23 
    206f:	14 84 c0 00 	LOD        (R3),R2
    2070:	23 c0 80 00 	MOV        R2,R4
    2071:	20 84 40 00 	ADD        R1,R4
    2072:	24 c4 c0 00 	STO        R4,(R3)
    2073:	0b c0 80 00 	MOV        R2,R1
    2074:	7b c0 00 00 	JMP        R0

00002075 <singlelift>:
    2075:	14 00 00 01 	CMP        $1,R2
    2076:	78 88 00 6e 	BLT        @0x000020e5	// 20e5 <singlelift+0x70>
    2077:	68 00 00 0f 	SUB        $15,SP
    2078:	2c c7 40 07 	STO        R5,$7(SP)
    2079:	34 c7 40 08 	STO        R6,$8(SP)
    207a:	3c c7 40 09 	STO        R7,$9(SP)
    207b:	44 c7 40 0a 	STO        R8,$10(SP)
    207c:	4c c7 40 0b 	STO        R9,$11(SP)
    207d:	54 c7 40 0c 	STO        R10,$12(SP)
    207e:	5c c7 40 0d 	STO        R11,$13(SP)
    207f:	64 c7 40 0e 	STO        R12,$14(SP)
    2080:	33 c0 80 00 	MOV        R2,R6
    2081:	32 04 40 00 	MPY        R1,R6
    2082:	2b c1 80 00 	MOV        R6,R5
    2083:	29 40 00 1f 	LSR        $31,R5
    2084:	28 85 80 00 	ADD        R6,R5
    2085:	29 c0 00 01 	ASR        $1,R5
    2086:	33 c0 9f ff 	MOV        $-1+R2,R6
    2087:	34 c7 40 04 	STO        R6,$4(SP)
    2088:	33 c0 80 00 	MOV        R2,R6
    2089:	31 c0 00 01 	ASR        $1,R6
    208a:	34 c7 40 02 	STO        R6,$2(SP)
    208b:	63 c0 c0 00 	MOV        R3,R12
    208c:	1b c1 00 00 	MOV        R4,R3
    208d:	18 85 40 00 	ADD        R5,R3
    208e:	1c c7 40 01 	STO        R3,$1(SP)
    208f:	24 c7 40 00 	STO        R4,(SP)
    2090:	33 c1 00 00 	MOV        R4,R6
    2091:	30 84 80 00 	ADD        R2,R6
    2092:	34 c7 40 03 	STO        R6,$3(SP)
    2093:	13 03 ff fe 	BREV       $-2,R2
    2094:	1c 87 40 02 	LOD        2(SP),R3
    2095:	18 84 80 00 	ADD        R2,R3
    2096:	13 c0 c0 00 	MOV        R3,R2
    2097:	10 84 c0 00 	ADD        R3,R2
    2098:	14 c7 40 06 	STO        R2,$6(SP)
    2099:	34 87 40 02 	LOD        2(SP),R6
    209a:	13 c1 9f ff 	MOV        $-1+R6,R2
    209b:	12 04 40 00 	MPY        R1,R2
    209c:	10 85 40 00 	ADD        R5,R2
    209d:	14 c7 40 05 	STO        R2,$5(SP)
    209e:	5b 01 ff fc 	LDI        0x3ffffffd,R11	// 3ffffffd <_top_of_heap+0x3f0ffffd>
    209f:	5a 40 ff fd 
    20a0:	23 c3 00 00 	MOV        R12,R4
    20a1:	44 87 40 00 	LOD        (SP),R8
    20a2:	34 87 40 01 	LOD        1(SP),R6
    20a3:	14 87 00 00 	LOD        (R12),R2
    20a4:	3c 87 00 02 	LOD        2(R12),R7
    20a5:	2b c0 80 00 	MOV        R2,R5
    20a6:	28 85 c0 00 	ADD        R7,R5
    20a7:	28 80 00 02 	ADD        $2,R5
    20a8:	29 c0 00 02 	ASR        $2,R5
    20a9:	1c 87 00 01 	LOD        1(R12),R3
    20aa:	28 84 c0 00 	ADD        R3,R5
    20ab:	14 c5 80 00 	STO        R2,(R6)
    20ac:	2c c6 00 00 	STO        R5,(R8)
    20ad:	1c 87 40 02 	LOD        2(SP),R3
    20ae:	1c 00 00 02 	CMP        $2,R3
    20af:	78 88 00 1d 	BLT        @0x000020cd	// 20cd <singlelift+0x58>
    20b0:	53 c3 00 00 	MOV        R12,R10
    20b1:	14 87 40 06 	LOD        6(SP),R2
    20b2:	50 84 80 00 	ADD        R2,R10
    20b3:	30 84 40 00 	ADD        R1,R6
    20b4:	40 84 40 00 	ADD        R1,R8
    20b5:	20 80 00 02 	ADD        $2,R4
    20b6:	1c 85 00 01 	LOD        1(R4),R3
    20b7:	4c 85 00 02 	LOD        2(R4),R9
    20b8:	13 c0 c0 00 	MOV        R3,R2
    20b9:	10 85 40 00 	ADD        R5,R2
    20ba:	10 80 00 02 	ADD        $2,R2
    20bb:	11 c0 00 02 	ASR        $2,R2
    20bc:	10 85 c0 00 	ADD        R7,R2
    20bd:	14 c5 80 00 	STO        R2,(R6)
    20be:	13 c2 40 00 	MOV        R9,R2
    20bf:	10 85 c0 00 	ADD        R7,R2
    20c0:	11 c0 00 01 	ASR        $1,R2
    20c1:	18 04 80 00 	SUB        R2,R3
    20c2:	1c 06 c0 00 	CMP        R11,R3
    20c3:	70 d0 00 10 	HALT.Z     
    20c4:	2c c6 00 00 	STO        R5,(R8)
    20c5:	3b c2 40 00 	MOV        R9,R7
    20c6:	2b c0 c0 00 	MOV        R3,R5
    20c7:	24 06 80 00 	CMP        R10,R4
    20c8:	78 9b ff ea 	BNZ        @0x000020b3	// 20b3 <singlelift+0x3e>
    20c9:	34 87 40 05 	LOD        5(SP),R6
    20ca:	14 87 40 00 	LOD        (SP),R2
    20cb:	30 84 80 00 	ADD        R2,R6
    20cc:	78 80 00 01 	BRA        @0x000020ce	// 20ce <singlelift+0x59>
    20cd:	1b c1 40 00 	MOV        R5,R3
    20ce:	14 87 40 04 	LOD        4(SP),R2
    20cf:	30 84 80 00 	ADD        R2,R6
    20d0:	1c c5 80 00 	STO        R3,(R6)
    20d1:	60 84 40 00 	ADD        R1,R12
    20d2:	1c 87 40 01 	LOD        1(SP),R3
    20d3:	18 80 00 01 	ADD        $1,R3
    20d4:	1c c7 40 01 	STO        R3,$1(SP)
    20d5:	34 87 40 00 	LOD        (SP),R6
    20d6:	30 80 00 01 	ADD        $1,R6
    20d7:	34 c7 40 00 	STO        R6,(SP)
    20d8:	14 87 40 03 	LOD        3(SP),R2
    20d9:	14 05 80 00 	CMP        R6,R2
    20da:	78 9b ff c5 	BNZ        @0x000020a0	// 20a0 <singlelift+0x2b>
    20db:	2c 87 40 07 	LOD        7(SP),R5
    20dc:	34 87 40 08 	LOD        8(SP),R6
    20dd:	3c 87 40 09 	LOD        9(SP),R7
    20de:	44 87 40 0a 	LOD        10(SP),R8
    20df:	4c 87 40 0b 	LOD        11(SP),R9
    20e0:	54 87 40 0c 	LOD        12(SP),R10
    20e1:	5c 87 40 0d 	LOD        13(SP),R11
    20e2:	64 87 40 0e 	LOD        14(SP),R12
    20e3:	68 80 00 0f 	ADD        $15,SP
    20e4:	7b c0 00 00 	JMP        R0
    20e5:	7b c0 00 00 	JMP        R0

000020e6 <lifting>:
    20e6:	68 00 00 16 	SUB        $22,SP
    20e7:	2c c7 40 0e 	STO        R5,$14(SP)
    20e8:	34 c7 40 0f 	STO        R6,$15(SP)
    20e9:	3c c7 40 10 	STO        R7,$16(SP)
    20ea:	44 c7 40 11 	STO        R8,$17(SP)
    20eb:	4c c7 40 12 	STO        R9,$18(SP)
    20ec:	54 c7 40 13 	STO        R10,$19(SP)
    20ed:	5c c7 40 14 	STO        R11,$20(SP)
    20ee:	64 c7 40 15 	STO        R12,$21(SP)
    20ef:	5b c0 40 00 	MOV        R1,R11
    20f0:	14 c7 40 09 	STO        R2,$9(SP)
    20f1:	1c c7 40 0a 	STO        R3,$10(SP)
    20f2:	0c c7 40 08 	STO        R1,$8(SP)
    20f3:	0d 80 00 03 	LDI        $3,R1
    20f4:	0c c7 40 0c 	STO        R1,$12(SP)
    20f5:	63 01 ff fc 	LDI        0x3ffffffd,R12	// 3ffffffd <_top_of_heap+0x3f0ffffd>
    20f6:	62 40 ff fd 
    20f7:	13 c2 c0 00 	MOV        R11,R2
    20f8:	78 80 00 90 	BRA        @0x00002189	// 2189 <lifting+0xa3>
    20f9:	1b c2 80 00 	MOV        R10,R3
    20fa:	3c 87 40 00 	LOD        (SP),R7
    20fb:	2c 87 40 02 	LOD        2(SP),R5
    20fc:	0c 86 80 00 	LOD        (R10),R1
    20fd:	34 86 80 02 	LOD        2(R10),R6
    20fe:	23 c0 40 00 	MOV        R1,R4
    20ff:	20 85 80 00 	ADD        R6,R4
    2100:	20 80 00 02 	ADD        $2,R4
    2101:	21 c0 00 02 	ASR        $2,R4
    2102:	14 86 80 01 	LOD        1(R10),R2
    2103:	20 84 80 00 	ADD        R2,R4
    2104:	0c c5 40 00 	STO        R1,(R5)
    2105:	24 c5 c0 00 	STO        R4,(R7)
    2106:	0c 87 40 03 	LOD        3(SP),R1
    2107:	0c 00 00 02 	CMP        $2,R1
    2108:	78 88 00 1c 	BLT        @0x00002125	// 2125 <lifting+0x3f>
    2109:	4c 87 40 05 	LOD        5(SP),R9
    210a:	48 86 80 00 	ADD        R10,R9
    210b:	28 86 c0 00 	ADD        R11,R5
    210c:	38 86 c0 00 	ADD        R11,R7
    210d:	18 80 00 02 	ADD        $2,R3
    210e:	14 84 c0 01 	LOD        1(R3),R2
    210f:	44 84 c0 02 	LOD        2(R3),R8
    2110:	0b c0 80 00 	MOV        R2,R1
    2111:	08 85 00 00 	ADD        R4,R1
    2112:	08 80 00 02 	ADD        $2,R1
    2113:	09 c0 00 02 	ASR        $2,R1
    2114:	08 85 80 00 	ADD        R6,R1
    2115:	0c c5 40 00 	STO        R1,(R5)
    2116:	0b c2 00 00 	MOV        R8,R1
    2117:	08 85 80 00 	ADD        R6,R1
    2118:	09 c0 00 01 	ASR        $1,R1
    2119:	10 04 40 00 	SUB        R1,R2
    211a:	14 07 00 00 	CMP        R12,R2
    211b:	70 d0 00 10 	HALT.Z     
    211c:	24 c5 c0 00 	STO        R4,(R7)
    211d:	23 c0 80 00 	MOV        R2,R4
    211e:	33 c2 00 00 	MOV        R8,R6
    211f:	1c 06 40 00 	CMP        R9,R3
    2120:	78 9b ff ea 	BNZ        @0x0000210b	// 210b <lifting+0x25>
    2121:	2c 87 40 06 	LOD        6(SP),R5
    2122:	1c 87 40 00 	LOD        (SP),R3
    2123:	28 84 c0 00 	ADD        R3,R5
    2124:	78 80 00 02 	BRA        @0x00002127	// 2127 <lifting+0x41>
    2125:	13 c1 00 00 	MOV        R4,R2
    2126:	1b c1 c0 00 	MOV        R7,R3
    2127:	0c 87 40 04 	LOD        4(SP),R1
    2128:	28 84 40 00 	ADD        R1,R5
    2129:	14 c5 40 00 	STO        R2,(R5)
    212a:	50 86 c0 00 	ADD        R11,R10
    212b:	14 87 40 02 	LOD        2(SP),R2
    212c:	10 80 00 01 	ADD        $1,R2
    212d:	14 c7 40 02 	STO        R2,$2(SP)
    212e:	18 80 00 01 	ADD        $1,R3
    212f:	1c c7 40 00 	STO        R3,(SP)
    2130:	0c 87 40 07 	LOD        7(SP),R1
    2131:	0c 04 c0 00 	CMP        R3,R1
    2132:	78 9b ff c6 	BNZ        @0x000020f9	// 20f9 <lifting+0x13>
    2133:	54 87 40 09 	LOD        9(SP),R10
    2134:	14 87 40 0b 	LOD        11(SP),R2
    2135:	50 84 80 00 	ADD        R2,R10
    2136:	0c 87 40 09 	LOD        9(SP),R1
    2137:	14 87 40 08 	LOD        8(SP),R2
    2138:	08 84 80 00 	ADD        R2,R1
    2139:	0c c7 40 02 	STO        R1,$2(SP)
    213a:	54 c7 40 00 	STO        R10,(SP)
    213b:	54 87 40 0d 	LOD        13(SP),R10
    213c:	1b c2 80 00 	MOV        R10,R3
    213d:	3c 87 40 01 	LOD        1(SP),R7
    213e:	2c 87 40 00 	LOD        (SP),R5
    213f:	0c 86 80 00 	LOD        (R10),R1
    2140:	34 86 80 02 	LOD        2(R10),R6
    2141:	23 c0 40 00 	MOV        R1,R4
    2142:	20 85 80 00 	ADD        R6,R4
    2143:	20 80 00 02 	ADD        $2,R4
    2144:	21 c0 00 02 	ASR        $2,R4
    2145:	14 86 80 01 	LOD        1(R10),R2
    2146:	20 84 80 00 	ADD        R2,R4
    2147:	0c c5 40 00 	STO        R1,(R5)
    2148:	24 c5 c0 00 	STO        R4,(R7)
    2149:	14 87 40 03 	LOD        3(SP),R2
    214a:	14 00 00 02 	CMP        $2,R2
    214b:	78 88 00 1c 	BLT        @0x00002168	// 2168 <lifting+0x82>
    214c:	4c 87 40 05 	LOD        5(SP),R9
    214d:	48 86 80 00 	ADD        R10,R9
    214e:	28 86 c0 00 	ADD        R11,R5
    214f:	38 86 c0 00 	ADD        R11,R7
    2150:	18 80 00 02 	ADD        $2,R3
    2151:	14 84 c0 01 	LOD        1(R3),R2
    2152:	44 84 c0 02 	LOD        2(R3),R8
    2153:	0b c0 80 00 	MOV        R2,R1
    2154:	08 85 00 00 	ADD        R4,R1
    2155:	08 80 00 02 	ADD        $2,R1
    2156:	09 c0 00 02 	ASR        $2,R1
    2157:	08 85 80 00 	ADD        R6,R1
    2158:	0c c5 40 00 	STO        R1,(R5)
    2159:	0b c2 00 00 	MOV        R8,R1
    215a:	08 85 80 00 	ADD        R6,R1
    215b:	09 c0 00 01 	ASR        $1,R1
    215c:	10 04 40 00 	SUB        R1,R2
    215d:	14 07 00 00 	CMP        R12,R2
    215e:	70 d0 00 10 	HALT.Z     
    215f:	24 c5 c0 00 	STO        R4,(R7)
    2160:	23 c0 80 00 	MOV        R2,R4
    2161:	33 c2 00 00 	MOV        R8,R6
    2162:	1c 06 40 00 	CMP        R9,R3
    2163:	78 9b ff ea 	BNZ        @0x0000214e	// 214e <lifting+0x68>
    2164:	2c 87 40 06 	LOD        6(SP),R5
    2165:	1c 87 40 01 	LOD        1(SP),R3
    2166:	28 84 c0 00 	ADD        R3,R5
    2167:	78 80 00 02 	BRA        @0x0000216a	// 216a <lifting+0x84>
    2168:	13 c1 00 00 	MOV        R4,R2
    2169:	1b c1 c0 00 	MOV        R7,R3
    216a:	0c 87 40 04 	LOD        4(SP),R1
    216b:	28 84 40 00 	ADD        R1,R5
    216c:	14 c5 40 00 	STO        R2,(R5)
    216d:	50 86 c0 00 	ADD        R11,R10
    216e:	14 87 40 00 	LOD        (SP),R2
    216f:	10 80 00 01 	ADD        $1,R2
    2170:	14 c7 40 00 	STO        R2,(SP)
    2171:	18 80 00 01 	ADD        $1,R3
    2172:	1c c7 40 01 	STO        R3,$1(SP)
    2173:	0c 87 40 02 	LOD        2(SP),R1
    2174:	0c 04 c0 00 	CMP        R3,R1
    2175:	78 9b ff c6 	BNZ        @0x0000213c	// 213c <lifting+0x56>
    2176:	14 87 40 03 	LOD        3(SP),R2
    2177:	0c 87 40 08 	LOD        8(SP),R1
    2178:	09 40 00 1f 	LSR        $31,R1
    2179:	1c 87 40 08 	LOD        8(SP),R3
    217a:	08 84 c0 00 	ADD        R3,R1
    217b:	09 c0 00 01 	ASR        $1,R1
    217c:	1c 87 40 0b 	LOD        11(SP),R3
    217d:	08 84 c0 00 	ADD        R3,R1
    217e:	1c 87 40 09 	LOD        9(SP),R3
    217f:	18 84 40 00 	ADD        R1,R3
    2180:	1c c7 40 09 	STO        R3,$9(SP)
    2181:	1c 87 40 0a 	LOD        10(SP),R3
    2182:	18 84 40 00 	ADD        R1,R3
    2183:	1c c7 40 0a 	STO        R3,$10(SP)
    2184:	0c 87 40 0c 	LOD        12(SP),R1
    2185:	08 83 ff ff 	ADD        $-1,R1
    2186:	0c c7 40 0c 	STO        R1,$12(SP)
    2187:	78 90 00 38 	BZ         @0x000021c0	// 21c0 <lifting+0xda>
    2188:	14 c7 40 08 	STO        R2,$8(SP)
    2189:	14 00 00 00 	CMP        $0,R2
    218a:	78 a0 00 0c 	BGT        @0x00002197	// 2197 <lifting+0xb1>
    218b:	1b c0 80 00 	MOV        R2,R3
    218c:	13 c2 c0 00 	MOV        R11,R2
    218d:	12 04 c0 00 	MPY        R3,R2
    218e:	0b c0 80 00 	MOV        R2,R1
    218f:	09 40 00 1f 	LSR        $31,R1
    2190:	08 84 80 00 	ADD        R2,R1
    2191:	09 c0 00 01 	ASR        $1,R1
    2192:	0c c7 40 0b 	STO        R1,$11(SP)
    2193:	13 c0 c0 00 	MOV        R3,R2
    2194:	11 c0 00 01 	ASR        $1,R2
    2195:	0b c0 c0 00 	MOV        R3,R1
    2196:	78 83 ff e1 	BRA        @0x00002178	// 2178 <lifting+0x92>
    2197:	0b c0 80 00 	MOV        R2,R1
    2198:	1b c0 80 00 	MOV        R2,R3
    2199:	13 c2 c0 00 	MOV        R11,R2
    219a:	12 04 40 00 	MPY        R1,R2
    219b:	0b c0 80 00 	MOV        R2,R1
    219c:	09 40 00 1f 	LSR        $31,R1
    219d:	08 84 80 00 	ADD        R2,R1
    219e:	09 c0 00 01 	ASR        $1,R1
    219f:	0c c7 40 0b 	STO        R1,$11(SP)
    21a0:	14 87 40 08 	LOD        8(SP),R2
    21a1:	11 c0 00 01 	ASR        $1,R2
    21a2:	14 c7 40 03 	STO        R2,$3(SP)
    21a3:	18 83 ff ff 	ADD        $-1,R3
    21a4:	1c c7 40 04 	STO        R3,$4(SP)
    21a5:	0c 87 40 09 	LOD        9(SP),R1
    21a6:	0c c7 40 01 	STO        R1,$1(SP)
    21a7:	14 87 40 0a 	LOD        10(SP),R2
    21a8:	1c 87 40 0b 	LOD        11(SP),R3
    21a9:	10 84 c0 00 	ADD        R3,R2
    21aa:	14 c7 40 02 	STO        R2,$2(SP)
    21ab:	0c 87 40 0a 	LOD        10(SP),R1
    21ac:	0c c7 40 0d 	STO        R1,$13(SP)
    21ad:	13 c0 40 00 	MOV        R1,R2
    21ae:	1c 87 40 08 	LOD        8(SP),R3
    21af:	10 84 c0 00 	ADD        R3,R2
    21b0:	14 c7 40 07 	STO        R2,$7(SP)
    21b1:	0c 87 40 03 	LOD        3(SP),R1
    21b2:	13 03 ff fe 	BREV       $-2,R2
    21b3:	08 84 80 00 	ADD        R2,R1
    21b4:	08 84 40 00 	ADD        R1,R1
    21b5:	0c c7 40 05 	STO        R1,$5(SP)
    21b6:	1c 87 40 03 	LOD        3(SP),R3
    21b7:	0b c0 df ff 	MOV        $-1+R3,R1
    21b8:	0a 06 c0 00 	MPY        R11,R1
    21b9:	14 87 40 0b 	LOD        11(SP),R2
    21ba:	08 84 80 00 	ADD        R2,R1
    21bb:	0c c7 40 06 	STO        R1,$6(SP)
    21bc:	1c 87 40 0a 	LOD        10(SP),R3
    21bd:	1c c7 40 00 	STO        R3,(SP)
    21be:	54 87 40 09 	LOD        9(SP),R10
    21bf:	78 83 ff 39 	BRA        @0x000020f9	// 20f9 <lifting+0x13>
    21c0:	2c 87 40 0e 	LOD        14(SP),R5
    21c1:	34 87 40 0f 	LOD        15(SP),R6
    21c2:	3c 87 40 10 	LOD        16(SP),R7
    21c3:	44 87 40 11 	LOD        17(SP),R8
    21c4:	4c 87 40 12 	LOD        18(SP),R9
    21c5:	54 87 40 13 	LOD        19(SP),R10
    21c6:	5c 87 40 14 	LOD        20(SP),R11
    21c7:	64 87 40 15 	LOD        21(SP),R12
    21c8:	68 80 00 16 	ADD        $22,SP
    21c9:	7b c0 00 00 	JMP        R0

000021ca <test_malloc>:
    21ca:	68 00 00 09 	SUB        $9,SP
    21cb:	04 c7 40 00 	STO        R0,(SP)
    21cc:	2c c7 40 01 	STO        R5,$1(SP)
    21cd:	34 c7 40 02 	STO        R6,$2(SP)
    21ce:	3c c7 40 03 	STO        R7,$3(SP)
    21cf:	44 c7 40 04 	STO        R8,$4(SP)
    21d0:	4c c7 40 05 	STO        R9,$5(SP)
    21d1:	54 c7 40 06 	STO        R10,$6(SP)
    21d2:	5c c7 40 07 	STO        R11,$7(SP)
    21d3:	64 c7 40 08 	STO        R12,$8(SP)
    21d4:	03 03 ff fe 	BREV       $-2,R0
    21d5:	04 c0 01 04 	STO        R0,($260)
    21d6:	0d 81 00 00 	LDI        $65536,R1
    21d7:	03 c3 c0 02 	MOV        $2+PC,R0
    21d8:	7c 87 c0 00 	LJMP       @0x0000206d	// 206d <malloc>
    21d9:	00 00 20 6d 
    21da:	2b c0 40 00 	MOV        R1,R5
    21db:	0d 81 00 00 	LDI        $65536,R1
    21dc:	03 c3 c0 02 	MOV        $2+PC,R0
    21dd:	7c 87 c0 00 	LJMP       @0x0000206d	// 206d <malloc>
    21de:	00 00 20 6d 
    21df:	4b c0 40 00 	MOV        R1,R9
    21e0:	0d 81 00 00 	LDI        $65536,R1
    21e1:	03 c3 c0 02 	MOV        $2+PC,R0
    21e2:	7c 87 c0 00 	LJMP       @0x0000206d	// 206d <malloc>
    21e3:	00 00 20 6d 
    21e4:	53 c0 40 00 	MOV        R1,R10
    21e5:	03 01 91 00 	LDI        0x0089fff2,R0	// 89fff2 <_top_of_stack+0x89bff3>
    21e6:	02 40 ff f2 
    21e7:	2c c4 00 00 	STO        R5,(R0)
    21e8:	03 01 91 00 	LDI        0x0089fff3,R0	// 89fff3 <_top_of_stack+0x89bff4>
    21e9:	02 40 ff f3 
    21ea:	4c c4 00 00 	STO        R9,(R0)
    21eb:	03 01 91 00 	LDI        0x0089fff4,R0	// 89fff4 <_top_of_stack+0x89bff5>
    21ec:	02 40 ff f4 
    21ed:	0c c4 00 00 	STO        R1,(R0)
    21ee:	03 01 91 00 	LDI        0x0089fffa,R0	// 89fffa <_top_of_stack+0x89bffb>
    21ef:	02 40 ff fa 
    21f0:	0d 80 00 00 	CLR        R1
    21f1:	0c c4 00 00 	STO        R1,(R0)
    21f2:	3b 00 01 00 	BREV       $256,R7
    21f3:	43 00 0f f0 	BREV       $4080,R8
    21f4:	35 83 fc 00 	LDI        $261120,R6
    21f5:	5b 00 81 00 	BREV       $33024,R11
    21f6:	78 80 00 16 	BRA        @0x0000220d	// 220d <test_malloc+0x43>
    21f7:	08 80 00 01 	ADD        $1,R1
    21f8:	14 84 7f ff 	LOD        -1(R1),R2
    21f9:	28 80 00 01 	ADD        $1,R5
    21fa:	63 c0 80 00 	MOV        R2,R12
    21fb:	60 46 00 00 	AND        R8,R12
    21fc:	61 c0 00 14 	ASR        $20,R12
    21fd:	64 c5 7f ff 	STO        R12,$-1(R5)
    21fe:	18 80 00 01 	ADD        $1,R3
    21ff:	63 c0 80 00 	MOV        R2,R12
    2200:	60 45 80 00 	AND        R6,R12
    2201:	61 c0 00 0a 	ASR        $10,R12
    2202:	64 c4 ff ff 	STO        R12,$-1(R3)
    2203:	20 80 00 01 	ADD        $1,R4
    2204:	10 40 00 ff 	AND        $255,R2
    2205:	14 c5 3f ff 	STO        R2,$-1(R4)
    2206:	2c 04 00 00 	CMP        R0,R5
    2207:	78 9b ff ef 	BNZ        @0x000021f7	// 21f7 <test_malloc+0x2d>
    2208:	38 80 01 00 	ADD        $256,R7
    2209:	48 80 01 00 	ADD        $256,R9
    220a:	50 80 01 00 	ADD        $256,R10
    220b:	3c 06 c0 00 	CMP        R11,R7
    220c:	78 90 00 05 	BZ         @0x00002212	// 2212 <test_malloc+0x48>
    220d:	03 c1 41 00 	MOV        $256+R5,R0
    220e:	0b c1 c0 00 	MOV        R7,R1
    220f:	23 c2 80 00 	MOV        R10,R4
    2210:	1b c2 40 00 	MOV        R9,R3
    2211:	78 83 ff e5 	BRA        @0x000021f7	// 21f7 <test_malloc+0x2d>
    2212:	43 01 91 00 	LDI        0x0089fff2,R8	// 89fff2 <_top_of_stack+0x89bff3>
    2213:	42 40 ff f2 
    2214:	1b c1 c0 00 	MOV        R7,R3
    2215:	14 86 00 00 	LOD        (R8),R2
    2216:	0d 80 01 00 	LDI        $256,R1
    2217:	03 c3 c0 02 	MOV        $2+PC,R0
    2218:	7c 87 c0 00 	LJMP       @0x000020e6	// 20e6 <lifting>
    2219:	00 00 20 e6 
    221a:	33 01 91 00 	LDI        0x0089fff3,R6	// 89fff3 <_top_of_stack+0x89bff4>
    221b:	32 40 ff f3 
    221c:	1b c1 c0 00 	MOV        R7,R3
    221d:	14 85 80 00 	LOD        (R6),R2
    221e:	0d 80 01 00 	LDI        $256,R1
    221f:	03 c3 c0 02 	MOV        $2+PC,R0
    2220:	7c 87 c0 00 	LJMP       @0x000020e6	// 20e6 <lifting>
    2221:	00 00 20 e6 
    2222:	2b 01 91 00 	LDI        0x0089fff4,R5	// 89fff4 <_top_of_stack+0x89bff5>
    2223:	2a 40 ff f4 
    2224:	1b c1 c0 00 	MOV        R7,R3
    2225:	14 85 40 00 	LOD        (R5),R2
    2226:	0d 80 01 00 	LDI        $256,R1
    2227:	03 c3 c0 02 	MOV        $2+PC,R0
    2228:	7c 87 c0 00 	LJMP       @0x000020e6	// 20e6 <lifting>
    2229:	00 00 20 e6 
    222a:	0c 80 01 04 	LOD        ($260),R1
    222b:	03 03 ff fe 	BREV       $-2,R0
    222c:	00 04 40 00 	SUB        R1,R0
    222d:	0b 01 e9 00 	LDI        0x0097fffe,R1	// 97fffe <_top_of_stack+0x97bfff>
    222e:	0a 40 ff fe 
    222f:	04 c4 40 00 	STO        R0,(R1)
    2230:	0c 86 00 00 	LOD        (R8),R1
    2231:	34 85 80 00 	LOD        (R6),R6
    2232:	2c 85 40 00 	LOD        (R5),R5
    2233:	05 80 00 00 	CLR        R0
    2234:	04 c0 01 04 	STO        R0,($260)
    2235:	05 81 00 01 	LDI        $65537,R0
    2236:	04 c0 01 06 	STO        R0,($262)
    2237:	3b c0 40 00 	MOV        R1,R7
    2238:	38 81 00 00 	ADD        $65536,R7
    2239:	13 c0 40 00 	MOV        R1,R2
    223a:	23 00 ff 00 	BREV       $65280,R4
    223b:	04 80 01 0b 	LOD        ($267),R0
    223c:	04 00 00 00 	CMP        $0,R0
    223d:	78 9b ff fd 	BNZ        @0x0000223b	// 223b <test_malloc+0x71>
    223e:	1c 84 80 00 	LOD        (R2),R3
    223f:	18 40 00 ff 	AND        $255,R3
    2240:	04 80 01 0b 	LOD        ($267),R0
    2241:	04 00 00 00 	CMP        $0,R0
    2242:	78 9b ff fd 	BNZ        @0x00002240	// 2240 <test_malloc+0x76>
    2243:	1c c0 01 0b 	STO        R3,($267)
    2244:	1c 84 80 00 	LOD        (R2),R3
    2245:	18 40 ff 00 	AND        $65280,R3
    2246:	19 c0 00 08 	ASR        $8,R3
    2247:	04 80 01 0b 	LOD        ($267),R0
    2248:	04 00 00 00 	CMP        $0,R0
    2249:	78 9b ff fd 	BNZ        @0x00002247	// 2247 <test_malloc+0x7d>
    224a:	1c c0 01 0b 	STO        R3,($267)
    224b:	04 80 01 0b 	LOD        ($267),R0
    224c:	04 00 00 00 	CMP        $0,R0
    224d:	78 9b ff fd 	BNZ        @0x0000224b	// 224b <test_malloc+0x81>
    224e:	1c 84 80 00 	LOD        (R2),R3
    224f:	18 45 00 00 	AND        R4,R3
    2250:	19 c0 00 10 	ASR        $16,R3
    2251:	04 80 01 0b 	LOD        ($267),R0
    2252:	04 00 00 00 	CMP        $0,R0
    2253:	78 9b ff fd 	BNZ        @0x00002251	// 2251 <test_malloc+0x87>
    2254:	1c c0 01 0b 	STO        R3,($267)
    2255:	1c 84 80 00 	LOD        (R2),R3
    2256:	19 c0 00 18 	ASR        $24,R3
    2257:	04 80 01 0b 	LOD        ($267),R0
    2258:	04 00 00 00 	CMP        $0,R0
    2259:	78 9b ff fd 	BNZ        @0x00002257	// 2257 <test_malloc+0x8d>
    225a:	1c c0 01 0b 	STO        R3,($267)
    225b:	10 80 00 01 	ADD        $1,R2
    225c:	14 05 c0 00 	CMP        R7,R2
    225d:	78 9b ff dd 	BNZ        @0x0000223b	// 223b <test_malloc+0x71>
    225e:	15 81 00 00 	LDI        $65536,R2
    225f:	14 c0 01 06 	STO        R2,($262)
    2260:	04 c0 01 04 	STO        R0,($260)
    2261:	05 81 00 01 	LDI        $65537,R0
    2262:	04 c0 01 06 	STO        R0,($262)
    2263:	3b c1 80 00 	MOV        R6,R7
    2264:	38 84 80 00 	ADD        R2,R7
    2265:	13 c1 80 00 	MOV        R6,R2
    2266:	23 00 ff 00 	BREV       $65280,R4
    2267:	04 80 01 0b 	LOD        ($267),R0
    2268:	04 00 00 00 	CMP        $0,R0
    2269:	78 9b ff fd 	BNZ        @0x00002267	// 2267 <test_malloc+0x9d>
    226a:	1c 84 80 00 	LOD        (R2),R3
    226b:	18 40 00 ff 	AND        $255,R3
    226c:	04 80 01 0b 	LOD        ($267),R0
    226d:	04 00 00 00 	CMP        $0,R0
    226e:	78 9b ff fd 	BNZ        @0x0000226c	// 226c <test_malloc+0xa2>
    226f:	1c c0 01 0b 	STO        R3,($267)
    2270:	1c 84 80 00 	LOD        (R2),R3
    2271:	18 40 ff 00 	AND        $65280,R3
    2272:	19 c0 00 08 	ASR        $8,R3
    2273:	04 80 01 0b 	LOD        ($267),R0
    2274:	04 00 00 00 	CMP        $0,R0
    2275:	78 9b ff fd 	BNZ        @0x00002273	// 2273 <test_malloc+0xa9>
    2276:	1c c0 01 0b 	STO        R3,($267)
    2277:	04 80 01 0b 	LOD        ($267),R0
    2278:	04 00 00 00 	CMP        $0,R0
    2279:	78 9b ff fd 	BNZ        @0x00002277	// 2277 <test_malloc+0xad>
    227a:	1c 84 80 00 	LOD        (R2),R3
    227b:	18 45 00 00 	AND        R4,R3
    227c:	19 c0 00 10 	ASR        $16,R3
    227d:	04 80 01 0b 	LOD        ($267),R0
    227e:	04 00 00 00 	CMP        $0,R0
    227f:	78 9b ff fd 	BNZ        @0x0000227d	// 227d <test_malloc+0xb3>
    2280:	1c c0 01 0b 	STO        R3,($267)
    2281:	1c 84 80 00 	LOD        (R2),R3
    2282:	19 c0 00 18 	ASR        $24,R3
    2283:	04 80 01 0b 	LOD        ($267),R0
    2284:	04 00 00 00 	CMP        $0,R0
    2285:	78 9b ff fd 	BNZ        @0x00002283	// 2283 <test_malloc+0xb9>
    2286:	1c c0 01 0b 	STO        R3,($267)
    2287:	10 80 00 01 	ADD        $1,R2
    2288:	14 05 c0 00 	CMP        R7,R2
    2289:	78 9b ff dd 	BNZ        @0x00002267	// 2267 <test_malloc+0x9d>
    228a:	15 81 00 00 	LDI        $65536,R2
    228b:	14 c0 01 06 	STO        R2,($262)
    228c:	04 c0 01 04 	STO        R0,($260)
    228d:	05 81 00 01 	LDI        $65537,R0
    228e:	04 c0 01 06 	STO        R0,($262)
    228f:	3b c1 40 00 	MOV        R5,R7
    2290:	38 84 80 00 	ADD        R2,R7
    2291:	13 c1 40 00 	MOV        R5,R2
    2292:	23 00 ff 00 	BREV       $65280,R4
    2293:	04 80 01 0b 	LOD        ($267),R0
    2294:	04 00 00 00 	CMP        $0,R0
    2295:	78 9b ff fd 	BNZ        @0x00002293	// 2293 <test_malloc+0xc9>
    2296:	1c 84 80 00 	LOD        (R2),R3
    2297:	18 40 00 ff 	AND        $255,R3
    2298:	04 80 01 0b 	LOD        ($267),R0
    2299:	04 00 00 00 	CMP        $0,R0
    229a:	78 9b ff fd 	BNZ        @0x00002298	// 2298 <test_malloc+0xce>
    229b:	1c c0 01 0b 	STO        R3,($267)
    229c:	1c 84 80 00 	LOD        (R2),R3
    229d:	18 40 ff 00 	AND        $65280,R3
    229e:	19 c0 00 08 	ASR        $8,R3
    229f:	04 80 01 0b 	LOD        ($267),R0
    22a0:	04 00 00 00 	CMP        $0,R0
    22a1:	78 9b ff fd 	BNZ        @0x0000229f	// 229f <test_malloc+0xd5>
    22a2:	1c c0 01 0b 	STO        R3,($267)
    22a3:	04 80 01 0b 	LOD        ($267),R0
    22a4:	04 00 00 00 	CMP        $0,R0
    22a5:	78 9b ff fd 	BNZ        @0x000022a3	// 22a3 <test_malloc+0xd9>
    22a6:	1c 84 80 00 	LOD        (R2),R3
    22a7:	18 45 00 00 	AND        R4,R3
    22a8:	19 c0 00 10 	ASR        $16,R3
    22a9:	04 80 01 0b 	LOD        ($267),R0
    22aa:	04 00 00 00 	CMP        $0,R0
    22ab:	78 9b ff fd 	BNZ        @0x000022a9	// 22a9 <test_malloc+0xdf>
    22ac:	1c c0 01 0b 	STO        R3,($267)
    22ad:	1c 84 80 00 	LOD        (R2),R3
    22ae:	19 c0 00 18 	ASR        $24,R3
    22af:	04 80 01 0b 	LOD        ($267),R0
    22b0:	04 00 00 00 	CMP        $0,R0
    22b1:	78 9b ff fd 	BNZ        @0x000022af	// 22af <test_malloc+0xe5>
    22b2:	1c c0 01 0b 	STO        R3,($267)
    22b3:	10 80 00 01 	ADD        $1,R2
    22b4:	14 05 c0 00 	CMP        R7,R2
    22b5:	78 9b ff dd 	BNZ        @0x00002293	// 2293 <test_malloc+0xc9>
    22b6:	05 81 00 00 	LDI        $65536,R0
    22b7:	04 c0 01 06 	STO        R0,($262)
    22b8:	03 c3 c0 02 	MOV        $2+PC,R0
    22b9:	7c 87 c0 00 	LJMP       @0x0000206c	// 206c <free>
    22ba:	00 00 20 6c 
    22bb:	0b c1 80 00 	MOV        R6,R1
    22bc:	03 c3 c0 02 	MOV        $2+PC,R0
    22bd:	7c 87 c0 00 	LJMP       @0x0000206c	// 206c <free>
    22be:	00 00 20 6c 
    22bf:	0b c1 40 00 	MOV        R5,R1
    22c0:	03 c3 c0 02 	MOV        $2+PC,R0
    22c1:	7c 87 c0 00 	LJMP       @0x0000206c	// 206c <free>
    22c2:	00 00 20 6c 
    22c3:	04 87 40 00 	LOD        (SP),R0
    22c4:	2c 87 40 01 	LOD        1(SP),R5
    22c5:	34 87 40 02 	LOD        2(SP),R6
    22c6:	3c 87 40 03 	LOD        3(SP),R7
    22c7:	44 87 40 04 	LOD        4(SP),R8
    22c8:	4c 87 40 05 	LOD        5(SP),R9
    22c9:	54 87 40 06 	LOD        6(SP),R10
    22ca:	5c 87 40 07 	LOD        7(SP),R11
    22cb:	64 87 40 08 	LOD        8(SP),R12
    22cc:	68 80 00 09 	ADD        $9,SP
    22cd:	7b c0 00 00 	JMP        R0

000022ce <zip_write>:
    22ce:	68 00 00 01 	SUB        $1,SP
    22cf:	2c c7 40 00 	STO        R5,(SP)
    22d0:	15 80 00 00 	CLR        R2
    22d1:	14 c0 01 04 	STO        R2,($260)
    22d2:	15 81 00 01 	LDI        $65537,R2
    22d3:	14 c0 01 06 	STO        R2,($262)
    22d4:	2b c0 40 00 	MOV        R1,R5
    22d5:	28 81 00 00 	ADD        $65536,R5
    22d6:	23 00 ff 00 	BREV       $65280,R4
    22d7:	14 80 01 0b 	LOD        ($267),R2
    22d8:	14 00 00 00 	CMP        $0,R2
    22d9:	78 9b ff fd 	BNZ        @0x000022d7	// 22d7 <zip_write+0x9>
    22da:	1c 84 40 00 	LOD        (R1),R3
    22db:	18 40 00 ff 	AND        $255,R3
    22dc:	14 80 01 0b 	LOD        ($267),R2
    22dd:	14 00 00 00 	CMP        $0,R2
    22de:	78 9b ff fd 	BNZ        @0x000022dc	// 22dc <zip_write+0xe>
    22df:	1c c0 01 0b 	STO        R3,($267)
    22e0:	1c 84 40 00 	LOD        (R1),R3
    22e1:	18 40 ff 00 	AND        $65280,R3
    22e2:	19 c0 00 08 	ASR        $8,R3
    22e3:	14 80 01 0b 	LOD        ($267),R2
    22e4:	14 00 00 00 	CMP        $0,R2
    22e5:	78 9b ff fd 	BNZ        @0x000022e3	// 22e3 <zip_write+0x15>
    22e6:	1c c0 01 0b 	STO        R3,($267)
    22e7:	14 80 01 0b 	LOD        ($267),R2
    22e8:	14 00 00 00 	CMP        $0,R2
    22e9:	78 9b ff fd 	BNZ        @0x000022e7	// 22e7 <zip_write+0x19>
    22ea:	1c 84 40 00 	LOD        (R1),R3
    22eb:	18 45 00 00 	AND        R4,R3
    22ec:	19 c0 00 10 	ASR        $16,R3
    22ed:	14 80 01 0b 	LOD        ($267),R2
    22ee:	14 00 00 00 	CMP        $0,R2
    22ef:	78 9b ff fd 	BNZ        @0x000022ed	// 22ed <zip_write+0x1f>
    22f0:	1c c0 01 0b 	STO        R3,($267)
    22f1:	1c 84 40 00 	LOD        (R1),R3
    22f2:	19 c0 00 18 	ASR        $24,R3
    22f3:	14 80 01 0b 	LOD        ($267),R2
    22f4:	14 00 00 00 	CMP        $0,R2
    22f5:	78 9b ff fd 	BNZ        @0x000022f3	// 22f3 <zip_write+0x25>
    22f6:	1c c0 01 0b 	STO        R3,($267)
    22f7:	08 80 00 01 	ADD        $1,R1
    22f8:	0c 05 40 00 	CMP        R5,R1
    22f9:	78 9b ff dd 	BNZ        @0x000022d7	// 22d7 <zip_write+0x9>
    22fa:	0d 81 00 00 	LDI        $65536,R1
    22fb:	0c c0 01 06 	STO        R1,($262)
    22fc:	2c 87 40 00 	LOD        (SP),R5
    22fd:	68 80 00 01 	ADD        $1,SP
    22fe:	7b c0 00 00 	JMP        R0

000022ff <msg1>:
    22ff:	00 00 00 44 00 00 00 61 00 00 00 74 00 00 00 61     ...D...a...t...a
    2303:	00 00 00 20 00 00 00 72 00 00 00 64 00 00 00 79     ... ...r...d...y
    2307:	00 00 00 20 00 00 00 20 00 00 00 20 00 00 00 20     ... ... ... ... 
    230b:	00 00 00 20 00 00 00 0d 00 00 00 0a 00 00 00 00     ... ............

0000230f <msg>:
    230f:	00 00 00 48 00 00 00 65 00 00 00 6c 00 00 00 6c     ...H...e...l...l
    2313:	00 00 00 6f 00 00 00 2c 00 00 00 20 00 00 00 77     ...o...,... ...w
    2317:	00 00 00 6f 00 00 00 72 00 00 00 6c 00 00 00 64     ...o...r...l...d
    231b:	00 00 00 21 00 00 00 0d 00 00 00 0a 00 00 00 00     ...!............

0000231f <XULA_BUSY>:
    231f:	40 00 00 00                                         @...

00002320 <READY_FOR_XMIT>:
    2320:	40 00 40 00                                         @.@.

00002321 <LED_OFF>:
    2321:	00 02 00 00                                         ....

00002322 <LED_ON>:
    2322:	00 02 00 02                                         ....
