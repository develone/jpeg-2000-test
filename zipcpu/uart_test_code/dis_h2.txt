
h2:     file format elf32-zip


Disassembly of section .rocode:

00002000 <_start>:
    2000:	6b 00 00 00 	LDI        0x00003fff,SP	// 3fff <_top_of_stack>
    2001:	6a 40 3f ff 
    2002:	7c 87 c0 00 	LJMP       @0x00002004	// 2004 <entry>
    2003:	00 00 20 04 

00002004 <entry>:
    2004:	68 00 00 02 	SUB        $2,SP
    2005:	04 c7 40 00 	STO        R0,(SP)
    2006:	2c c7 40 01 	STO        R5,$1(SP)
    2007:	0b 00 01 00 	BREV       $256,R1
    2008:	03 c3 c0 02 	MOV        $2+PC,R0
    2009:	7c 87 c0 00 	LJMP       @0x00002063	// 2063 <zip_clear_sdram>
    200a:	00 00 20 63 
    200b:	0d 80 00 4f 	LDI        $79,R1
    200c:	0c c0 01 07 	STO        R1,($263)
    200d:	13 00 00 00 	LDI        0x0000231d,R2	// 231d <msg>
    200e:	12 40 23 1d 
    200f:	1c 84 80 00 	LOD        (R2),R3
    2010:	1c 00 00 00 	CMP        $0,R3
    2011:	78 98 00 10 	BNZ        @0x00002022	// 2022 <entry+0x1e>
    2012:	2b 00 40 02 	LDI        0x40024002,R5	// 40024002 <_top_of_heap+0x3f124002>
    2013:	2a 40 40 02 
    2014:	2c c0 01 06 	STO        R5,($262)
    2015:	0b 00 01 00 	BREV       $256,R1
    2016:	03 c3 c0 02 	MOV        $2+PC,R0
    2017:	7c 87 c0 00 	LJMP       @0x00002032	// 2032 <zip_read_image>
    2018:	00 00 20 32 
    2019:	28 83 bf fe 	ADD        $-16386,R5
    201a:	2c c0 01 06 	STO        R5,($262)
    201b:	0b 03 ff fe 	BREV       $-2,R1
    201c:	0c c0 01 04 	STO        R1,($260)
    201d:	03 c3 c0 02 	MOV        $2+PC,R0
    201e:	7c 87 c0 00 	LJMP       @0x00002075	// 2075 <test_malloc>
    201f:	00 00 20 75 
    2020:	14 80 01 10 	LOD        ($272),R2
    2021:	78 80 00 09 	BRA        @0x0000202b	// 202b <entry+0x27>
    2022:	0c 80 01 0b 	LOD        ($267),R1
    2023:	0c 00 00 00 	CMP        $0,R1
    2024:	78 9b ff fd 	BNZ        @0x00002022	// 2022 <entry+0x1e>
    2025:	10 80 00 01 	ADD        $1,R2
    2026:	1c c0 01 0b 	STO        R3,($267)
    2027:	1c 84 80 00 	LOD        (R2),R3
    2028:	1c 00 00 00 	CMP        $0,R3
    2029:	78 9b ff f8 	BNZ        @0x00002022	// 2022 <entry+0x1e>
    202a:	78 83 ff e7 	BRA        @0x00002012	// 2012 <entry+0xe>
    202b:	0c 80 01 10 	LOD        ($272),R1
    202c:	14 04 40 00 	CMP        R1,R2
    202d:	78 93 ff fd 	BZ         @0x0000202b	// 202b <entry+0x27>
    202e:	04 87 40 00 	LOD        (SP),R0
    202f:	2c 87 40 01 	LOD        1(SP),R5
    2030:	68 80 00 02 	ADD        $2,SP
    2031:	7b c0 00 00 	JMP        R0

00002032 <zip_read_image>:
    2032:	68 00 00 05 	SUB        $5,SP
    2033:	2c c7 40 00 	STO        R5,(SP)
    2034:	34 c7 40 01 	STO        R6,$1(SP)
    2035:	3c c7 40 02 	STO        R7,$2(SP)
    2036:	44 c7 40 03 	STO        R8,$3(SP)
    2037:	4c c7 40 04 	STO        R9,$4(SP)
    2038:	25 80 00 00 	CLR        R4
    2039:	24 c0 01 04 	STO        R4,($260)
    203a:	15 81 00 01 	LDI        $65537,R2
    203b:	14 c0 01 06 	STO        R2,($262)
    203c:	2b c0 40 00 	MOV        R1,R5
    203d:	45 ff ff ff 	LDI        $-1,R8
    203e:	3b 00 c1 00 	BREV       $49408,R7
    203f:	35 81 00 00 	LDI        $65536,R6
    2040:	44 c4 40 00 	STO        R8,(R1)
    2041:	14 80 01 0a 	LOD        ($266),R2
    2042:	1b c0 80 00 	MOV        R2,R3
    2043:	18 40 01 00 	AND        $256,R3
    2044:	78 9b ff fc 	BNZ        @0x00002041	// 2041 <zip_read_image+0xf>
    2045:	11 80 00 14 	LSL        $20,R2
    2046:	1c 80 01 0a 	LOD        ($266),R3
    2047:	4b c0 c0 00 	MOV        R3,R9
    2048:	48 40 01 00 	AND        $256,R9
    2049:	78 9b ff fc 	BNZ        @0x00002046	// 2046 <zip_read_image+0x14>
    204a:	19 80 00 0a 	LSL        $10,R3
    204b:	10 c4 c0 00 	OR         R3,R2
    204c:	1c 80 01 0a 	LOD        ($266),R3
    204d:	4b c0 c0 00 	MOV        R3,R9
    204e:	48 40 01 00 	AND        $256,R9
    204f:	78 9b ff fc 	BNZ        @0x0000204c	// 204c <zip_read_image+0x1a>
    2050:	10 c4 c0 00 	OR         R3,R2
    2051:	14 c5 40 00 	STO        R2,(R5)
    2052:	24 c5 c0 00 	STO        R4,(R7)
    2053:	34 c0 01 06 	STO        R6,($262)
    2054:	14 80 01 02 	LOD        ($258),R2
    2055:	10 40 01 00 	AND        $256,R2
    2056:	78 98 00 05 	BNZ        @0x0000205c	// 205c <zip_read_image+0x2a>
    2057:	20 80 00 01 	ADD        $1,R4
    2058:	28 80 00 01 	ADD        $1,R5
    2059:	08 80 00 02 	ADD        $2,R1
    205a:	24 01 00 00 	CMP        $65536,R4
    205b:	78 9b ff e4 	BNZ        @0x00002040	// 2040 <zip_read_image+0xe>
    205c:	2c 87 40 00 	LOD        (SP),R5
    205d:	34 87 40 01 	LOD        1(SP),R6
    205e:	3c 87 40 02 	LOD        2(SP),R7
    205f:	44 87 40 03 	LOD        3(SP),R8
    2060:	4c 87 40 04 	LOD        4(SP),R9
    2061:	68 80 00 05 	ADD        $5,SP
    2062:	7b c0 00 00 	JMP        R0

00002063 <zip_clear_sdram>:
    2063:	15 83 00 00 	LDI        $196608,R2
    2064:	1b c0 40 00 	MOV        R1,R3
    2065:	18 84 80 00 	ADD        R2,R3
    2066:	15 80 00 00 	CLR        R2
    2067:	08 80 00 01 	ADD        $1,R1
    2068:	14 c4 7f ff 	STO        R2,$-1(R1)
    2069:	0c 04 c0 00 	CMP        R3,R1
    206a:	78 9b ff fc 	BNZ        @0x00002067	// 2067 <zip_clear_sdram+0x4>
    206b:	7b c0 00 00 	JMP        R0

0000206c <free>:
    206c:	7b c0 00 00 	JMP        R0

0000206d <malloc>:
    206d:	1b 00 00 00 	LDI        0x00002331,R3	// 2331 <heap>
    206e:	1a 40 23 31 
    206f:	14 84 c0 00 	LOD        (R3),R2
    2070:	23 c0 80 00 	MOV        R2,R4
    2071:	20 84 40 00 	ADD        R1,R4
    2072:	24 c4 c0 00 	STO        R4,(R3)
    2073:	0b c0 80 00 	MOV        R2,R1
    2074:	7b c0 00 00 	JMP        R0

00002075 <test_malloc>:
    2075:	68 00 00 0c 	SUB        $12,SP
    2076:	04 c7 40 03 	STO        R0,$3(SP)
    2077:	2c c7 40 04 	STO        R5,$4(SP)
    2078:	34 c7 40 05 	STO        R6,$5(SP)
    2079:	3c c7 40 06 	STO        R7,$6(SP)
    207a:	44 c7 40 07 	STO        R8,$7(SP)
    207b:	4c c7 40 08 	STO        R9,$8(SP)
    207c:	54 c7 40 09 	STO        R10,$9(SP)
    207d:	5c c7 40 0a 	STO        R11,$10(SP)
    207e:	64 c7 40 0b 	STO        R12,$11(SP)
    207f:	03 03 ff fe 	BREV       $-2,R0
    2080:	04 c0 01 04 	STO        R0,($260)
    2081:	0d 81 00 00 	LDI        $65536,R1
    2082:	03 c3 c0 02 	MOV        $2+PC,R0
    2083:	7c 87 c0 00 	LJMP       @0x0000206d	// 206d <malloc>
    2084:	00 00 20 6d 
    2085:	0c c7 40 01 	STO        R1,$1(SP)
    2086:	0d 81 00 00 	LDI        $65536,R1
    2087:	03 c3 c0 02 	MOV        $2+PC,R0
    2088:	7c 87 c0 00 	LJMP       @0x0000206d	// 206d <malloc>
    2089:	00 00 20 6d 
    208a:	0c c7 40 02 	STO        R1,$2(SP)
    208b:	0d 81 00 00 	LDI        $65536,R1
    208c:	03 c3 c0 02 	MOV        $2+PC,R0
    208d:	7c 87 c0 00 	LJMP       @0x0000206d	// 206d <malloc>
    208e:	00 00 20 6d 
    208f:	0c c7 40 00 	STO        R1,(SP)
    2090:	03 01 91 00 	LDI        0x0089fff2,R0	// 89fff2 <_top_of_stack+0x89bff3>
    2091:	02 40 ff f2 
    2092:	0c 87 40 01 	LOD        1(SP),R1
    2093:	0c c4 00 00 	STO        R1,(R0)
    2094:	03 01 91 00 	LDI        0x0089fff3,R0	// 89fff3 <_top_of_stack+0x89bff4>
    2095:	02 40 ff f3 
    2096:	0c 87 40 02 	LOD        2(SP),R1
    2097:	0c c4 00 00 	STO        R1,(R0)
    2098:	03 01 91 00 	LDI        0x0089fff4,R0	// 89fff4 <_top_of_stack+0x89bff5>
    2099:	02 40 ff f4 
    209a:	0c 87 40 00 	LOD        (SP),R1
    209b:	0c c4 00 00 	STO        R1,(R0)
    209c:	0d 81 00 00 	LDI        $65536,R1
    209d:	03 c3 c0 02 	MOV        $2+PC,R0
    209e:	7c 87 c0 00 	LJMP       @0x0000206d	// 206d <malloc>
    209f:	00 00 20 6d 
    20a0:	03 01 91 00 	LDI        0x0089fffa,R0	// 89fffa <_top_of_stack+0x89bffb>
    20a1:	02 40 ff fa 
    20a2:	0c c4 00 00 	STO        R1,(R0)
    20a3:	5c 87 40 00 	LOD        (SP),R11
    20a4:	54 87 40 02 	LOD        2(SP),R10
    20a5:	14 87 40 01 	LOD        1(SP),R2
    20a6:	43 00 01 00 	BREV       $256,R8
    20a7:	4b 00 0f f8 	BREV       $4088,R9
    20a8:	3d 87 fc 00 	LDI        $523264,R7
    20a9:	63 00 81 00 	BREV       $33024,R12
    20aa:	78 80 00 16 	BRA        @0x000020c1	// 20c1 <test_malloc+0x4c>
    20ab:	04 85 00 00 	LOD        (R4),R0
    20ac:	20 80 00 01 	ADD        $1,R4
    20ad:	10 80 00 01 	ADD        $1,R2
    20ae:	33 c0 00 00 	MOV        R0,R6
    20af:	30 46 40 00 	AND        R9,R6
    20b0:	31 c0 00 14 	ASR        $20,R6
    20b1:	34 c4 bf ff 	STO        R6,$-1(R2)
    20b2:	08 80 00 01 	ADD        $1,R1
    20b3:	33 c0 00 00 	MOV        R0,R6
    20b4:	30 45 c0 00 	AND        R7,R6
    20b5:	31 c0 00 0a 	ASR        $10,R6
    20b6:	34 c4 7f ff 	STO        R6,$-1(R1)
    20b7:	18 80 00 01 	ADD        $1,R3
    20b8:	00 40 01 ff 	AND        $511,R0
    20b9:	04 c4 ff ff 	STO        R0,$-1(R3)
    20ba:	14 05 40 00 	CMP        R5,R2
    20bb:	78 9b ff ef 	BNZ        @0x000020ab	// 20ab <test_malloc+0x36>
    20bc:	40 80 01 00 	ADD        $256,R8
    20bd:	50 80 01 00 	ADD        $256,R10
    20be:	58 80 01 00 	ADD        $256,R11
    20bf:	44 07 00 00 	CMP        R12,R8
    20c0:	78 90 00 05 	BZ         @0x000020c6	// 20c6 <test_malloc+0x51>
    20c1:	2b c0 81 00 	MOV        $256+R2,R5
    20c2:	23 c2 00 00 	MOV        R8,R4
    20c3:	1b c2 c0 00 	MOV        R11,R3
    20c4:	0b c2 80 00 	MOV        R10,R1
    20c5:	78 83 ff e5 	BRA        @0x000020ab	// 20ab <test_malloc+0x36>
    20c6:	1b c2 00 00 	MOV        R8,R3
    20c7:	14 87 40 01 	LOD        1(SP),R2
    20c8:	0d 80 01 00 	LDI        $256,R1
    20c9:	03 c3 c0 02 	MOV        $2+PC,R0
    20ca:	7c 87 c0 00 	LJMP       @0x00002229	// 2229 <lifting>
    20cb:	00 00 22 29 
    20cc:	1b c2 00 00 	MOV        R8,R3
    20cd:	14 87 40 02 	LOD        2(SP),R2
    20ce:	0d 80 01 00 	LDI        $256,R1
    20cf:	03 c3 c0 02 	MOV        $2+PC,R0
    20d0:	7c 87 c0 00 	LJMP       @0x00002229	// 2229 <lifting>
    20d1:	00 00 22 29 
    20d2:	1b c2 00 00 	MOV        R8,R3
    20d3:	14 87 40 00 	LOD        (SP),R2
    20d4:	0d 80 01 00 	LDI        $256,R1
    20d5:	03 c3 c0 02 	MOV        $2+PC,R0
    20d6:	7c 87 c0 00 	LJMP       @0x00002229	// 2229 <lifting>
    20d7:	00 00 22 29 
    20d8:	0c 80 01 04 	LOD        ($260),R1
    20d9:	03 03 ff fe 	BREV       $-2,R0
    20da:	00 04 40 00 	SUB        R1,R0
    20db:	0b 01 e9 00 	LDI        0x0097fffe,R1	// 97fffe <_top_of_stack+0x97bfff>
    20dc:	0a 40 ff fe 
    20dd:	04 c4 40 00 	STO        R0,(R1)
    20de:	03 01 91 00 	LDI        0x0089fff2,R0	// 89fff2 <_top_of_stack+0x89bff3>
    20df:	02 40 ff f2 
    20e0:	3c 84 00 00 	LOD        (R0),R7
    20e1:	03 01 91 00 	LDI        0x0089fff3,R0	// 89fff3 <_top_of_stack+0x89bff4>
    20e2:	02 40 ff f3 
    20e3:	34 84 00 00 	LOD        (R0),R6
    20e4:	03 01 91 00 	LDI        0x0089fff4,R0	// 89fff4 <_top_of_stack+0x89bff5>
    20e5:	02 40 ff f4 
    20e6:	2c 84 00 00 	LOD        (R0),R5
    20e7:	05 80 00 00 	CLR        R0
    20e8:	04 c0 01 04 	STO        R0,($260)
    20e9:	05 81 00 01 	LDI        $65537,R0
    20ea:	04 c0 01 06 	STO        R0,($262)
    20eb:	1b c1 c0 00 	MOV        R7,R3
    20ec:	18 81 00 00 	ADD        $65536,R3
    20ed:	0b c1 c0 00 	MOV        R7,R1
    20ee:	13 00 ff 00 	BREV       $65280,R2
    20ef:	04 80 01 0b 	LOD        ($267),R0
    20f0:	04 00 00 00 	CMP        $0,R0
    20f1:	78 9b ff fd 	BNZ        @0x000020ef	// 20ef <test_malloc+0x7a>
    20f2:	24 84 40 00 	LOD        (R1),R4
    20f3:	20 40 00 ff 	AND        $255,R4
    20f4:	04 80 01 0b 	LOD        ($267),R0
    20f5:	04 00 00 00 	CMP        $0,R0
    20f6:	78 9b ff fd 	BNZ        @0x000020f4	// 20f4 <test_malloc+0x7f>
    20f7:	24 c0 01 0b 	STO        R4,($267)
    20f8:	24 84 40 00 	LOD        (R1),R4
    20f9:	20 40 ff 00 	AND        $65280,R4
    20fa:	21 c0 00 08 	ASR        $8,R4
    20fb:	04 80 01 0b 	LOD        ($267),R0
    20fc:	04 00 00 00 	CMP        $0,R0
    20fd:	78 9b ff fd 	BNZ        @0x000020fb	// 20fb <test_malloc+0x86>
    20fe:	24 c0 01 0b 	STO        R4,($267)
    20ff:	04 80 01 0b 	LOD        ($267),R0
    2100:	04 00 00 00 	CMP        $0,R0
    2101:	78 9b ff fd 	BNZ        @0x000020ff	// 20ff <test_malloc+0x8a>
    2102:	24 84 40 00 	LOD        (R1),R4
    2103:	20 44 80 00 	AND        R2,R4
    2104:	21 c0 00 10 	ASR        $16,R4
    2105:	04 80 01 0b 	LOD        ($267),R0
    2106:	04 00 00 00 	CMP        $0,R0
    2107:	78 9b ff fd 	BNZ        @0x00002105	// 2105 <test_malloc+0x90>
    2108:	24 c0 01 0b 	STO        R4,($267)
    2109:	24 84 40 00 	LOD        (R1),R4
    210a:	21 c0 00 18 	ASR        $24,R4
    210b:	04 80 01 0b 	LOD        ($267),R0
    210c:	04 00 00 00 	CMP        $0,R0
    210d:	78 9b ff fd 	BNZ        @0x0000210b	// 210b <test_malloc+0x96>
    210e:	24 c0 01 0b 	STO        R4,($267)
    210f:	08 80 00 01 	ADD        $1,R1
    2110:	0c 04 c0 00 	CMP        R3,R1
    2111:	78 9b ff dd 	BNZ        @0x000020ef	// 20ef <test_malloc+0x7a>
    2112:	0d 81 00 00 	LDI        $65536,R1
    2113:	0c c0 01 06 	STO        R1,($262)
    2114:	04 c0 01 04 	STO        R0,($260)
    2115:	05 81 00 01 	LDI        $65537,R0
    2116:	04 c0 01 06 	STO        R0,($262)
    2117:	1b c1 80 00 	MOV        R6,R3
    2118:	18 84 40 00 	ADD        R1,R3
    2119:	0b c1 80 00 	MOV        R6,R1
    211a:	13 00 ff 00 	BREV       $65280,R2
    211b:	04 80 01 0b 	LOD        ($267),R0
    211c:	04 00 00 00 	CMP        $0,R0
    211d:	78 9b ff fd 	BNZ        @0x0000211b	// 211b <test_malloc+0xa6>
    211e:	24 84 40 00 	LOD        (R1),R4
    211f:	20 40 00 ff 	AND        $255,R4
    2120:	04 80 01 0b 	LOD        ($267),R0
    2121:	04 00 00 00 	CMP        $0,R0
    2122:	78 9b ff fd 	BNZ        @0x00002120	// 2120 <test_malloc+0xab>
    2123:	24 c0 01 0b 	STO        R4,($267)
    2124:	24 84 40 00 	LOD        (R1),R4
    2125:	20 40 ff 00 	AND        $65280,R4
    2126:	21 c0 00 08 	ASR        $8,R4
    2127:	04 80 01 0b 	LOD        ($267),R0
    2128:	04 00 00 00 	CMP        $0,R0
    2129:	78 9b ff fd 	BNZ        @0x00002127	// 2127 <test_malloc+0xb2>
    212a:	24 c0 01 0b 	STO        R4,($267)
    212b:	04 80 01 0b 	LOD        ($267),R0
    212c:	04 00 00 00 	CMP        $0,R0
    212d:	78 9b ff fd 	BNZ        @0x0000212b	// 212b <test_malloc+0xb6>
    212e:	24 84 40 00 	LOD        (R1),R4
    212f:	20 44 80 00 	AND        R2,R4
    2130:	21 c0 00 10 	ASR        $16,R4
    2131:	04 80 01 0b 	LOD        ($267),R0
    2132:	04 00 00 00 	CMP        $0,R0
    2133:	78 9b ff fd 	BNZ        @0x00002131	// 2131 <test_malloc+0xbc>
    2134:	24 c0 01 0b 	STO        R4,($267)
    2135:	24 84 40 00 	LOD        (R1),R4
    2136:	21 c0 00 18 	ASR        $24,R4
    2137:	04 80 01 0b 	LOD        ($267),R0
    2138:	04 00 00 00 	CMP        $0,R0
    2139:	78 9b ff fd 	BNZ        @0x00002137	// 2137 <test_malloc+0xc2>
    213a:	24 c0 01 0b 	STO        R4,($267)
    213b:	08 80 00 01 	ADD        $1,R1
    213c:	0c 04 c0 00 	CMP        R3,R1
    213d:	78 9b ff dd 	BNZ        @0x0000211b	// 211b <test_malloc+0xa6>
    213e:	0d 81 00 00 	LDI        $65536,R1
    213f:	0c c0 01 06 	STO        R1,($262)
    2140:	04 c0 01 04 	STO        R0,($260)
    2141:	05 81 00 01 	LDI        $65537,R0
    2142:	04 c0 01 06 	STO        R0,($262)
    2143:	1b c1 40 00 	MOV        R5,R3
    2144:	18 84 40 00 	ADD        R1,R3
    2145:	0b c1 40 00 	MOV        R5,R1
    2146:	13 00 ff 00 	BREV       $65280,R2
    2147:	04 80 01 0b 	LOD        ($267),R0
    2148:	04 00 00 00 	CMP        $0,R0
    2149:	78 9b ff fd 	BNZ        @0x00002147	// 2147 <test_malloc+0xd2>
    214a:	24 84 40 00 	LOD        (R1),R4
    214b:	20 40 00 ff 	AND        $255,R4
    214c:	04 80 01 0b 	LOD        ($267),R0
    214d:	04 00 00 00 	CMP        $0,R0
    214e:	78 9b ff fd 	BNZ        @0x0000214c	// 214c <test_malloc+0xd7>
    214f:	24 c0 01 0b 	STO        R4,($267)
    2150:	24 84 40 00 	LOD        (R1),R4
    2151:	20 40 ff 00 	AND        $65280,R4
    2152:	21 c0 00 08 	ASR        $8,R4
    2153:	04 80 01 0b 	LOD        ($267),R0
    2154:	04 00 00 00 	CMP        $0,R0
    2155:	78 9b ff fd 	BNZ        @0x00002153	// 2153 <test_malloc+0xde>
    2156:	24 c0 01 0b 	STO        R4,($267)
    2157:	04 80 01 0b 	LOD        ($267),R0
    2158:	04 00 00 00 	CMP        $0,R0
    2159:	78 9b ff fd 	BNZ        @0x00002157	// 2157 <test_malloc+0xe2>
    215a:	24 84 40 00 	LOD        (R1),R4
    215b:	20 44 80 00 	AND        R2,R4
    215c:	21 c0 00 10 	ASR        $16,R4
    215d:	04 80 01 0b 	LOD        ($267),R0
    215e:	04 00 00 00 	CMP        $0,R0
    215f:	78 9b ff fd 	BNZ        @0x0000215d	// 215d <test_malloc+0xe8>
    2160:	24 c0 01 0b 	STO        R4,($267)
    2161:	24 84 40 00 	LOD        (R1),R4
    2162:	21 c0 00 18 	ASR        $24,R4
    2163:	04 80 01 0b 	LOD        ($267),R0
    2164:	04 00 00 00 	CMP        $0,R0
    2165:	78 9b ff fd 	BNZ        @0x00002163	// 2163 <test_malloc+0xee>
    2166:	24 c0 01 0b 	STO        R4,($267)
    2167:	08 80 00 01 	ADD        $1,R1
    2168:	0c 04 c0 00 	CMP        R3,R1
    2169:	78 9b ff dd 	BNZ        @0x00002147	// 2147 <test_malloc+0xd2>
    216a:	05 81 00 00 	LDI        $65536,R0
    216b:	04 c0 01 06 	STO        R0,($262)
    216c:	0c 87 40 00 	LOD        (SP),R1
    216d:	03 c3 c0 02 	MOV        $2+PC,R0
    216e:	7c 87 c0 00 	LJMP       @0x0000206c	// 206c <free>
    216f:	00 00 20 6c 
    2170:	0b c1 c0 00 	MOV        R7,R1
    2171:	03 c3 c0 02 	MOV        $2+PC,R0
    2172:	7c 87 c0 00 	LJMP       @0x0000206c	// 206c <free>
    2173:	00 00 20 6c 
    2174:	0b c1 80 00 	MOV        R6,R1
    2175:	03 c3 c0 02 	MOV        $2+PC,R0
    2176:	7c 87 c0 00 	LJMP       @0x0000206c	// 206c <free>
    2177:	00 00 20 6c 
    2178:	0b c1 40 00 	MOV        R5,R1
    2179:	03 c3 c0 02 	MOV        $2+PC,R0
    217a:	7c 87 c0 00 	LJMP       @0x0000206c	// 206c <free>
    217b:	00 00 20 6c 
    217c:	04 87 40 03 	LOD        3(SP),R0
    217d:	2c 87 40 04 	LOD        4(SP),R5
    217e:	34 87 40 05 	LOD        5(SP),R6
    217f:	3c 87 40 06 	LOD        6(SP),R7
    2180:	44 87 40 07 	LOD        7(SP),R8
    2181:	4c 87 40 08 	LOD        8(SP),R9
    2182:	54 87 40 09 	LOD        9(SP),R10
    2183:	5c 87 40 0a 	LOD        10(SP),R11
    2184:	64 87 40 0b 	LOD        11(SP),R12
    2185:	68 80 00 0c 	ADD        $12,SP
    2186:	7b c0 00 00 	JMP        R0

00002187 <zip_write>:
    2187:	68 00 00 01 	SUB        $1,SP
    2188:	2c c7 40 00 	STO        R5,(SP)
    2189:	15 80 00 00 	CLR        R2
    218a:	14 c0 01 04 	STO        R2,($260)
    218b:	15 81 00 01 	LDI        $65537,R2
    218c:	14 c0 01 06 	STO        R2,($262)
    218d:	2b c0 40 00 	MOV        R1,R5
    218e:	28 81 00 00 	ADD        $65536,R5
    218f:	23 00 ff 00 	BREV       $65280,R4
    2190:	14 80 01 0b 	LOD        ($267),R2
    2191:	14 00 00 00 	CMP        $0,R2
    2192:	78 9b ff fd 	BNZ        @0x00002190	// 2190 <zip_write+0x9>
    2193:	1c 84 40 00 	LOD        (R1),R3
    2194:	18 40 00 ff 	AND        $255,R3
    2195:	14 80 01 0b 	LOD        ($267),R2
    2196:	14 00 00 00 	CMP        $0,R2
    2197:	78 9b ff fd 	BNZ        @0x00002195	// 2195 <zip_write+0xe>
    2198:	1c c0 01 0b 	STO        R3,($267)
    2199:	1c 84 40 00 	LOD        (R1),R3
    219a:	18 40 ff 00 	AND        $65280,R3
    219b:	19 c0 00 08 	ASR        $8,R3
    219c:	14 80 01 0b 	LOD        ($267),R2
    219d:	14 00 00 00 	CMP        $0,R2
    219e:	78 9b ff fd 	BNZ        @0x0000219c	// 219c <zip_write+0x15>
    219f:	1c c0 01 0b 	STO        R3,($267)
    21a0:	14 80 01 0b 	LOD        ($267),R2
    21a1:	14 00 00 00 	CMP        $0,R2
    21a2:	78 9b ff fd 	BNZ        @0x000021a0	// 21a0 <zip_write+0x19>
    21a3:	1c 84 40 00 	LOD        (R1),R3
    21a4:	18 45 00 00 	AND        R4,R3
    21a5:	19 c0 00 10 	ASR        $16,R3
    21a6:	14 80 01 0b 	LOD        ($267),R2
    21a7:	14 00 00 00 	CMP        $0,R2
    21a8:	78 9b ff fd 	BNZ        @0x000021a6	// 21a6 <zip_write+0x1f>
    21a9:	1c c0 01 0b 	STO        R3,($267)
    21aa:	1c 84 40 00 	LOD        (R1),R3
    21ab:	19 c0 00 18 	ASR        $24,R3
    21ac:	14 80 01 0b 	LOD        ($267),R2
    21ad:	14 00 00 00 	CMP        $0,R2
    21ae:	78 9b ff fd 	BNZ        @0x000021ac	// 21ac <zip_write+0x25>
    21af:	1c c0 01 0b 	STO        R3,($267)
    21b0:	08 80 00 01 	ADD        $1,R1
    21b1:	0c 05 40 00 	CMP        R5,R1
    21b2:	78 9b ff dd 	BNZ        @0x00002190	// 2190 <zip_write+0x9>
    21b3:	0d 81 00 00 	LDI        $65536,R1
    21b4:	0c c0 01 06 	STO        R1,($262)
    21b5:	2c 87 40 00 	LOD        (SP),R5
    21b6:	68 80 00 01 	ADD        $1,SP
    21b7:	7b c0 00 00 	JMP        R0

000021b8 <singlelift>:
    21b8:	14 00 00 01 	CMP        $1,R2
    21b9:	78 88 00 6e 	BLT        @0x00002228	// 2228 <singlelift+0x70>
    21ba:	68 00 00 0f 	SUB        $15,SP
    21bb:	2c c7 40 07 	STO        R5,$7(SP)
    21bc:	34 c7 40 08 	STO        R6,$8(SP)
    21bd:	3c c7 40 09 	STO        R7,$9(SP)
    21be:	44 c7 40 0a 	STO        R8,$10(SP)
    21bf:	4c c7 40 0b 	STO        R9,$11(SP)
    21c0:	54 c7 40 0c 	STO        R10,$12(SP)
    21c1:	5c c7 40 0d 	STO        R11,$13(SP)
    21c2:	64 c7 40 0e 	STO        R12,$14(SP)
    21c3:	33 c0 80 00 	MOV        R2,R6
    21c4:	32 04 40 00 	MPY        R1,R6
    21c5:	2b c1 80 00 	MOV        R6,R5
    21c6:	29 40 00 1f 	LSR        $31,R5
    21c7:	28 85 80 00 	ADD        R6,R5
    21c8:	29 c0 00 01 	ASR        $1,R5
    21c9:	33 c0 9f ff 	MOV        $-1+R2,R6
    21ca:	34 c7 40 04 	STO        R6,$4(SP)
    21cb:	33 c0 80 00 	MOV        R2,R6
    21cc:	31 c0 00 01 	ASR        $1,R6
    21cd:	34 c7 40 02 	STO        R6,$2(SP)
    21ce:	63 c0 c0 00 	MOV        R3,R12
    21cf:	1b c1 00 00 	MOV        R4,R3
    21d0:	18 85 40 00 	ADD        R5,R3
    21d1:	1c c7 40 01 	STO        R3,$1(SP)
    21d2:	24 c7 40 00 	STO        R4,(SP)
    21d3:	33 c1 00 00 	MOV        R4,R6
    21d4:	30 84 80 00 	ADD        R2,R6
    21d5:	34 c7 40 03 	STO        R6,$3(SP)
    21d6:	13 03 ff fe 	BREV       $-2,R2
    21d7:	1c 87 40 02 	LOD        2(SP),R3
    21d8:	18 84 80 00 	ADD        R2,R3
    21d9:	13 c0 c0 00 	MOV        R3,R2
    21da:	10 84 c0 00 	ADD        R3,R2
    21db:	14 c7 40 06 	STO        R2,$6(SP)
    21dc:	34 87 40 02 	LOD        2(SP),R6
    21dd:	13 c1 9f ff 	MOV        $-1+R6,R2
    21de:	12 04 40 00 	MPY        R1,R2
    21df:	10 85 40 00 	ADD        R5,R2
    21e0:	14 c7 40 05 	STO        R2,$5(SP)
    21e1:	5b 01 ff fc 	LDI        0x3ffffffd,R11	// 3ffffffd <_top_of_heap+0x3f0ffffd>
    21e2:	5a 40 ff fd 
    21e3:	23 c3 00 00 	MOV        R12,R4
    21e4:	44 87 40 00 	LOD        (SP),R8
    21e5:	34 87 40 01 	LOD        1(SP),R6
    21e6:	14 87 00 00 	LOD        (R12),R2
    21e7:	3c 87 00 02 	LOD        2(R12),R7
    21e8:	2b c0 80 00 	MOV        R2,R5
    21e9:	28 85 c0 00 	ADD        R7,R5
    21ea:	28 80 00 02 	ADD        $2,R5
    21eb:	29 c0 00 02 	ASR        $2,R5
    21ec:	1c 87 00 01 	LOD        1(R12),R3
    21ed:	28 84 c0 00 	ADD        R3,R5
    21ee:	14 c5 80 00 	STO        R2,(R6)
    21ef:	2c c6 00 00 	STO        R5,(R8)
    21f0:	1c 87 40 02 	LOD        2(SP),R3
    21f1:	1c 00 00 02 	CMP        $2,R3
    21f2:	78 88 00 1d 	BLT        @0x00002210	// 2210 <singlelift+0x58>
    21f3:	53 c3 00 00 	MOV        R12,R10
    21f4:	14 87 40 06 	LOD        6(SP),R2
    21f5:	50 84 80 00 	ADD        R2,R10
    21f6:	30 84 40 00 	ADD        R1,R6
    21f7:	40 84 40 00 	ADD        R1,R8
    21f8:	20 80 00 02 	ADD        $2,R4
    21f9:	1c 85 00 01 	LOD        1(R4),R3
    21fa:	4c 85 00 02 	LOD        2(R4),R9
    21fb:	13 c0 c0 00 	MOV        R3,R2
    21fc:	10 85 40 00 	ADD        R5,R2
    21fd:	10 80 00 02 	ADD        $2,R2
    21fe:	11 c0 00 02 	ASR        $2,R2
    21ff:	10 85 c0 00 	ADD        R7,R2
    2200:	14 c5 80 00 	STO        R2,(R6)
    2201:	13 c2 40 00 	MOV        R9,R2
    2202:	10 85 c0 00 	ADD        R7,R2
    2203:	11 c0 00 01 	ASR        $1,R2
    2204:	18 04 80 00 	SUB        R2,R3
    2205:	2c c6 00 00 	STO        R5,(R8)
    2206:	2c 06 c0 00 	CMP        R11,R5
    2207:	70 d0 00 10 	HALT.Z     
    2208:	3b c2 40 00 	MOV        R9,R7
    2209:	2b c0 c0 00 	MOV        R3,R5
    220a:	24 06 80 00 	CMP        R10,R4
    220b:	78 9b ff ea 	BNZ        @0x000021f6	// 21f6 <singlelift+0x3e>
    220c:	34 87 40 05 	LOD        5(SP),R6
    220d:	14 87 40 00 	LOD        (SP),R2
    220e:	30 84 80 00 	ADD        R2,R6
    220f:	78 80 00 01 	BRA        @0x00002211	// 2211 <singlelift+0x59>
    2210:	1b c1 40 00 	MOV        R5,R3
    2211:	14 87 40 04 	LOD        4(SP),R2
    2212:	30 84 80 00 	ADD        R2,R6
    2213:	1c c5 80 00 	STO        R3,(R6)
    2214:	60 84 40 00 	ADD        R1,R12
    2215:	1c 87 40 01 	LOD        1(SP),R3
    2216:	18 80 00 01 	ADD        $1,R3
    2217:	1c c7 40 01 	STO        R3,$1(SP)
    2218:	34 87 40 00 	LOD        (SP),R6
    2219:	30 80 00 01 	ADD        $1,R6
    221a:	34 c7 40 00 	STO        R6,(SP)
    221b:	14 87 40 03 	LOD        3(SP),R2
    221c:	14 05 80 00 	CMP        R6,R2
    221d:	78 9b ff c5 	BNZ        @0x000021e3	// 21e3 <singlelift+0x2b>
    221e:	2c 87 40 07 	LOD        7(SP),R5
    221f:	34 87 40 08 	LOD        8(SP),R6
    2220:	3c 87 40 09 	LOD        9(SP),R7
    2221:	44 87 40 0a 	LOD        10(SP),R8
    2222:	4c 87 40 0b 	LOD        11(SP),R9
    2223:	54 87 40 0c 	LOD        12(SP),R10
    2224:	5c 87 40 0d 	LOD        13(SP),R11
    2225:	64 87 40 0e 	LOD        14(SP),R12
    2226:	68 80 00 0f 	ADD        $15,SP
    2227:	7b c0 00 00 	JMP        R0
    2228:	7b c0 00 00 	JMP        R0

00002229 <lifting>:
    2229:	68 00 00 16 	SUB        $22,SP
    222a:	2c c7 40 0e 	STO        R5,$14(SP)
    222b:	34 c7 40 0f 	STO        R6,$15(SP)
    222c:	3c c7 40 10 	STO        R7,$16(SP)
    222d:	44 c7 40 11 	STO        R8,$17(SP)
    222e:	4c c7 40 12 	STO        R9,$18(SP)
    222f:	54 c7 40 13 	STO        R10,$19(SP)
    2230:	5c c7 40 14 	STO        R11,$20(SP)
    2231:	64 c7 40 15 	STO        R12,$21(SP)
    2232:	5b c0 40 00 	MOV        R1,R11
    2233:	14 c7 40 09 	STO        R2,$9(SP)
    2234:	1c c7 40 0a 	STO        R3,$10(SP)
    2235:	0c c7 40 08 	STO        R1,$8(SP)
    2236:	0d 80 00 03 	LDI        $3,R1
    2237:	0c c7 40 0c 	STO        R1,$12(SP)
    2238:	63 01 ff fc 	LDI        0x3ffffffd,R12	// 3ffffffd <_top_of_heap+0x3f0ffffd>
    2239:	62 40 ff fd 
    223a:	13 c2 c0 00 	MOV        R11,R2
    223b:	78 80 00 90 	BRA        @0x000022cc	// 22cc <lifting+0xa3>
    223c:	1b c2 80 00 	MOV        R10,R3
    223d:	3c 87 40 00 	LOD        (SP),R7
    223e:	2c 87 40 02 	LOD        2(SP),R5
    223f:	0c 86 80 00 	LOD        (R10),R1
    2240:	34 86 80 02 	LOD        2(R10),R6
    2241:	23 c0 40 00 	MOV        R1,R4
    2242:	20 85 80 00 	ADD        R6,R4
    2243:	20 80 00 02 	ADD        $2,R4
    2244:	21 c0 00 02 	ASR        $2,R4
    2245:	14 86 80 01 	LOD        1(R10),R2
    2246:	20 84 80 00 	ADD        R2,R4
    2247:	0c c5 40 00 	STO        R1,(R5)
    2248:	24 c5 c0 00 	STO        R4,(R7)
    2249:	0c 87 40 03 	LOD        3(SP),R1
    224a:	0c 00 00 02 	CMP        $2,R1
    224b:	78 88 00 1c 	BLT        @0x00002268	// 2268 <lifting+0x3f>
    224c:	4c 87 40 05 	LOD        5(SP),R9
    224d:	48 86 80 00 	ADD        R10,R9
    224e:	28 86 c0 00 	ADD        R11,R5
    224f:	38 86 c0 00 	ADD        R11,R7
    2250:	18 80 00 02 	ADD        $2,R3
    2251:	14 84 c0 01 	LOD        1(R3),R2
    2252:	44 84 c0 02 	LOD        2(R3),R8
    2253:	0b c0 80 00 	MOV        R2,R1
    2254:	08 85 00 00 	ADD        R4,R1
    2255:	08 80 00 02 	ADD        $2,R1
    2256:	09 c0 00 02 	ASR        $2,R1
    2257:	08 85 80 00 	ADD        R6,R1
    2258:	0c c5 40 00 	STO        R1,(R5)
    2259:	0b c2 00 00 	MOV        R8,R1
    225a:	08 85 80 00 	ADD        R6,R1
    225b:	09 c0 00 01 	ASR        $1,R1
    225c:	10 04 40 00 	SUB        R1,R2
    225d:	24 c5 c0 00 	STO        R4,(R7)
    225e:	24 07 00 00 	CMP        R12,R4
    225f:	70 d0 00 10 	HALT.Z     
    2260:	23 c0 80 00 	MOV        R2,R4
    2261:	33 c2 00 00 	MOV        R8,R6
    2262:	1c 06 40 00 	CMP        R9,R3
    2263:	78 9b ff ea 	BNZ        @0x0000224e	// 224e <lifting+0x25>
    2264:	2c 87 40 06 	LOD        6(SP),R5
    2265:	1c 87 40 00 	LOD        (SP),R3
    2266:	28 84 c0 00 	ADD        R3,R5
    2267:	78 80 00 02 	BRA        @0x0000226a	// 226a <lifting+0x41>
    2268:	13 c1 00 00 	MOV        R4,R2
    2269:	1b c1 c0 00 	MOV        R7,R3
    226a:	0c 87 40 04 	LOD        4(SP),R1
    226b:	28 84 40 00 	ADD        R1,R5
    226c:	14 c5 40 00 	STO        R2,(R5)
    226d:	50 86 c0 00 	ADD        R11,R10
    226e:	14 87 40 02 	LOD        2(SP),R2
    226f:	10 80 00 01 	ADD        $1,R2
    2270:	14 c7 40 02 	STO        R2,$2(SP)
    2271:	18 80 00 01 	ADD        $1,R3
    2272:	1c c7 40 00 	STO        R3,(SP)
    2273:	0c 87 40 07 	LOD        7(SP),R1
    2274:	0c 04 c0 00 	CMP        R3,R1
    2275:	78 9b ff c6 	BNZ        @0x0000223c	// 223c <lifting+0x13>
    2276:	54 87 40 09 	LOD        9(SP),R10
    2277:	14 87 40 0b 	LOD        11(SP),R2
    2278:	50 84 80 00 	ADD        R2,R10
    2279:	0c 87 40 09 	LOD        9(SP),R1
    227a:	14 87 40 08 	LOD        8(SP),R2
    227b:	08 84 80 00 	ADD        R2,R1
    227c:	0c c7 40 02 	STO        R1,$2(SP)
    227d:	54 c7 40 00 	STO        R10,(SP)
    227e:	54 87 40 0d 	LOD        13(SP),R10
    227f:	1b c2 80 00 	MOV        R10,R3
    2280:	3c 87 40 01 	LOD        1(SP),R7
    2281:	2c 87 40 00 	LOD        (SP),R5
    2282:	0c 86 80 00 	LOD        (R10),R1
    2283:	34 86 80 02 	LOD        2(R10),R6
    2284:	23 c0 40 00 	MOV        R1,R4
    2285:	20 85 80 00 	ADD        R6,R4
    2286:	20 80 00 02 	ADD        $2,R4
    2287:	21 c0 00 02 	ASR        $2,R4
    2288:	14 86 80 01 	LOD        1(R10),R2
    2289:	20 84 80 00 	ADD        R2,R4
    228a:	0c c5 40 00 	STO        R1,(R5)
    228b:	24 c5 c0 00 	STO        R4,(R7)
    228c:	14 87 40 03 	LOD        3(SP),R2
    228d:	14 00 00 02 	CMP        $2,R2
    228e:	78 88 00 1c 	BLT        @0x000022ab	// 22ab <lifting+0x82>
    228f:	4c 87 40 05 	LOD        5(SP),R9
    2290:	48 86 80 00 	ADD        R10,R9
    2291:	28 86 c0 00 	ADD        R11,R5
    2292:	38 86 c0 00 	ADD        R11,R7
    2293:	18 80 00 02 	ADD        $2,R3
    2294:	14 84 c0 01 	LOD        1(R3),R2
    2295:	44 84 c0 02 	LOD        2(R3),R8
    2296:	0b c0 80 00 	MOV        R2,R1
    2297:	08 85 00 00 	ADD        R4,R1
    2298:	08 80 00 02 	ADD        $2,R1
    2299:	09 c0 00 02 	ASR        $2,R1
    229a:	08 85 80 00 	ADD        R6,R1
    229b:	0c c5 40 00 	STO        R1,(R5)
    229c:	0b c2 00 00 	MOV        R8,R1
    229d:	08 85 80 00 	ADD        R6,R1
    229e:	09 c0 00 01 	ASR        $1,R1
    229f:	10 04 40 00 	SUB        R1,R2
    22a0:	24 c5 c0 00 	STO        R4,(R7)
    22a1:	24 07 00 00 	CMP        R12,R4
    22a2:	70 d0 00 10 	HALT.Z     
    22a3:	23 c0 80 00 	MOV        R2,R4
    22a4:	33 c2 00 00 	MOV        R8,R6
    22a5:	1c 06 40 00 	CMP        R9,R3
    22a6:	78 9b ff ea 	BNZ        @0x00002291	// 2291 <lifting+0x68>
    22a7:	2c 87 40 06 	LOD        6(SP),R5
    22a8:	1c 87 40 01 	LOD        1(SP),R3
    22a9:	28 84 c0 00 	ADD        R3,R5
    22aa:	78 80 00 02 	BRA        @0x000022ad	// 22ad <lifting+0x84>
    22ab:	13 c1 00 00 	MOV        R4,R2
    22ac:	1b c1 c0 00 	MOV        R7,R3
    22ad:	0c 87 40 04 	LOD        4(SP),R1
    22ae:	28 84 40 00 	ADD        R1,R5
    22af:	14 c5 40 00 	STO        R2,(R5)
    22b0:	50 86 c0 00 	ADD        R11,R10
    22b1:	14 87 40 00 	LOD        (SP),R2
    22b2:	10 80 00 01 	ADD        $1,R2
    22b3:	14 c7 40 00 	STO        R2,(SP)
    22b4:	18 80 00 01 	ADD        $1,R3
    22b5:	1c c7 40 01 	STO        R3,$1(SP)
    22b6:	0c 87 40 02 	LOD        2(SP),R1
    22b7:	0c 04 c0 00 	CMP        R3,R1
    22b8:	78 9b ff c6 	BNZ        @0x0000227f	// 227f <lifting+0x56>
    22b9:	14 87 40 03 	LOD        3(SP),R2
    22ba:	0c 87 40 08 	LOD        8(SP),R1
    22bb:	09 40 00 1f 	LSR        $31,R1
    22bc:	1c 87 40 08 	LOD        8(SP),R3
    22bd:	08 84 c0 00 	ADD        R3,R1
    22be:	09 c0 00 01 	ASR        $1,R1
    22bf:	1c 87 40 0b 	LOD        11(SP),R3
    22c0:	08 84 c0 00 	ADD        R3,R1
    22c1:	1c 87 40 09 	LOD        9(SP),R3
    22c2:	18 84 40 00 	ADD        R1,R3
    22c3:	1c c7 40 09 	STO        R3,$9(SP)
    22c4:	1c 87 40 0a 	LOD        10(SP),R3
    22c5:	18 84 40 00 	ADD        R1,R3
    22c6:	1c c7 40 0a 	STO        R3,$10(SP)
    22c7:	0c 87 40 0c 	LOD        12(SP),R1
    22c8:	08 83 ff ff 	ADD        $-1,R1
    22c9:	0c c7 40 0c 	STO        R1,$12(SP)
    22ca:	78 90 00 38 	BZ         @0x00002303	// 2303 <lifting+0xda>
    22cb:	14 c7 40 08 	STO        R2,$8(SP)
    22cc:	14 00 00 00 	CMP        $0,R2
    22cd:	78 a0 00 0c 	BGT        @0x000022da	// 22da <lifting+0xb1>
    22ce:	1b c0 80 00 	MOV        R2,R3
    22cf:	13 c2 c0 00 	MOV        R11,R2
    22d0:	12 04 c0 00 	MPY        R3,R2
    22d1:	0b c0 80 00 	MOV        R2,R1
    22d2:	09 40 00 1f 	LSR        $31,R1
    22d3:	08 84 80 00 	ADD        R2,R1
    22d4:	09 c0 00 01 	ASR        $1,R1
    22d5:	0c c7 40 0b 	STO        R1,$11(SP)
    22d6:	13 c0 c0 00 	MOV        R3,R2
    22d7:	11 c0 00 01 	ASR        $1,R2
    22d8:	0b c0 c0 00 	MOV        R3,R1
    22d9:	78 83 ff e1 	BRA        @0x000022bb	// 22bb <lifting+0x92>
    22da:	0b c0 80 00 	MOV        R2,R1
    22db:	1b c0 80 00 	MOV        R2,R3
    22dc:	13 c2 c0 00 	MOV        R11,R2
    22dd:	12 04 40 00 	MPY        R1,R2
    22de:	0b c0 80 00 	MOV        R2,R1
    22df:	09 40 00 1f 	LSR        $31,R1
    22e0:	08 84 80 00 	ADD        R2,R1
    22e1:	09 c0 00 01 	ASR        $1,R1
    22e2:	0c c7 40 0b 	STO        R1,$11(SP)
    22e3:	14 87 40 08 	LOD        8(SP),R2
    22e4:	11 c0 00 01 	ASR        $1,R2
    22e5:	14 c7 40 03 	STO        R2,$3(SP)
    22e6:	18 83 ff ff 	ADD        $-1,R3
    22e7:	1c c7 40 04 	STO        R3,$4(SP)
    22e8:	0c 87 40 09 	LOD        9(SP),R1
    22e9:	0c c7 40 01 	STO        R1,$1(SP)
    22ea:	14 87 40 0a 	LOD        10(SP),R2
    22eb:	1c 87 40 0b 	LOD        11(SP),R3
    22ec:	10 84 c0 00 	ADD        R3,R2
    22ed:	14 c7 40 02 	STO        R2,$2(SP)
    22ee:	0c 87 40 0a 	LOD        10(SP),R1
    22ef:	0c c7 40 0d 	STO        R1,$13(SP)
    22f0:	13 c0 40 00 	MOV        R1,R2
    22f1:	1c 87 40 08 	LOD        8(SP),R3
    22f2:	10 84 c0 00 	ADD        R3,R2
    22f3:	14 c7 40 07 	STO        R2,$7(SP)
    22f4:	0c 87 40 03 	LOD        3(SP),R1
    22f5:	13 03 ff fe 	BREV       $-2,R2
    22f6:	08 84 80 00 	ADD        R2,R1
    22f7:	08 84 40 00 	ADD        R1,R1
    22f8:	0c c7 40 05 	STO        R1,$5(SP)
    22f9:	1c 87 40 03 	LOD        3(SP),R3
    22fa:	0b c0 df ff 	MOV        $-1+R3,R1
    22fb:	0a 06 c0 00 	MPY        R11,R1
    22fc:	14 87 40 0b 	LOD        11(SP),R2
    22fd:	08 84 80 00 	ADD        R2,R1
    22fe:	0c c7 40 06 	STO        R1,$6(SP)
    22ff:	1c 87 40 0a 	LOD        10(SP),R3
    2300:	1c c7 40 00 	STO        R3,(SP)
    2301:	54 87 40 09 	LOD        9(SP),R10
    2302:	78 83 ff 39 	BRA        @0x0000223c	// 223c <lifting+0x13>
    2303:	2c 87 40 0e 	LOD        14(SP),R5
    2304:	34 87 40 0f 	LOD        15(SP),R6
    2305:	3c 87 40 10 	LOD        16(SP),R7
    2306:	44 87 40 11 	LOD        17(SP),R8
    2307:	4c 87 40 12 	LOD        18(SP),R9
    2308:	54 87 40 13 	LOD        19(SP),R10
    2309:	5c 87 40 14 	LOD        20(SP),R11
    230a:	64 87 40 15 	LOD        21(SP),R12
    230b:	68 80 00 16 	ADD        $22,SP
    230c:	7b c0 00 00 	JMP        R0

0000230d <msg1>:
    230d:	00 00 00 44 00 00 00 61 00 00 00 74 00 00 00 61     ...D...a...t...a
    2311:	00 00 00 20 00 00 00 72 00 00 00 64 00 00 00 79     ... ...r...d...y
    2315:	00 00 00 20 00 00 00 20 00 00 00 20 00 00 00 20     ... ... ... ... 
    2319:	00 00 00 20 00 00 00 0d 00 00 00 0a 00 00 00 00     ... ............

0000231d <msg>:
    231d:	00 00 00 48 00 00 00 65 00 00 00 6c 00 00 00 6c     ...H...e...l...l
    2321:	00 00 00 6f 00 00 00 2c 00 00 00 20 00 00 00 77     ...o...,... ...w
    2325:	00 00 00 6f 00 00 00 72 00 00 00 6c 00 00 00 64     ...o...r...l...d
    2329:	00 00 00 21 00 00 00 0d 00 00 00 0a 00 00 00 00     ...!............

0000232d <XULA_BUSY>:
    232d:	40 00 00 00                                         @...

0000232e <READY_FOR_XMIT>:
    232e:	40 00 40 00                                         @.@.

0000232f <LED_OFF>:
    232f:	00 02 00 00                                         ....

00002330 <LED_ON>:
    2330:	00 02 00 02                                         ....
