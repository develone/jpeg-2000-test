
h2:     file format elf32-zip


Disassembly of section .rocode:

00002000 <_start>:
    2000:	6b 00 00 00 	LDI        0x00003fff,SP	// 3fff <_top_of_stack>
    2001:	6a 40 3f ff 
    2002:	7c 87 c0 00 	LJMP       @0x00002004	// 2004 <entry>
    2003:	00 00 20 04 

00002004 <entry>:
    2004:	68 00 00 02 	SUB        $2,SP
    2005:	04 c7 40 00 	STO        R0,(SP)
    2006:	2c c7 40 01 	STO        R5,$1(SP)
    2007:	0b 00 01 00 	BREV       $256,R1
    2008:	03 c3 c0 02 	MOV        $2+PC,R0
    2009:	7c 87 c0 00 	LJMP       @0x00002063	// 2063 <zip_clear_sdram>
    200a:	00 00 20 63 
    200b:	0d 80 00 4f 	LDI        $79,R1
    200c:	0c c0 01 07 	STO        R1,($263)
    200d:	13 00 00 00 	LDI        0x000022c1,R2	// 22c1 <msg>
    200e:	12 40 22 c1 
    200f:	1c 84 80 00 	LOD        (R2),R3
    2010:	1c 00 00 00 	CMP        $0,R3
    2011:	78 98 00 10 	BNZ        @0x00002022	// 2022 <entry+0x1e>
    2012:	2b 00 40 02 	LDI        0x40024002,R5	// 40024002 <_top_of_heap+0x3f124002>
    2013:	2a 40 40 02 
    2014:	2c c0 01 06 	STO        R5,($262)
    2015:	0b 00 01 00 	BREV       $256,R1
    2016:	03 c3 c0 02 	MOV        $2+PC,R0
    2017:	7c 87 c0 00 	LJMP       @0x00002032	// 2032 <zip_read_image>
    2018:	00 00 20 32 
    2019:	28 83 bf fe 	ADD        $-16386,R5
    201a:	2c c0 01 06 	STO        R5,($262)
    201b:	0b 03 ff fe 	BREV       $-2,R1
    201c:	0c c0 01 04 	STO        R1,($260)
    201d:	03 c3 c0 02 	MOV        $2+PC,R0
    201e:	7c 87 c0 00 	LJMP       @0x00002075	// 2075 <test_malloc>
    201f:	00 00 20 75 
    2020:	14 80 01 10 	LOD        ($272),R2
    2021:	78 80 00 09 	BRA        @0x0000202b	// 202b <entry+0x27>
    2022:	0c 80 01 0b 	LOD        ($267),R1
    2023:	0c 00 00 00 	CMP        $0,R1
    2024:	78 9b ff fd 	BNZ        @0x00002022	// 2022 <entry+0x1e>
    2025:	10 80 00 01 	ADD        $1,R2
    2026:	1c c0 01 0b 	STO        R3,($267)
    2027:	1c 84 80 00 	LOD        (R2),R3
    2028:	1c 00 00 00 	CMP        $0,R3
    2029:	78 9b ff f8 	BNZ        @0x00002022	// 2022 <entry+0x1e>
    202a:	78 83 ff e7 	BRA        @0x00002012	// 2012 <entry+0xe>
    202b:	0c 80 01 10 	LOD        ($272),R1
    202c:	14 04 40 00 	CMP        R1,R2
    202d:	78 93 ff fd 	BZ         @0x0000202b	// 202b <entry+0x27>
    202e:	04 87 40 00 	LOD        (SP),R0
    202f:	2c 87 40 01 	LOD        1(SP),R5
    2030:	68 80 00 02 	ADD        $2,SP
    2031:	7b c0 00 00 	JMP        R0

00002032 <zip_read_image>:
    2032:	68 00 00 05 	SUB        $5,SP
    2033:	2c c7 40 00 	STO        R5,(SP)
    2034:	34 c7 40 01 	STO        R6,$1(SP)
    2035:	3c c7 40 02 	STO        R7,$2(SP)
    2036:	44 c7 40 03 	STO        R8,$3(SP)
    2037:	4c c7 40 04 	STO        R9,$4(SP)
    2038:	25 80 00 00 	CLR        R4
    2039:	24 c0 01 04 	STO        R4,($260)
    203a:	15 81 00 01 	LDI        $65537,R2
    203b:	14 c0 01 06 	STO        R2,($262)
    203c:	2b c0 40 00 	MOV        R1,R5
    203d:	45 ff ff ff 	LDI        $-1,R8
    203e:	3b 00 c1 00 	BREV       $49408,R7
    203f:	35 81 00 00 	LDI        $65536,R6
    2040:	44 c4 40 00 	STO        R8,(R1)
    2041:	14 80 01 0a 	LOD        ($266),R2
    2042:	1b c0 80 00 	MOV        R2,R3
    2043:	18 40 01 00 	AND        $256,R3
    2044:	78 9b ff fc 	BNZ        @0x00002041	// 2041 <zip_read_image+0xf>
    2045:	11 80 00 14 	LSL        $20,R2
    2046:	1c 80 01 0a 	LOD        ($266),R3
    2047:	4b c0 c0 00 	MOV        R3,R9
    2048:	48 40 01 00 	AND        $256,R9
    2049:	78 9b ff fc 	BNZ        @0x00002046	// 2046 <zip_read_image+0x14>
    204a:	19 80 00 0a 	LSL        $10,R3
    204b:	10 c4 c0 00 	OR         R3,R2
    204c:	1c 80 01 0a 	LOD        ($266),R3
    204d:	4b c0 c0 00 	MOV        R3,R9
    204e:	48 40 01 00 	AND        $256,R9
    204f:	78 9b ff fc 	BNZ        @0x0000204c	// 204c <zip_read_image+0x1a>
    2050:	10 c4 c0 00 	OR         R3,R2
    2051:	14 c5 40 00 	STO        R2,(R5)
    2052:	24 c5 c0 00 	STO        R4,(R7)
    2053:	34 c0 01 06 	STO        R6,($262)
    2054:	14 80 01 02 	LOD        ($258),R2
    2055:	10 40 01 00 	AND        $256,R2
    2056:	78 98 00 05 	BNZ        @0x0000205c	// 205c <zip_read_image+0x2a>
    2057:	20 80 00 01 	ADD        $1,R4
    2058:	28 80 00 01 	ADD        $1,R5
    2059:	08 80 00 02 	ADD        $2,R1
    205a:	24 01 00 00 	CMP        $65536,R4
    205b:	78 9b ff e4 	BNZ        @0x00002040	// 2040 <zip_read_image+0xe>
    205c:	2c 87 40 00 	LOD        (SP),R5
    205d:	34 87 40 01 	LOD        1(SP),R6
    205e:	3c 87 40 02 	LOD        2(SP),R7
    205f:	44 87 40 03 	LOD        3(SP),R8
    2060:	4c 87 40 04 	LOD        4(SP),R9
    2061:	68 80 00 05 	ADD        $5,SP
    2062:	7b c0 00 00 	JMP        R0

00002063 <zip_clear_sdram>:
    2063:	15 83 00 00 	LDI        $196608,R2
    2064:	1b c0 40 00 	MOV        R1,R3
    2065:	18 84 80 00 	ADD        R2,R3
    2066:	15 80 00 00 	CLR        R2
    2067:	08 80 00 01 	ADD        $1,R1
    2068:	14 c4 7f ff 	STO        R2,$-1(R1)
    2069:	0c 04 c0 00 	CMP        R3,R1
    206a:	78 9b ff fc 	BNZ        @0x00002067	// 2067 <zip_clear_sdram+0x4>
    206b:	7b c0 00 00 	JMP        R0

0000206c <free>:
    206c:	7b c0 00 00 	JMP        R0

0000206d <malloc>:
    206d:	1b 00 00 00 	LDI        0x000022d5,R3	// 22d5 <heap>
    206e:	1a 40 22 d5 
    206f:	14 84 c0 00 	LOD        (R3),R2
    2070:	23 c0 80 00 	MOV        R2,R4
    2071:	20 84 40 00 	ADD        R1,R4
    2072:	24 c4 c0 00 	STO        R4,(R3)
    2073:	0b c0 80 00 	MOV        R2,R1
    2074:	7b c0 00 00 	JMP        R0

00002075 <test_malloc>:
    2075:	68 00 00 0c 	SUB        $12,SP
    2076:	04 c7 40 03 	STO        R0,$3(SP)
    2077:	2c c7 40 04 	STO        R5,$4(SP)
    2078:	34 c7 40 05 	STO        R6,$5(SP)
    2079:	3c c7 40 06 	STO        R7,$6(SP)
    207a:	44 c7 40 07 	STO        R8,$7(SP)
    207b:	4c c7 40 08 	STO        R9,$8(SP)
    207c:	54 c7 40 09 	STO        R10,$9(SP)
    207d:	5c c7 40 0a 	STO        R11,$10(SP)
    207e:	64 c7 40 0b 	STO        R12,$11(SP)
    207f:	0d 81 00 00 	LDI        $65536,R1
    2080:	03 c3 c0 02 	MOV        $2+PC,R0
    2081:	7c 87 c0 00 	LJMP       @0x0000206d	// 206d <malloc>
    2082:	00 00 20 6d 
    2083:	0c c7 40 01 	STO        R1,$1(SP)
    2084:	0d 81 00 00 	LDI        $65536,R1
    2085:	03 c3 c0 02 	MOV        $2+PC,R0
    2086:	7c 87 c0 00 	LJMP       @0x0000206d	// 206d <malloc>
    2087:	00 00 20 6d 
    2088:	0c c7 40 02 	STO        R1,$2(SP)
    2089:	0d 81 00 00 	LDI        $65536,R1
    208a:	03 c3 c0 02 	MOV        $2+PC,R0
    208b:	7c 87 c0 00 	LJMP       @0x0000206d	// 206d <malloc>
    208c:	00 00 20 6d 
    208d:	0c c7 40 00 	STO        R1,(SP)
    208e:	03 01 91 00 	LDI        0x0089fff2,R0	// 89fff2 <_top_of_stack+0x89bff3>
    208f:	02 40 ff f2 
    2090:	0c 87 40 01 	LOD        1(SP),R1
    2091:	0c c4 00 00 	STO        R1,(R0)
    2092:	03 01 91 00 	LDI        0x0089fff3,R0	// 89fff3 <_top_of_stack+0x89bff4>
    2093:	02 40 ff f3 
    2094:	0c 87 40 02 	LOD        2(SP),R1
    2095:	0c c4 00 00 	STO        R1,(R0)
    2096:	03 01 91 00 	LDI        0x0089fff4,R0	// 89fff4 <_top_of_stack+0x89bff5>
    2097:	02 40 ff f4 
    2098:	0c 87 40 00 	LOD        (SP),R1
    2099:	0c c4 00 00 	STO        R1,(R0)
    209a:	0d 81 00 00 	LDI        $65536,R1
    209b:	03 c3 c0 02 	MOV        $2+PC,R0
    209c:	7c 87 c0 00 	LJMP       @0x0000206d	// 206d <malloc>
    209d:	00 00 20 6d 
    209e:	03 01 91 00 	LDI        0x0089fffa,R0	// 89fffa <_top_of_stack+0x89bffb>
    209f:	02 40 ff fa 
    20a0:	0c c4 00 00 	STO        R1,(R0)
    20a1:	5c 87 40 00 	LOD        (SP),R11
    20a2:	54 87 40 02 	LOD        2(SP),R10
    20a3:	14 87 40 01 	LOD        1(SP),R2
    20a4:	43 00 01 00 	BREV       $256,R8
    20a5:	4b 00 0f f8 	BREV       $4088,R9
    20a6:	3d 87 fc 00 	LDI        $523264,R7
    20a7:	63 00 81 00 	BREV       $33024,R12
    20a8:	78 80 00 16 	BRA        @0x000020bf	// 20bf <test_malloc+0x4a>
    20a9:	04 85 00 00 	LOD        (R4),R0
    20aa:	20 80 00 01 	ADD        $1,R4
    20ab:	10 80 00 01 	ADD        $1,R2
    20ac:	33 c0 00 00 	MOV        R0,R6
    20ad:	30 46 40 00 	AND        R9,R6
    20ae:	31 c0 00 14 	ASR        $20,R6
    20af:	34 c4 bf ff 	STO        R6,$-1(R2)
    20b0:	08 80 00 01 	ADD        $1,R1
    20b1:	33 c0 00 00 	MOV        R0,R6
    20b2:	30 45 c0 00 	AND        R7,R6
    20b3:	31 c0 00 0a 	ASR        $10,R6
    20b4:	34 c4 7f ff 	STO        R6,$-1(R1)
    20b5:	18 80 00 01 	ADD        $1,R3
    20b6:	00 40 01 ff 	AND        $511,R0
    20b7:	04 c4 ff ff 	STO        R0,$-1(R3)
    20b8:	14 05 40 00 	CMP        R5,R2
    20b9:	78 9b ff ef 	BNZ        @0x000020a9	// 20a9 <test_malloc+0x34>
    20ba:	40 80 01 00 	ADD        $256,R8
    20bb:	50 80 01 00 	ADD        $256,R10
    20bc:	58 80 01 00 	ADD        $256,R11
    20bd:	44 07 00 00 	CMP        R12,R8
    20be:	78 90 00 05 	BZ         @0x000020c4	// 20c4 <test_malloc+0x4f>
    20bf:	2b c0 81 00 	MOV        $256+R2,R5
    20c0:	23 c2 00 00 	MOV        R8,R4
    20c1:	1b c2 c0 00 	MOV        R11,R3
    20c2:	0b c2 80 00 	MOV        R10,R1
    20c3:	78 83 ff e5 	BRA        @0x000020a9	// 20a9 <test_malloc+0x34>
    20c4:	1b c2 00 00 	MOV        R8,R3
    20c5:	14 87 40 01 	LOD        1(SP),R2
    20c6:	0d 80 01 00 	LDI        $256,R1
    20c7:	03 c3 c0 02 	MOV        $2+PC,R0
    20c8:	7c 87 c0 00 	LJMP       @0x000021d8	// 21d8 <lifting>
    20c9:	00 00 21 d8 
    20ca:	1b c2 00 00 	MOV        R8,R3
    20cb:	14 87 40 02 	LOD        2(SP),R2
    20cc:	0d 80 01 00 	LDI        $256,R1
    20cd:	03 c3 c0 02 	MOV        $2+PC,R0
    20ce:	7c 87 c0 00 	LJMP       @0x000021d8	// 21d8 <lifting>
    20cf:	00 00 21 d8 
    20d0:	1b c2 00 00 	MOV        R8,R3
    20d1:	14 87 40 00 	LOD        (SP),R2
    20d2:	0d 80 01 00 	LDI        $256,R1
    20d3:	03 c3 c0 02 	MOV        $2+PC,R0
    20d4:	7c 87 c0 00 	LJMP       @0x000021d8	// 21d8 <lifting>
    20d5:	00 00 21 d8 
    20d6:	0c 80 01 04 	LOD        ($260),R1
    20d7:	03 03 ff fe 	BREV       $-2,R0
    20d8:	00 04 40 00 	SUB        R1,R0
    20d9:	0b 01 e9 00 	LDI        0x0097fffe,R1	// 97fffe <_top_of_stack+0x97bfff>
    20da:	0a 40 ff fe 
    20db:	04 c4 40 00 	STO        R0,(R1)
    20dc:	03 01 91 00 	LDI        0x0089fff2,R0	// 89fff2 <_top_of_stack+0x89bff3>
    20dd:	02 40 ff f2 
    20de:	3c 84 00 00 	LOD        (R0),R7
    20df:	03 01 91 00 	LDI        0x0089fff3,R0	// 89fff3 <_top_of_stack+0x89bff4>
    20e0:	02 40 ff f3 
    20e1:	34 84 00 00 	LOD        (R0),R6
    20e2:	03 01 91 00 	LDI        0x0089fff4,R0	// 89fff4 <_top_of_stack+0x89bff5>
    20e3:	02 40 ff f4 
    20e4:	2c 84 00 00 	LOD        (R0),R5
    20e5:	05 80 00 00 	CLR        R0
    20e6:	04 c0 01 04 	STO        R0,($260)
    20e7:	05 81 00 01 	LDI        $65537,R0
    20e8:	04 c0 01 06 	STO        R0,($262)
    20e9:	1b c1 c0 00 	MOV        R7,R3
    20ea:	18 81 00 00 	ADD        $65536,R3
    20eb:	13 c1 c0 00 	MOV        R7,R2
    20ec:	04 80 01 0b 	LOD        ($267),R0
    20ed:	04 00 00 00 	CMP        $0,R0
    20ee:	78 9b ff fd 	BNZ        @0x000020ec	// 20ec <test_malloc+0x77>
    20ef:	0c 84 80 00 	LOD        (R2),R1
    20f0:	08 40 00 ff 	AND        $255,R1
    20f1:	04 80 01 0b 	LOD        ($267),R0
    20f2:	04 00 00 00 	CMP        $0,R0
    20f3:	78 9b ff fd 	BNZ        @0x000020f1	// 20f1 <test_malloc+0x7c>
    20f4:	0c c0 01 0b 	STO        R1,($267)
    20f5:	0c 84 80 00 	LOD        (R2),R1
    20f6:	08 40 ff 00 	AND        $65280,R1
    20f7:	09 c0 00 08 	ASR        $8,R1
    20f8:	04 80 01 0b 	LOD        ($267),R0
    20f9:	04 00 00 00 	CMP        $0,R0
    20fa:	78 9b ff fd 	BNZ        @0x000020f8	// 20f8 <test_malloc+0x83>
    20fb:	0c c0 01 0b 	STO        R1,($267)
    20fc:	10 80 00 01 	ADD        $1,R2
    20fd:	14 04 c0 00 	CMP        R3,R2
    20fe:	78 9b ff ed 	BNZ        @0x000020ec	// 20ec <test_malloc+0x77>
    20ff:	0d 81 00 00 	LDI        $65536,R1
    2100:	0c c0 01 06 	STO        R1,($262)
    2101:	04 c0 01 04 	STO        R0,($260)
    2102:	05 81 00 01 	LDI        $65537,R0
    2103:	04 c0 01 06 	STO        R0,($262)
    2104:	1b c1 80 00 	MOV        R6,R3
    2105:	18 84 40 00 	ADD        R1,R3
    2106:	13 c1 80 00 	MOV        R6,R2
    2107:	04 80 01 0b 	LOD        ($267),R0
    2108:	04 00 00 00 	CMP        $0,R0
    2109:	78 9b ff fd 	BNZ        @0x00002107	// 2107 <test_malloc+0x92>
    210a:	0c 84 80 00 	LOD        (R2),R1
    210b:	08 40 00 ff 	AND        $255,R1
    210c:	04 80 01 0b 	LOD        ($267),R0
    210d:	04 00 00 00 	CMP        $0,R0
    210e:	78 9b ff fd 	BNZ        @0x0000210c	// 210c <test_malloc+0x97>
    210f:	0c c0 01 0b 	STO        R1,($267)
    2110:	0c 84 80 00 	LOD        (R2),R1
    2111:	08 40 ff 00 	AND        $65280,R1
    2112:	09 c0 00 08 	ASR        $8,R1
    2113:	04 80 01 0b 	LOD        ($267),R0
    2114:	04 00 00 00 	CMP        $0,R0
    2115:	78 9b ff fd 	BNZ        @0x00002113	// 2113 <test_malloc+0x9e>
    2116:	0c c0 01 0b 	STO        R1,($267)
    2117:	10 80 00 01 	ADD        $1,R2
    2118:	14 04 c0 00 	CMP        R3,R2
    2119:	78 9b ff ed 	BNZ        @0x00002107	// 2107 <test_malloc+0x92>
    211a:	0d 81 00 00 	LDI        $65536,R1
    211b:	0c c0 01 06 	STO        R1,($262)
    211c:	04 c0 01 04 	STO        R0,($260)
    211d:	05 81 00 01 	LDI        $65537,R0
    211e:	04 c0 01 06 	STO        R0,($262)
    211f:	1b c1 40 00 	MOV        R5,R3
    2120:	18 84 40 00 	ADD        R1,R3
    2121:	13 c1 40 00 	MOV        R5,R2
    2122:	04 80 01 0b 	LOD        ($267),R0
    2123:	04 00 00 00 	CMP        $0,R0
    2124:	78 9b ff fd 	BNZ        @0x00002122	// 2122 <test_malloc+0xad>
    2125:	0c 84 80 00 	LOD        (R2),R1
    2126:	08 40 00 ff 	AND        $255,R1
    2127:	04 80 01 0b 	LOD        ($267),R0
    2128:	04 00 00 00 	CMP        $0,R0
    2129:	78 9b ff fd 	BNZ        @0x00002127	// 2127 <test_malloc+0xb2>
    212a:	0c c0 01 0b 	STO        R1,($267)
    212b:	0c 84 80 00 	LOD        (R2),R1
    212c:	08 40 ff 00 	AND        $65280,R1
    212d:	09 c0 00 08 	ASR        $8,R1
    212e:	04 80 01 0b 	LOD        ($267),R0
    212f:	04 00 00 00 	CMP        $0,R0
    2130:	78 9b ff fd 	BNZ        @0x0000212e	// 212e <test_malloc+0xb9>
    2131:	0c c0 01 0b 	STO        R1,($267)
    2132:	10 80 00 01 	ADD        $1,R2
    2133:	14 04 c0 00 	CMP        R3,R2
    2134:	78 9b ff ed 	BNZ        @0x00002122	// 2122 <test_malloc+0xad>
    2135:	05 81 00 00 	LDI        $65536,R0
    2136:	04 c0 01 06 	STO        R0,($262)
    2137:	0c 87 40 00 	LOD        (SP),R1
    2138:	03 c3 c0 02 	MOV        $2+PC,R0
    2139:	7c 87 c0 00 	LJMP       @0x0000206c	// 206c <free>
    213a:	00 00 20 6c 
    213b:	0b c1 c0 00 	MOV        R7,R1
    213c:	03 c3 c0 02 	MOV        $2+PC,R0
    213d:	7c 87 c0 00 	LJMP       @0x0000206c	// 206c <free>
    213e:	00 00 20 6c 
    213f:	0b c1 80 00 	MOV        R6,R1
    2140:	03 c3 c0 02 	MOV        $2+PC,R0
    2141:	7c 87 c0 00 	LJMP       @0x0000206c	// 206c <free>
    2142:	00 00 20 6c 
    2143:	0b c1 40 00 	MOV        R5,R1
    2144:	03 c3 c0 02 	MOV        $2+PC,R0
    2145:	7c 87 c0 00 	LJMP       @0x0000206c	// 206c <free>
    2146:	00 00 20 6c 
    2147:	04 87 40 03 	LOD        3(SP),R0
    2148:	2c 87 40 04 	LOD        4(SP),R5
    2149:	34 87 40 05 	LOD        5(SP),R6
    214a:	3c 87 40 06 	LOD        6(SP),R7
    214b:	44 87 40 07 	LOD        7(SP),R8
    214c:	4c 87 40 08 	LOD        8(SP),R9
    214d:	54 87 40 09 	LOD        9(SP),R10
    214e:	5c 87 40 0a 	LOD        10(SP),R11
    214f:	64 87 40 0b 	LOD        11(SP),R12
    2150:	68 80 00 0c 	ADD        $12,SP
    2151:	7b c0 00 00 	JMP        R0

00002152 <zip_write>:
    2152:	15 80 00 00 	CLR        R2
    2153:	14 c0 01 04 	STO        R2,($260)
    2154:	15 81 00 01 	LDI        $65537,R2
    2155:	14 c0 01 06 	STO        R2,($262)
    2156:	23 c0 40 00 	MOV        R1,R4
    2157:	20 81 00 00 	ADD        $65536,R4
    2158:	14 80 01 0b 	LOD        ($267),R2
    2159:	14 00 00 00 	CMP        $0,R2
    215a:	78 9b ff fd 	BNZ        @0x00002158	// 2158 <zip_write+0x6>
    215b:	1c 84 40 00 	LOD        (R1),R3
    215c:	18 40 00 ff 	AND        $255,R3
    215d:	14 80 01 0b 	LOD        ($267),R2
    215e:	14 00 00 00 	CMP        $0,R2
    215f:	78 9b ff fd 	BNZ        @0x0000215d	// 215d <zip_write+0xb>
    2160:	1c c0 01 0b 	STO        R3,($267)
    2161:	1c 84 40 00 	LOD        (R1),R3
    2162:	18 40 ff 00 	AND        $65280,R3
    2163:	19 c0 00 08 	ASR        $8,R3
    2164:	14 80 01 0b 	LOD        ($267),R2
    2165:	14 00 00 00 	CMP        $0,R2
    2166:	78 9b ff fd 	BNZ        @0x00002164	// 2164 <zip_write+0x12>
    2167:	1c c0 01 0b 	STO        R3,($267)
    2168:	08 80 00 01 	ADD        $1,R1
    2169:	0c 05 00 00 	CMP        R4,R1
    216a:	78 9b ff ed 	BNZ        @0x00002158	// 2158 <zip_write+0x6>
    216b:	0d 81 00 00 	LDI        $65536,R1
    216c:	0c c0 01 06 	STO        R1,($262)
    216d:	7b c0 00 00 	JMP        R0

0000216e <singlelift>:
    216e:	14 00 00 01 	CMP        $1,R2
    216f:	78 88 00 67 	BLT        @0x000021d7	// 21d7 <singlelift+0x69>
    2170:	68 00 00 0e 	SUB        $14,SP
    2171:	2c c7 40 06 	STO        R5,$6(SP)
    2172:	34 c7 40 07 	STO        R6,$7(SP)
    2173:	3c c7 40 08 	STO        R7,$8(SP)
    2174:	44 c7 40 09 	STO        R8,$9(SP)
    2175:	4c c7 40 0a 	STO        R9,$10(SP)
    2176:	54 c7 40 0b 	STO        R10,$11(SP)
    2177:	5c c7 40 0c 	STO        R11,$12(SP)
    2178:	64 c7 40 0d 	STO        R12,$13(SP)
    2179:	33 c0 80 00 	MOV        R2,R6
    217a:	32 04 40 00 	MPY        R1,R6
    217b:	2b c1 80 00 	MOV        R6,R5
    217c:	29 40 00 1f 	LSR        $31,R5
    217d:	28 85 80 00 	ADD        R6,R5
    217e:	29 c0 00 01 	ASR        $1,R5
    217f:	33 c0 9f ff 	MOV        $-1+R2,R6
    2180:	34 c7 40 03 	STO        R6,$3(SP)
    2181:	33 c0 80 00 	MOV        R2,R6
    2182:	31 c0 00 01 	ASR        $1,R6
    2183:	34 c7 40 01 	STO        R6,$1(SP)
    2184:	5b c0 c0 00 	MOV        R3,R11
    2185:	1b c1 00 00 	MOV        R4,R3
    2186:	18 85 40 00 	ADD        R5,R3
    2187:	1c c7 40 00 	STO        R3,(SP)
    2188:	63 c1 00 00 	MOV        R4,R12
    2189:	33 c1 00 00 	MOV        R4,R6
    218a:	30 84 80 00 	ADD        R2,R6
    218b:	34 c7 40 02 	STO        R6,$2(SP)
    218c:	13 03 ff fe 	BREV       $-2,R2
    218d:	1c 87 40 01 	LOD        1(SP),R3
    218e:	18 84 80 00 	ADD        R2,R3
    218f:	13 c0 c0 00 	MOV        R3,R2
    2190:	10 84 c0 00 	ADD        R3,R2
    2191:	14 c7 40 05 	STO        R2,$5(SP)
    2192:	34 87 40 01 	LOD        1(SP),R6
    2193:	13 c1 9f ff 	MOV        $-1+R6,R2
    2194:	12 04 40 00 	MPY        R1,R2
    2195:	10 85 40 00 	ADD        R5,R2
    2196:	14 c7 40 04 	STO        R2,$4(SP)
    2197:	23 c2 c0 00 	MOV        R11,R4
    2198:	43 c3 00 00 	MOV        R12,R8
    2199:	34 87 40 00 	LOD        (SP),R6
    219a:	14 86 c0 00 	LOD        (R11),R2
    219b:	3c 86 c0 02 	LOD        2(R11),R7
    219c:	2b c0 80 00 	MOV        R2,R5
    219d:	28 85 c0 00 	ADD        R7,R5
    219e:	28 80 00 02 	ADD        $2,R5
    219f:	29 c0 00 02 	ASR        $2,R5
    21a0:	1c 86 c0 01 	LOD        1(R11),R3
    21a1:	28 84 c0 00 	ADD        R3,R5
    21a2:	14 c5 80 00 	STO        R2,(R6)
    21a3:	2c c7 00 00 	STO        R5,(R12)
    21a4:	14 87 40 01 	LOD        1(SP),R2
    21a5:	1b c1 40 00 	MOV        R5,R3
    21a6:	14 00 00 02 	CMP        $2,R2
    21a7:	78 88 00 1a 	BLT        @0x000021c2	// 21c2 <singlelift+0x54>
    21a8:	53 c2 c0 00 	MOV        R11,R10
    21a9:	1c 87 40 05 	LOD        5(SP),R3
    21aa:	50 84 c0 00 	ADD        R3,R10
    21ab:	30 84 40 00 	ADD        R1,R6
    21ac:	40 84 40 00 	ADD        R1,R8
    21ad:	20 80 00 02 	ADD        $2,R4
    21ae:	1c 85 00 01 	LOD        1(R4),R3
    21af:	4c 85 00 02 	LOD        2(R4),R9
    21b0:	13 c0 c0 00 	MOV        R3,R2
    21b1:	10 85 40 00 	ADD        R5,R2
    21b2:	10 80 00 02 	ADD        $2,R2
    21b3:	11 c0 00 02 	ASR        $2,R2
    21b4:	10 85 c0 00 	ADD        R7,R2
    21b5:	14 c5 80 00 	STO        R2,(R6)
    21b6:	13 c2 40 00 	MOV        R9,R2
    21b7:	10 85 c0 00 	ADD        R7,R2
    21b8:	11 c0 00 01 	ASR        $1,R2
    21b9:	18 04 80 00 	SUB        R2,R3
    21ba:	2c c6 00 00 	STO        R5,(R8)
    21bb:	3b c2 40 00 	MOV        R9,R7
    21bc:	2b c0 c0 00 	MOV        R3,R5
    21bd:	24 06 80 00 	CMP        R10,R4
    21be:	78 9b ff ec 	BNZ        @0x000021ab	// 21ab <singlelift+0x3d>
    21bf:	34 87 40 04 	LOD        4(SP),R6
    21c0:	30 87 00 00 	ADD        R12,R6
    21c1:	78 80 00 00 	BRA        @0x000021c2	// 21c2 <singlelift+0x54>
    21c2:	14 87 40 03 	LOD        3(SP),R2
    21c3:	30 84 80 00 	ADD        R2,R6
    21c4:	1c c5 80 00 	STO        R3,(R6)
    21c5:	58 84 40 00 	ADD        R1,R11
    21c6:	1c 87 40 00 	LOD        (SP),R3
    21c7:	18 80 00 01 	ADD        $1,R3
    21c8:	1c c7 40 00 	STO        R3,(SP)
    21c9:	60 80 00 01 	ADD        $1,R12
    21ca:	34 87 40 02 	LOD        2(SP),R6
    21cb:	34 07 00 00 	CMP        R12,R6
    21cc:	78 9b ff ca 	BNZ        @0x00002197	// 2197 <singlelift+0x29>
    21cd:	2c 87 40 06 	LOD        6(SP),R5
    21ce:	34 87 40 07 	LOD        7(SP),R6
    21cf:	3c 87 40 08 	LOD        8(SP),R7
    21d0:	44 87 40 09 	LOD        9(SP),R8
    21d1:	4c 87 40 0a 	LOD        10(SP),R9
    21d2:	54 87 40 0b 	LOD        11(SP),R10
    21d3:	5c 87 40 0c 	LOD        12(SP),R11
    21d4:	64 87 40 0d 	LOD        13(SP),R12
    21d5:	68 80 00 0e 	ADD        $14,SP
    21d6:	7b c0 00 00 	JMP        R0
    21d7:	7b c0 00 00 	JMP        R0

000021d8 <lifting>:
    21d8:	68 00 00 15 	SUB        $21,SP
    21d9:	2c c7 40 0d 	STO        R5,$13(SP)
    21da:	34 c7 40 0e 	STO        R6,$14(SP)
    21db:	3c c7 40 0f 	STO        R7,$15(SP)
    21dc:	44 c7 40 10 	STO        R8,$16(SP)
    21dd:	4c c7 40 11 	STO        R9,$17(SP)
    21de:	54 c7 40 12 	STO        R10,$18(SP)
    21df:	5c c7 40 13 	STO        R11,$19(SP)
    21e0:	64 c7 40 14 	STO        R12,$20(SP)
    21e1:	63 c0 40 00 	MOV        R1,R12
    21e2:	14 c7 40 07 	STO        R2,$7(SP)
    21e3:	1c c7 40 08 	STO        R3,$8(SP)
    21e4:	0c c7 40 06 	STO        R1,$6(SP)
    21e5:	0d 80 00 03 	LDI        $3,R1
    21e6:	0c c7 40 0a 	STO        R1,$10(SP)
    21e7:	13 c3 00 00 	MOV        R12,R2
    21e8:	78 80 00 89 	BRA        @0x00002272	// 2272 <lifting+0x9a>
    21e9:	1b c2 80 00 	MOV        R10,R3
    21ea:	3b c2 c0 00 	MOV        R11,R7
    21eb:	2c 87 40 00 	LOD        (SP),R5
    21ec:	0c 86 80 00 	LOD        (R10),R1
    21ed:	34 86 80 02 	LOD        2(R10),R6
    21ee:	23 c0 40 00 	MOV        R1,R4
    21ef:	20 85 80 00 	ADD        R6,R4
    21f0:	20 80 00 02 	ADD        $2,R4
    21f1:	21 c0 00 02 	ASR        $2,R4
    21f2:	14 86 80 01 	LOD        1(R10),R2
    21f3:	20 84 80 00 	ADD        R2,R4
    21f4:	0c c5 40 00 	STO        R1,(R5)
    21f5:	24 c6 c0 00 	STO        R4,(R11)
    21f6:	14 87 40 01 	LOD        1(SP),R2
    21f7:	14 00 00 02 	CMP        $2,R2
    21f8:	78 88 00 1a 	BLT        @0x00002213	// 2213 <lifting+0x3b>
    21f9:	4c 87 40 04 	LOD        4(SP),R9
    21fa:	48 86 80 00 	ADD        R10,R9
    21fb:	28 87 00 00 	ADD        R12,R5
    21fc:	38 87 00 00 	ADD        R12,R7
    21fd:	18 80 00 02 	ADD        $2,R3
    21fe:	14 84 c0 01 	LOD        1(R3),R2
    21ff:	44 84 c0 02 	LOD        2(R3),R8
    2200:	0b c0 80 00 	MOV        R2,R1
    2201:	08 85 00 00 	ADD        R4,R1
    2202:	08 80 00 02 	ADD        $2,R1
    2203:	09 c0 00 02 	ASR        $2,R1
    2204:	08 85 80 00 	ADD        R6,R1
    2205:	0c c5 40 00 	STO        R1,(R5)
    2206:	0b c2 00 00 	MOV        R8,R1
    2207:	08 85 80 00 	ADD        R6,R1
    2208:	09 c0 00 01 	ASR        $1,R1
    2209:	10 04 40 00 	SUB        R1,R2
    220a:	24 c5 c0 00 	STO        R4,(R7)
    220b:	23 c0 80 00 	MOV        R2,R4
    220c:	33 c2 00 00 	MOV        R8,R6
    220d:	1c 06 40 00 	CMP        R9,R3
    220e:	78 9b ff ec 	BNZ        @0x000021fb	// 21fb <lifting+0x23>
    220f:	2c 87 40 05 	LOD        5(SP),R5
    2210:	28 86 c0 00 	ADD        R11,R5
    2211:	0c 87 40 00 	LOD        (SP),R1
    2212:	78 80 00 02 	BRA        @0x00002215	// 2215 <lifting+0x3d>
    2213:	13 c1 00 00 	MOV        R4,R2
    2214:	0b c1 40 00 	MOV        R5,R1
    2215:	1c 87 40 03 	LOD        3(SP),R3
    2216:	28 84 c0 00 	ADD        R3,R5
    2217:	14 c5 40 00 	STO        R2,(R5)
    2218:	50 87 00 00 	ADD        R12,R10
    2219:	08 80 00 01 	ADD        $1,R1
    221a:	0c c7 40 00 	STO        R1,(SP)
    221b:	58 80 00 01 	ADD        $1,R11
    221c:	14 87 40 02 	LOD        2(SP),R2
    221d:	14 06 c0 00 	CMP        R11,R2
    221e:	78 9b ff ca 	BNZ        @0x000021e9	// 21e9 <lifting+0x11>
    221f:	5c 87 40 0c 	LOD        12(SP),R11
    2220:	54 87 40 07 	LOD        7(SP),R10
    2221:	1c 87 40 09 	LOD        9(SP),R3
    2222:	50 84 c0 00 	ADD        R3,R10
    2223:	0c 87 40 07 	LOD        7(SP),R1
    2224:	14 87 40 06 	LOD        6(SP),R2
    2225:	08 84 80 00 	ADD        R2,R1
    2226:	0c c7 40 02 	STO        R1,$2(SP)
    2227:	54 c7 40 00 	STO        R10,(SP)
    2228:	54 87 40 0b 	LOD        11(SP),R10
    2229:	1b c2 c0 00 	MOV        R11,R3
    222a:	3b c2 80 00 	MOV        R10,R7
    222b:	2c 87 40 00 	LOD        (SP),R5
    222c:	0c 86 c0 00 	LOD        (R11),R1
    222d:	34 86 c0 02 	LOD        2(R11),R6
    222e:	23 c0 40 00 	MOV        R1,R4
    222f:	20 85 80 00 	ADD        R6,R4
    2230:	20 80 00 02 	ADD        $2,R4
    2231:	21 c0 00 02 	ASR        $2,R4
    2232:	14 86 c0 01 	LOD        1(R11),R2
    2233:	20 84 80 00 	ADD        R2,R4
    2234:	0c c5 40 00 	STO        R1,(R5)
    2235:	24 c6 80 00 	STO        R4,(R10)
    2236:	0c 87 40 01 	LOD        1(SP),R1
    2237:	0c 00 00 02 	CMP        $2,R1
    2238:	78 88 00 1a 	BLT        @0x00002253	// 2253 <lifting+0x7b>
    2239:	4c 87 40 04 	LOD        4(SP),R9
    223a:	48 86 c0 00 	ADD        R11,R9
    223b:	28 87 00 00 	ADD        R12,R5
    223c:	38 87 00 00 	ADD        R12,R7
    223d:	18 80 00 02 	ADD        $2,R3
    223e:	14 84 c0 01 	LOD        1(R3),R2
    223f:	44 84 c0 02 	LOD        2(R3),R8
    2240:	0b c0 80 00 	MOV        R2,R1
    2241:	08 85 00 00 	ADD        R4,R1
    2242:	08 80 00 02 	ADD        $2,R1
    2243:	09 c0 00 02 	ASR        $2,R1
    2244:	08 85 80 00 	ADD        R6,R1
    2245:	0c c5 40 00 	STO        R1,(R5)
    2246:	0b c2 00 00 	MOV        R8,R1
    2247:	08 85 80 00 	ADD        R6,R1
    2248:	09 c0 00 01 	ASR        $1,R1
    2249:	10 04 40 00 	SUB        R1,R2
    224a:	24 c5 c0 00 	STO        R4,(R7)
    224b:	23 c0 80 00 	MOV        R2,R4
    224c:	33 c2 00 00 	MOV        R8,R6
    224d:	1c 06 40 00 	CMP        R9,R3
    224e:	78 9b ff ec 	BNZ        @0x0000223b	// 223b <lifting+0x63>
    224f:	2c 87 40 05 	LOD        5(SP),R5
    2250:	28 86 80 00 	ADD        R10,R5
    2251:	0c 87 40 00 	LOD        (SP),R1
    2252:	78 80 00 02 	BRA        @0x00002255	// 2255 <lifting+0x7d>
    2253:	13 c1 00 00 	MOV        R4,R2
    2254:	0b c1 40 00 	MOV        R5,R1
    2255:	1c 87 40 03 	LOD        3(SP),R3
    2256:	28 84 c0 00 	ADD        R3,R5
    2257:	14 c5 40 00 	STO        R2,(R5)
    2258:	58 87 00 00 	ADD        R12,R11
    2259:	08 80 00 01 	ADD        $1,R1
    225a:	0c c7 40 00 	STO        R1,(SP)
    225b:	50 80 00 01 	ADD        $1,R10
    225c:	14 87 40 02 	LOD        2(SP),R2
    225d:	14 06 80 00 	CMP        R10,R2
    225e:	78 9b ff ca 	BNZ        @0x00002229	// 2229 <lifting+0x51>
    225f:	14 87 40 01 	LOD        1(SP),R2
    2260:	0c 87 40 06 	LOD        6(SP),R1
    2261:	09 40 00 1f 	LSR        $31,R1
    2262:	1c 87 40 06 	LOD        6(SP),R3
    2263:	08 84 c0 00 	ADD        R3,R1
    2264:	09 c0 00 01 	ASR        $1,R1
    2265:	1c 87 40 09 	LOD        9(SP),R3
    2266:	08 84 c0 00 	ADD        R3,R1
    2267:	1c 87 40 07 	LOD        7(SP),R3
    2268:	18 84 40 00 	ADD        R1,R3
    2269:	1c c7 40 07 	STO        R3,$7(SP)
    226a:	1c 87 40 08 	LOD        8(SP),R3
    226b:	18 84 40 00 	ADD        R1,R3
    226c:	1c c7 40 08 	STO        R3,$8(SP)
    226d:	0c 87 40 0a 	LOD        10(SP),R1
    226e:	08 83 ff ff 	ADD        $-1,R1
    226f:	0c c7 40 0a 	STO        R1,$10(SP)
    2270:	78 90 00 36 	BZ         @0x000022a7	// 22a7 <lifting+0xcf>
    2271:	14 c7 40 06 	STO        R2,$6(SP)
    2272:	14 00 00 00 	CMP        $0,R2
    2273:	78 a0 00 0c 	BGT        @0x00002280	// 2280 <lifting+0xa8>
    2274:	1b c0 80 00 	MOV        R2,R3
    2275:	13 c3 00 00 	MOV        R12,R2
    2276:	12 04 c0 00 	MPY        R3,R2
    2277:	0b c0 80 00 	MOV        R2,R1
    2278:	09 40 00 1f 	LSR        $31,R1
    2279:	08 84 80 00 	ADD        R2,R1
    227a:	09 c0 00 01 	ASR        $1,R1
    227b:	0c c7 40 09 	STO        R1,$9(SP)
    227c:	13 c0 c0 00 	MOV        R3,R2
    227d:	11 c0 00 01 	ASR        $1,R2
    227e:	0b c0 c0 00 	MOV        R3,R1
    227f:	78 83 ff e1 	BRA        @0x00002261	// 2261 <lifting+0x89>
    2280:	0b c0 80 00 	MOV        R2,R1
    2281:	1b c0 80 00 	MOV        R2,R3
    2282:	13 c3 00 00 	MOV        R12,R2
    2283:	12 04 40 00 	MPY        R1,R2
    2284:	0b c0 80 00 	MOV        R2,R1
    2285:	09 40 00 1f 	LSR        $31,R1
    2286:	08 84 80 00 	ADD        R2,R1
    2287:	09 c0 00 01 	ASR        $1,R1
    2288:	0c c7 40 09 	STO        R1,$9(SP)
    2289:	14 87 40 06 	LOD        6(SP),R2
    228a:	11 c0 00 01 	ASR        $1,R2
    228b:	14 c7 40 01 	STO        R2,$1(SP)
    228c:	18 83 ff ff 	ADD        $-1,R3
    228d:	1c c7 40 03 	STO        R3,$3(SP)
    228e:	0c 87 40 07 	LOD        7(SP),R1
    228f:	0c c7 40 0b 	STO        R1,$11(SP)
    2290:	14 87 40 08 	LOD        8(SP),R2
    2291:	1c 87 40 09 	LOD        9(SP),R3
    2292:	10 84 c0 00 	ADD        R3,R2
    2293:	14 c7 40 00 	STO        R2,(SP)
    2294:	5c 87 40 08 	LOD        8(SP),R11
    2295:	0b c2 c0 00 	MOV        R11,R1
    2296:	14 87 40 06 	LOD        6(SP),R2
    2297:	08 84 80 00 	ADD        R2,R1
    2298:	0c c7 40 02 	STO        R1,$2(SP)
    2299:	0c 87 40 01 	LOD        1(SP),R1
    229a:	1b 03 ff fe 	BREV       $-2,R3
    229b:	08 84 c0 00 	ADD        R3,R1
    229c:	08 84 40 00 	ADD        R1,R1
    229d:	0c c7 40 04 	STO        R1,$4(SP)
    229e:	14 87 40 01 	LOD        1(SP),R2
    229f:	0b c0 9f ff 	MOV        $-1+R2,R1
    22a0:	0a 07 00 00 	MPY        R12,R1
    22a1:	1c 87 40 09 	LOD        9(SP),R3
    22a2:	08 84 c0 00 	ADD        R3,R1
    22a3:	0c c7 40 05 	STO        R1,$5(SP)
    22a4:	54 87 40 07 	LOD        7(SP),R10
    22a5:	5c c7 40 0c 	STO        R11,$12(SP)
    22a6:	78 83 ff 42 	BRA        @0x000021e9	// 21e9 <lifting+0x11>
    22a7:	2c 87 40 0d 	LOD        13(SP),R5
    22a8:	34 87 40 0e 	LOD        14(SP),R6
    22a9:	3c 87 40 0f 	LOD        15(SP),R7
    22aa:	44 87 40 10 	LOD        16(SP),R8
    22ab:	4c 87 40 11 	LOD        17(SP),R9
    22ac:	54 87 40 12 	LOD        18(SP),R10
    22ad:	5c 87 40 13 	LOD        19(SP),R11
    22ae:	64 87 40 14 	LOD        20(SP),R12
    22af:	68 80 00 15 	ADD        $21,SP
    22b0:	7b c0 00 00 	JMP        R0

000022b1 <msg1>:
    22b1:	00 00 00 44 00 00 00 61 00 00 00 74 00 00 00 61     ...D...a...t...a
    22b5:	00 00 00 20 00 00 00 72 00 00 00 64 00 00 00 79     ... ...r...d...y
    22b9:	00 00 00 20 00 00 00 20 00 00 00 20 00 00 00 20     ... ... ... ... 
    22bd:	00 00 00 20 00 00 00 0d 00 00 00 0a 00 00 00 00     ... ............

000022c1 <msg>:
    22c1:	00 00 00 48 00 00 00 65 00 00 00 6c 00 00 00 6c     ...H...e...l...l
    22c5:	00 00 00 6f 00 00 00 2c 00 00 00 20 00 00 00 77     ...o...,... ...w
    22c9:	00 00 00 6f 00 00 00 72 00 00 00 6c 00 00 00 64     ...o...r...l...d
    22cd:	00 00 00 21 00 00 00 0d 00 00 00 0a 00 00 00 00     ...!............

000022d1 <XULA_BUSY>:
    22d1:	40 00 00 00                                         @...

000022d2 <READY_FOR_XMIT>:
    22d2:	40 00 40 00                                         @.@.

000022d3 <LED_OFF>:
    22d3:	00 02 00 00                                         ....

000022d4 <LED_ON>:
    22d4:	00 02 00 02                                         ....
